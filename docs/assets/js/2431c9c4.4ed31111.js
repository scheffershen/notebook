"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[81835],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var a=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),u=p(t),d=i,h=u["".concat(o,".").concat(d)]||u[d]||c[d]||s;return t?a.createElement(h,l(l({ref:n},m),{},{components:t})):a.createElement(h,l({ref:n},m))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,l=new Array(s);l[0]=d;var r={};for(var o in n)hasOwnProperty.call(n,o)&&(r[o]=n[o]);r.originalType=e,r[u]="string"==typeof e?e:i,l[1]=r;for(var p=2;p<s;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},76027:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var a=t(87462),i=(t(67294),t(3905));const s={},l="packagist saml",r={unversionedId:"Symfony/Authentication/SAML/packagist-saml",id:"Symfony/Authentication/SAML/packagist-saml",title:"packagist saml",description:"simplesamlphp/saml2",source:"@site/docs/Symfony/Authentication/SAML/packagist-saml.md",sourceDirName:"Symfony/Authentication/SAML",slug:"/Symfony/Authentication/SAML/packagist-saml",permalink:"/notebook/docs/Symfony/Authentication/SAML/packagist-saml",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Symfony/Authentication/SAML/packagist-saml.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LMS SSO integration",permalink:"/notebook/docs/Symfony/Authentication/SAML/keycloak/LMS SSO integration"},next:{title:"REAMDME",permalink:"/notebook/docs/Symfony/Authentication/SSO/Roche"}},o={},p=[{value:"simplesamlphp/saml2",id:"simplesamlphpsaml2",level:2},{value:"simplesamlphp/simplesamlphp",id:"simplesamlphpsimplesamlphp",level:2},{value:"onelogin/php-saml",id:"oneloginphp-saml",level:2},{value:"OneLogin vs SimpleSAMLphp",id:"onelogin-vs-simplesamlphp",level:2},{value:"hslavich/oneloginsaml-bundle",id:"hslavichoneloginsaml-bundle",level:2},{value:"adactive-sas/saml2-bridge-bundle",id:"adactive-sassaml2-bridge-bundle",level:2}],m={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"packagist-saml"},"packagist saml"),(0,i.kt)("h2",{id:"simplesamlphpsaml2"},"simplesamlphp/saml2"),(0,i.kt)("p",null,"SAML2 PHP library from SimpleSAMLphp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"    // Use Composers autoloading\n    require 'vendor/autoload.php';\n\n    // Implement the Container interface (out of scope for example)\n    require 'container.php';\n    \\SimpleSAML\\SAML2\\Compat\\ContainerSingleton::setContainer($container);\n\n    // Create Issuer\n    $issuer = new \\SimpleSAML\\SAML2\\XML\\saml\\Issuer('https://sp.example.edu');\n\n    // Set up an AuthnRequest\n    $request = new \\SimpleSAML\\SAML2\\XML\\samlp\\AuthnRequest(\n        $issuer,\n        $container->generateId(),\n        null,\n        'https://idp.example.edu'\n    );\n\n    // Send it off using the HTTP-Redirect binding\n    $binding = new \\SimpleSAML\\SAML2\\HTTPRedirect();\n    $binding->send($request);\n")),(0,i.kt)("h2",{id:"simplesamlphpsimplesamlphp"},"simplesamlphp/simplesamlphp"),(0,i.kt)("p",null,"A PHP implementation of a SAML 2.0 service provider and identity provider."),(0,i.kt)("h2",{id:"oneloginphp-saml"},"onelogin/php-saml"),(0,i.kt)("h2",{id:"onelogin-vs-simplesamlphp"},"OneLogin vs SimpleSAMLphp"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"What is OneLogin?"),": OneLogin provides a cloud-based identity and access management (IAM) solution that offers simple single sign-on (SSO), making it easier for companies to secure and manage access to web applications both in the cloud and behind the firewall."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"What is SimpleSAMLphp?"),": It is an award-winning application written in native PHP that deals with authentication. It supports some other identity protocols and frameworks, such as Shibboleth 1.3, A-Select, CAS, OpenID, WS-Federation or OAuth, and is easily extendable, so you can develop your own modules if you like."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"What are some alternatives to OneLogin and SimpleSAMLphp?"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ping Identity"),": It provides an identity and access management platform enabling the right people access to the right things seamlessly and securely.")))),(0,i.kt)("h2",{id:"hslavichoneloginsaml-bundle"},"hslavich/oneloginsaml-bundle"),(0,i.kt)("p",null,"OneLogin SAML Bundle for Symfony"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"## config/packages/hslavich_onelogin_saml.yaml\nhslavich_onelogin_saml:\n    # Basic settings\n    idp:\n        entityId: 'http://id.example.com/saml2/idp/metadata.php'\n        singleSignOnService:\n            url: 'http://id.example.com/saml2/idp/SSOService.php'\n            binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'\n        singleLogoutService:\n            url: 'http://id.example.com/saml2/idp/SingleLogoutService.php'\n            binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'\n        x509cert: ''\n    sp:\n        entityId: 'http://myapp.com/app_dev.php/saml/metadata'\n        assertionConsumerService:\n            url: 'http://myapp.com/app_dev.php/saml/acs'\n            binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST'\n        singleLogoutService:\n            url: 'http://myapp.com/app_dev.php/saml/logout'\n            binding: 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect'\n        privateKey: ''    \n    # Optional settings\n    baseurl: 'http://myapp.com'\n    strict: true\n    debug: true    \n    security:\n        nameIdEncrypted: false\n        authnRequestsSigned: false\n        logoutRequestSigned: false\n        logoutResponseSigned: false\n        wantMessagesSigned: false\n        wantAssertionsSigned: false\n        wantNameIdEncrypted: false\n        requestedAuthnContext: true\n        signMetadata: false\n        wantXMLValidation: true\n        relaxDestinationValidation: false\n        destinationStrictlyMatches: true\n        rejectUnsolicitedResponsesWithInResponseTo: false\n        signatureAlgorithm: 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'\n        digestAlgorithm: 'http://www.w3.org/2001/04/xmlenc#sha256'\n    contactPerson:\n        technical:\n            givenName: 'Tech User'\n            emailAddress: 'techuser@example.com'\n        support:\n            givenName: 'Support User'\n            emailAddress: 'supportuser@example.com'\n        administrative:\n            givenName: 'Administrative User'\n            emailAddress: 'administrativeuser@example.com'\n    organization:\n        en:\n            name: 'Example'\n            displayname: 'Example'\n            url: 'http://example.com'\n\n## config/packages/security.yaml\nsecurity:\n    # ...\n\n    providers:\n        saml_provider:\n            # Basic provider instantiates a user with default roles\n            saml:\n                user_class: 'AppBundle\\Entity\\User'\n                default_roles: ['ROLE_USER']\n\n    firewalls:\n        app:\n            pattern: ^/\n            saml:\n                # Match SAML attribute 'uid' with username.\n                # Uses getNameId() method by default.\n                username_attribute: uid\n                # Use the attribute's friendlyName instead of the name \n                use_attribute_friendly_name: true\n                check_path: saml_acs\n                login_path: saml_login\n            logout:\n                path: saml_logout\n\n    access_control:\n        - { path: ^/saml/login, roles: PUBLIC_ACCESS }\n        - { path: ^/saml/metadata, roles: PUBLIC_ACCESS }\n        - { path: ^/, roles: ROLE_USER }  \n        \n## config/routes.yaml    \nhslavich_saml_sp:\n    resource: \"@HslavichOneloginSamlBundle/Resources/config/routing.yml\"                  \n")),(0,i.kt)("h2",{id:"adactive-sassaml2-bridge-bundle"},"adactive-sas/saml2-bridge-bundle"),(0,i.kt)("p",null,"last updated 2018"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"adactive_sas_saml2_bridge:\n    hosted:\n        metadata_route: name_of_the_route_of_metadata_url\n        identity_provider:\n            enabled: true\n            service_provider_repository: service.name.of.entity_repository\n            sso_route: name_of_the_route_of_the_single_sign_on_url\n            sls_route: name_of_the_route_of_the_single_logout_url\n            login_route: name_of_the_route_of_the_login_url\n            logout_route: name_of_the_route_of_the_logout_url\n            public_key: %idp_public_key_file_path%\n            private_key: %idp_private_key_file_path%\n\n            logout:\n                handlers: [adactive_sas_saml2_bridge.logout.handler]\n")))}u.isMDXComponent=!0}}]);