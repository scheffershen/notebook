"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[54022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[m]="string"==typeof e?e:o,s[1]=u;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88412:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={},s="Les Turbos Frames",u={unversionedId:"Symfony/Front-end/Symfony UX Turbo/Les Turbos Frames",id:"Symfony/Front-end/Symfony UX Turbo/Les Turbos Frames",title:"Les Turbos Frames",description:"Il s\u2019agit de nouvelles balises HTML ajout\xe9es par Turbo, qui auront pour effet de rendre une partie de template ind\xe9pendante. Cela permet, entre autres, de ne pas recharger le reste de la page si une interaction est effectu\xe9e dans ces balises (cliquer sur un lien, valider un formulaire, etc.).",source:"@site/docs/Symfony/Front-end/Symfony UX Turbo/Les Turbos Frames.md",sourceDirName:"Symfony/Front-end/Symfony UX Turbo",slug:"/Symfony/Front-end/Symfony UX Turbo/Les Turbos Frames",permalink:"/notebook/docs/Symfony/Front-end/Symfony UX Turbo/Les Turbos Frames",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Symfony/Front-end/Symfony UX Turbo/Les Turbos Frames.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Stimulus",permalink:"/notebook/docs/Symfony/Front-end/Stimulus/"},next:{title:"Tutoriel Symfony UX Turbo (Hotwire)",permalink:"/notebook/docs/Symfony/Front-end/Symfony UX Turbo/Tutoriel Symfony UX Turbo (Hotwire)"}},i={},l=[{value:"Conclusion sur Symfony X Turbo",id:"conclusion-sur-symfony-x-turbo",level:2}],c={toc:l};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"les-turbos-frames"},"Les Turbos Frames"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Il s\u2019agit de nouvelles balises HTML ajout\xe9es par Turbo, qui auront pour effet de rendre une partie de template ind\xe9pendante"),". Cela permet, entre autres, de ne pas recharger le reste de la page si une interaction est effectu\xe9e dans ces balises (cliquer sur un lien, valider un ",(0,o.kt)("em",{parentName:"p"},"formulaire"),", etc.)."),(0,o.kt)("p",null,"\xc0 la place, une requ\xeate est envoy\xe9e \xe0 l\u2019URL du lien ou en action du formulaire, avec comme indication que cette requ\xeate a \xe9t\xe9 d\xe9clench\xe9e par Turbo."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"{# templates/pages/contact/index.html.twig #}\n\n[...]\n\n<div>\n    <turbo-frame id=\"contact_form\">\n        {% include 'pages/contact/partials/_form.html.twig' with {\n            form: contactForm,\n        } only %}\n    </turbo-frame>\n</div>\n\n[...]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"// src/Controller/PagesController.php\n\n[...]\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\UX\\Turbo\\Stream\\TurboStreamResponse;\n\n[...]\n\npublic function contact(Request $request): Response\n{\n    $form = $this->createForm(ContactType::class);\n    $form->handleRequest($request);\n    \n    if ($form->isSubmitted() && $form->isValid()) {\n        $contactName = $form->get('name')->getData();\n    \n        if (TurboStreamResponse::STREAM_FORMAT === $request->getPreferredFormat()) {\n            // Si la requ\xeate provient de Turbo, on va la traiter ici !\n        }\n    \n        // Si le client ne supporte pas ou n'accepte pas l'utilisation de JavaScript, l'application doit continuer de fonctionner.\n        // Ici, on rajoute un flash message ainsi qu'une redirection classique.\n    \n        $this->addFlash('success', \"Merci pour votre message $contactName !\");\n    \n        return $this->redirectToRoute('app_contact', [], Response::HTTP_SEE_OTHER);\n    }\n    \n    return $this->render('pages/contact/index.html.twig', [\n        'contactForm' => $form->createView(),\n    ]);\n\n[...]\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Les Turbo Streams sont des balises HTML ayant comme attributs des actions visant \xe0 modifier le contenu d\u2019un Turbo Frame existant par un ID cibl\xe9.")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Voici la liste totale des actions disponibles"),", pour vous donner une id\xe9e de ce qu\u2019il est possible de faire :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"append"),(0,o.kt)("li",{parentName:"ul"},"prepend"),(0,o.kt)("li",{parentName:"ul"},"replace"),(0,o.kt)("li",{parentName:"ul"},"update"),(0,o.kt)("li",{parentName:"ul"},"remove")),(0,o.kt)("p",null,"Pour continuer l\u2019exemple, nous allons \xe0 la fois ",(0,o.kt)("em",{parentName:"p"},"vider le formulaire si celui-ci est valide, et afficher un message de confirmation"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'{# templates/pages/contact/success.stream.html.twig #}\n\n{# Mise \xe0 jour du formulaire pour vider les champs #}\n<turbo-stream action="update" target="contact_form">\n    <template>\n        {% include \'pages/contact/partials/_form.html.twig\' with {\n            form: contactForm,\n        } only %}\n    </template>\n</turbo-stream>\n\n{# Ajout d\'un "flash message" au dessus du formulaire, dans la frame "contact_form" #}\n<turbo-stream action="prepend" target="contact_form">\n    <template>\n        <p style="font-weight: bold; color: green">Merci pour votre message {{ contactName }} !</p>\n\n        <hr>\n    </template>\n</turbo-stream>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"// src/Controller/PagesController.php\n\n[...]\n\n$form = $this->createForm(ContactType::class);\n$blankForm = clone $form;\n$form->handleRequest($request);\n\nif ($form->isSubmitted() && $form->isValid()) {\n    $contactName = $form->get('name')->getData();\n\n    if (TurboStreamResponse::STREAM_FORMAT === $request->getPreferredFormat()) {\n        return $this->render('pages/contact/success.stream.html.twig', [\n            'contactName' => $contactName,\n            'contactForm' => $blankForm->createView(),\n        ], new TurboStreamResponse());\n    }\n\n[...]\n")),(0,o.kt)("p",null,"Une derni\xe8re chose : comme je l\u2019ai indiqu\xe9 plus haut, les Turbo Frames sont des parties de templates ind\xe9pendantes, ce qui veut dire qu\u2019",(0,o.kt)("em",{parentName:"p"},"ils peuvent \xeatre charg\xe9s sur n\u2019importe quelle page en lazy-loading !")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'{# templates/pages/produits/list.html.twig #}\n\n[...]\n<turbo-frame id="products_list">\n    <ul>\n        {% for product in products %}\n            <li>{{ product.title }}</li>\n        {% endfor %}\n    </ul>\n</turbo-frame>\n[...]\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'{# templates/pages/home.html.twig #}\n\n[...]\n\n<turbo-frame id="products_list" src="{{ path(\'app_produits\') }}">\n    <p>Chargement de la liste des produits...</p>\n</turbo-frame>\n\n[...]\n')),(0,o.kt)("p",null,"Il reste \xe9norm\xe9ment de choses \xe0 voir avec, comme la possibilit\xe9 de brancher ",(0,o.kt)("inlineCode",{parentName:"p"},"Mercure")," aux streams pour g\xe9rer l\u2019affichage en temps r\xe9el du modification de contenu chez plusieurs clients."),(0,o.kt)("h2",{id:"conclusion-sur-symfony-x-turbo"},"Conclusion sur Symfony X Turbo"),(0,o.kt)("p",null,"Les outils de l\u2019\xe9cosyst\xe8me Hotwire (Stimulus, Turbo) sont tr\xe8s int\xe9ressants \xe0 utiliser, avec une prise en main simple et rapide."))}m.isMDXComponent=!0}}]);