"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8780],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(a),u=r,g=d["".concat(p,".").concat(u)]||d[u]||m[u]||i;return a?n.createElement(g,l(l({ref:t},c),{},{components:a})):n.createElement(g,l({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6014:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const i={},l="xAPIWrapper",o={unversionedId:"xApi/adlnet/xAPIWrapper/README",id:"xApi/adlnet/xAPIWrapper/README",title:"xAPIWrapper",description:"https://github.com/adlnet/xAPIWrapper",source:"@site/docs/xApi/adlnet/xAPIWrapper/README.md",sourceDirName:"xApi/adlnet/xAPIWrapper",slug:"/xApi/adlnet/xAPIWrapper/",permalink:"/notebook/docs/xApi/adlnet/xAPIWrapper/",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/xApi/adlnet/xAPIWrapper/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SCORM-to-xAPI-Wrapper",permalink:"/notebook/docs/xApi/adlnet/SCORM-to-xAPI-Wrapper/"},next:{title:"adlnet/xAPIWrapper",permalink:"/notebook/docs/xApi/adlnet_xAPIWrapper"}},p={},s=[{value:"xapiwrapper.js",id:"xapiwrapperjs",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Installing",id:"installing",level:2},{value:"Downloading the latest release version",id:"downloading-the-latest-release-version",level:3},{value:"Cloning and building the project",id:"cloning-and-building-the-project",level:3},{value:"Building the project",id:"building-the-project",level:4},{value:"Including in your Software.",id:"including-in-your-software",level:4},{value:"Configuration",id:"configuration",level:3},{value:"Launch Parameters",id:"launch-parameters",level:4},{value:"Logging",id:"logging",level:4},{value:"xAPI Launch support",id:"xapi-launch-support",level:4},{value:"Use",id:"use",level:3},{value:"Statements",id:"statements",level:4},{value:"Statement Object (xapistatement.js)",id:"statement-object-xapistatementjs",level:5},{value:"Building a Simple &quot;I Did This&quot;",id:"building-a-simple-i-did-this",level:6},{value:"Adding Descriptors",id:"adding-descriptors",level:6},{value:"Adding Additional Fields",id:"adding-additional-fields",level:6},{value:"Setting the <code>context</code> attribute",id:"setting-the-context-attribute",level:6},{value:"Using Multiple Languages",id:"using-multiple-languages",level:6},{value:"Using an ADL Verb",id:"using-an-adl-verb",level:6},{value:"Send Statement",id:"send-statement",level:5},{value:"Send Statement without Callback",id:"send-statement-without-callback",level:6},{value:"Send Statement with Callback",id:"send-statement-with-callback",level:6},{value:"Send Statement with strict error-first callback",id:"send-statement-with-strict-error-first-callback",level:6},{value:"Send Statement with Attachments",id:"send-statement-with-attachments",level:6},{value:"Send Statement with URL query string values",id:"send-statement-with-url-query-string-values",level:6},{value:"Send Statement with ADL xAPI Verbs",id:"send-statement-with-adl-xapi-verbs",level:6},{value:"Send Statement with XAPIStatement",id:"send-statement-with-xapistatement",level:6},{value:"Send Statements",id:"send-statements",level:5},{value:"Send Statements without callback",id:"send-statements-without-callback",level:6},{value:"Send Statements with callback",id:"send-statements-with-callback",level:6},{value:"Send Statements with strict error-first callback",id:"send-statements-with-strict-error-first-callback",level:6},{value:"Get Statements",id:"get-statements",level:5},{value:"Get all Statements without callback",id:"get-all-statements-without-callback",level:6},{value:"Get all Statements with callback",id:"get-all-statements-with-callback",level:6},{value:"Use the more property to get more Statements",id:"use-the-more-property-to-get-more-statements",level:6},{value:"Use the more property to get more Statements with callback",id:"use-the-more-property-to-get-more-statements-with-callback",level:6},{value:"Get all Statements with with strict error-first callback",id:"get-all-statements-with-with-strict-error-first-callback",level:6},{value:"Get Statements based on search parameters",id:"get-statements-based-on-search-parameters",level:6},{value:"Activities",id:"activities",level:4},{value:"Get Activity",id:"get-activity",level:5},{value:"Get Activity without callback",id:"get-activity-without-callback",level:6},{value:"Get Activity with callback",id:"get-activity-with-callback",level:6},{value:"Get Activity with strict error-first callback",id:"get-activity-with-strict-error-first-callback",level:6},{value:"Activity State",id:"activity-state",level:5},{value:"Send / Retrieve New Activity State",id:"send--retrieve-new-activity-state",level:6},{value:"Change Activity State",id:"change-activity-state",level:6},{value:"Get all states for given Activity and Agent",id:"get-all-states-for-given-activity-and-agent",level:6},{value:"Get states for given Activity and Agent since a certain time",id:"get-states-for-given-activity-and-agent-since-a-certain-time",level:6},{value:"Delete Activity State",id:"delete-activity-state",level:6},{value:"Activity Profile",id:"activity-profile",level:5},{value:"Send / Retrieve New Activity Profile",id:"send--retrieve-new-activity-profile",level:6},{value:"Update Activity Profile",id:"update-activity-profile",level:6},{value:"Get all profiles about a specific Activity",id:"get-all-profiles-about-a-specific-activity",level:6},{value:"Get profiles about an Activity since a certain time",id:"get-profiles-about-an-activity-since-a-certain-time",level:6},{value:"Delete Activity Profile",id:"delete-activity-profile",level:6},{value:"Agents",id:"agents",level:4},{value:"Get Agent",id:"get-agent",level:5},{value:"Get Agent without callback",id:"get-agent-without-callback",level:6},{value:"Get Agent with callback",id:"get-agent-with-callback",level:6},{value:"Get Agent with strict error-first callbacks",id:"get-agent-with-strict-error-first-callbacks",level:6},{value:"Agent Profile",id:"agent-profile",level:5},{value:"Send / Retrieve New Agent Profile",id:"send--retrieve-new-agent-profile",level:6},{value:"Update Agent Profile",id:"update-agent-profile",level:6},{value:"Get all profiles about a specific Agent",id:"get-all-profiles-about-a-specific-agent",level:6},{value:"Get profiles about an Agent since a certain time",id:"get-profiles-about-an-agent-since-a-certain-time",level:6},{value:"Delete Agent Profile",id:"delete-agent-profile",level:6},{value:"Browser support",id:"browser-support",level:2},{value:"Contributing to the project",id:"contributing-to-the-project",level:2},{value:"License",id:"license",level:2}],c={toc:s};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"xapiwrapper"},"xAPIWrapper"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIWrapper"},"https://github.com/adlnet/xAPIWrapper")),(0,r.kt)("p",null,"Wrapper to simplify communication to an LRS. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md"},"Read more about the Experience API Spec here.")),(0,r.kt)("p",null,"Check out the ",(0,r.kt)("a",{parentName:"p",href:"http://adlnet.github.io/xAPIWrapper/"},"Reference Documentation Here")),(0,r.kt)("h3",{id:"xapiwrapperjs"},"xapiwrapper.js"),(0,r.kt)("p",null,"Javascript Experience API wrapper.",(0,r.kt)("br",{parentName:"p"}),"\n","This javascript file can be included to web based xAPI clients to\nsimplify the process of connecting and communicating to an LRS. It\nis enclosed in an ADL object like the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIVerbs"},"ADL xAPI Verbs project"),", allowing\na single object to contain both the ADL verbs and the ADL xapiwrapper."),(0,r.kt)("p",null,"This wrapper has two version identifiers within the code. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"One, ",(0,r.kt)("inlineCode",{parentName:"li"},"xapiVersion")," is the version of the Experience API Specification for which it was built, and can be used to determine if the wrapper is compatible with an LRS implementing a specific xAPI Specification version. "),(0,r.kt)("li",{parentName:"ul"},"The second is the build date in the header of the minified file,\nwhich can be used to tell if you're using the latest version.")),(0,r.kt)("h3",{id:"dependencies"},"Dependencies"),(0,r.kt)("p",null,"The wrapper relies on external dependencies to perform some actions. Make sure you include our compilation of the necessary ",(0,r.kt)("a",{parentName:"p",href:"https://code.google.com/p/crypto-js/"},"CryptoJS")," components in your pages if you're not using ",(0,r.kt)("inlineCode",{parentName:"p"},"xapiwrapper.min.js"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script type="text/javascript" src="./lib/cryptojs_v3.1.2.js"><\/script>\n')),(0,r.kt)("p",null,"In the past we used the below libraries for the same purpose. You may continue to use them for current systems, but the CryptoJS compilation is recommended."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"base64.js - ",(0,r.kt)("a",{parentName:"li",href:"https://code.google.com/p/javascriptbase64/downloads/list"},"https://code.google.com/p/javascriptbase64/downloads/list"),"  "),(0,r.kt)("li",{parentName:"ul"},"2.5.3-crypto-sha1.js - ",(0,r.kt)("a",{parentName:"li",href:"https://code.google.com/p/crypto-js/downloads/detail?name=2.5.3-crypto-sha1.js&can=4&q="},"https://code.google.com/p/crypto-js/downloads/detail?name=2.5.3-crypto-sha1.js&can=4&q="))),(0,r.kt)("p",null,"For ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder#Browser_compatibility"},"IE/Edge support")," you will need to include a ",(0,r.kt)("inlineCode",{parentName:"p"},"TextEncoder")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"TextDecoder")," shim if you're not using ",(0,r.kt)("inlineCode",{parentName:"p"},"xapiwrapper.min.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script type="text/javascript" src="./lib/utf8-text-encoding.js"><\/script>\n')),(0,r.kt)("h2",{id:"installing"},"Installing"),(0,r.kt)("p",null,"Using this wrapper could either be done by downloading the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIWrapper#downloading-the-latest-release-version"},"latest release")," or ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIWrapper#cloning-and-building-the-project"},"cloning the project"),"."),(0,r.kt)("h3",{id:"downloading-the-latest-release-version"},"Downloading the latest release version"),(0,r.kt)("p",null,"The minified wrapper is self-contained. It includes all required dependencies\nin addition to the ",(0,r.kt)("em",{parentName:"p"},"ADL Verbs")," and the ",(0,r.kt)("em",{parentName:"p"},"XAPIStatement")," module. For production sites, this version of the wrapper is recommended."),(0,r.kt)("p",null,"Download the latest ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIWrapper/releases"},"release")),(0,r.kt)("p",null,"Follow the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIWrapper#including-in-your-software"},"instructions")," for including the wrapper in your source files."),(0,r.kt)("h3",{id:"cloning-and-building-the-project"},"Cloning and building the project"),(0,r.kt)("p",null,"You can optionally clone and use the ",(0,r.kt)("inlineCode",{parentName:"p"},"dist/xapiwrapper.min.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/adlnet/xAPIWrapper/\n")),(0,r.kt)("h4",{id:"building-the-project"},"Building the project"),(0,r.kt)("p",null,"Compiling the minified version is easy. Install Node.js and NPM if you don't already have them (download them ",(0,r.kt)("a",{parentName:"p",href:"http://nodejs.org/download/"},"here"),") or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo apt-get install nodejs\n$ sudo apt-get install npm\n\n$ sudo ln -s /usr/bin/nodejs /usr/bin/node\n")),(0,r.kt)("p",null,"Then install the build system, Grunt. This may require root/admin privileges on your system."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd xAPIWrapper\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo npm install -g grunt\n")),(0,r.kt)("p",null,"Install the xAPIWrapper dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo npm install\n")),(0,r.kt)("p",null,"Then execute the build script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ grunt\n")),(0,r.kt)("p",null,"This will overwrite ",(0,r.kt)("inlineCode",{parentName:"p"},"dist/xapiwrapper.min.js")," with the minifed versions of the wrapper and all its dependencies."),(0,r.kt)("h4",{id:"including-in-your-software"},"Including in your Software."),(0,r.kt)("p",null,"Include the wrapper file, and optionally the dependencies."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script type="text/javascript" src="./lib/cryptojs_v3.1.2.js"><\/script>\n<script type="text/javascript" src="./lib/utf8-text-encoding.js"><\/script>\n<script type="text/javascript" src="./src/verbs.js"><\/script>\n<script type="text/javascript" src="./src/xapistatement.js"><\/script>\n<script type="text/javascript" src="./src/xapiwrapper.js"><\/script>\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ADL.verbs.abandoned"),(0,r.kt)("li",{parentName:"ul"},"ADL.XAPIStatement.Agent = Agent;\nADL.XAPIStatement.Group = Group;\nADL.XAPIStatement.Verb = Verb;\nADL.XAPIStatement.Activity = Activity;\nADL.XAPIStatement.StatementRef = StatementRef;\nADL.XAPIStatement.SubStatement = SubStatement;"),(0,r.kt)("li",{parentName:"ul"},"xapiVersion = 1.0.1 (6 years ago)")),(0,r.kt)("p",null,"Alternatively, use the minified version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script type="text/javascript" src="./dist/xapiwrapper.min.js"><\/script>\n')),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"The wrapper at a minimum needs to know the url of the LRS, though most cases will also require the authorization information as well."),(0,r.kt)("p",null,"This wrapper provides two options for configuration. You may:  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Edit the configuration object (",(0,r.kt)("inlineCode",{parentName:"li"},"Config"),") in the xapiwrapper.js file")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'var Config = function()\n{\n    var conf = {};\n    conf[\'endpoint\'] = "http://localhost:8000/xapi/";\n    try\n    {\n        conf[\'auth\'] = "Basic " + toBase64(\'tom:1234\');\n    }\n    catch (e)\n    {\n        log("Exception in Config trying to encode auth: " + e);\n    }\n\n    // Statement defaults [optional configuration]\n    // conf["actor"] = {"mbox":"default@example.com"};\n    // conf["registration"] =  ruuid();\n    // conf["grouping"] = {"id":"ctxact:default/grouping"};\n    // conf["activity_platform"] = "default platform";\n\n    // Behavior defaults\n    // conf["strictCallbacks"] = false; // Strict error-first callbacks\n    return conf\n}();\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create your own configuration object and pass it to the xapiwrapper object")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var conf = {\n  "endpoint" : "https://lrs.adlnet.gov/xapi/",\n  "auth" : "Basic " + toBase64(\'tom:1234\'),\n};\nADL.XAPIWrapper.changeConfig(conf);\n')),(0,r.kt)("p",null,"Optionally, auth credentials can be updated by user and password properties on the\nconfiguration object:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var conf = {\n  "endpoint" : "https://lrs.adlnet.gov/xapi/",\n  "user" : "tom",\n  "password" : "1234",\n};\nADL.XAPIWrapper.changeConfig(conf);\n')),(0,r.kt)("p",null,"or  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var creds = {\n  "user" : "tom",\n  "password" : "1234",\n};\nADL.XAPIWrapper.updateAuth(ADL.XAPIWrapper.lrs, creds.user, creds.password);\n')),(0,r.kt)("p",null,"The script automatically runs, creating or adding to an ADL object an\ninstantiated xAPI Wrapper object. The object is created using the\nconfiguration object inside the xapiwrapper.js file. If you modified this\nobject with your configuration, then xAPI Wrapper object is ready to use."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"ADL.XAPIWrapper.testConfig();\n>> true\n")),(0,r.kt)("h4",{id:"launch-parameters"},"Launch Parameters"),(0,r.kt)("p",null,"The configuration will also look for url query parameters and use those\nname - value pairs in the XAPIWrapper's internal configuration. That means\nthat ",(0,r.kt)("inlineCode",{parentName:"p"},'http://localhost:8000/content/example.html?actor={"mbox":"mailto:tom@example.com"}'),(0,r.kt)("br",{parentName:"p"}),"\n","(not url encoded for illustrative purposes) would be parsed for an actor,\nwhich would automatically be included in the wrapper configuration.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"NOTE:")," endpoint, auth, actor, registration, activity_id, grouping, and activity_platform\nare keywords that if found are used in send statement requests. See below for\nusage examples."),(0,r.kt)("h4",{id:"logging"},"Logging"),(0,r.kt)("p",null,"The wrapper comes with a logging function (",(0,r.kt)("inlineCode",{parentName:"p"},"ADL.XAPIWrapper.log(message)"),")\nwhich attempts to write a message to console.log. This can be configured\nto not write messages by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"log.debug = false;"),"."),(0,r.kt)("h4",{id:"xapi-launch-support"},"xAPI Launch support"),(0,r.kt)("p",null,"The xAPI Wrapper supports ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xapi-launch"},"ADL's xAPI Launch"),".\nThis allows configuration - agent info, lrs endpoint info - to be sent to the wrapper,\ninstead of using hard-coded configurations. See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xapi-launch#using-the-xapi-launch-library"},"Using the xAPI-Launch library")," for\nmore details.  "),(0,r.kt)("p",null,"If you are using the src files, include xapi-launch.js.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script type="text/javascript" src="./lib/cryptojs_v3.1.2.js"><\/script>\n<script type="text/javascript" src="./lib/utf8-text-encoding.js"><\/script>\n<script type="text/javascript" src="./src/verbs.js"><\/script>\n<script type="text/javascript" src="./src/xapi-launch.js"><\/script>\n<script type="text/javascript" src="./src/xapistatement.js"><\/script>\n<script type="text/javascript" src="./src/xapiwrapper.js"><\/script>\n')),(0,r.kt)("p",null,"Alternatively, use the minified xapiwrapper version, which includes xapi-launch:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script type="text/javascript" src="./dist/xapiwrapper.min.js"><\/script>\n')),(0,r.kt)("p",null,"To use, construct and ADL.launch object passing in a callback.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var wrapper;\nADL.launch(function(err, launchdata, xAPIWrapper) {\n    if (!err) {\n        wrapper = xAPIWrapper;\n        console.log("--- content launched via xAPI Launch ---\\n", wrapper.lrs, "\\n", launchdata);\n    } else {\n        wrapper = ADL.XAPIWrapper;\n        wrapper.changeConfig({\n            endpoint: "https://lrs.adlnet.gov/xapi/",\n            user: \'tom\',\n            password: \'1234\'\n        });\n        console.log("--- content statically configured ---\\n", wrapper.lrs);\n    }\n    $(\'#endpoint\').text(wrapper.lrs.endpoint);\n}, true);\n')),(0,r.kt)("h3",{id:"use"},"Use"),(0,r.kt)("h4",{id:"statements"},"Statements"),(0,r.kt)("h5",{id:"statement-object-xapistatementjs"},"Statement Object (xapistatement.js)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"new ADL.XAPIStatement(actor, verb, object)\nnew ADL.XAPIStatement.Agent(identifier, name)\nnew ADL.XAPIStatement.Group(identifier, members, name)\nnew ADL.XAPIStatement.Verb(id, description)\nnew ADL.XAPIStatement.Activity(id, name, description)\nnew ADL.XAPIStatement.StatementRef(uuid)\nnew ADL.XAPIStatement.SubStatement(actor, verb, object)\n")),(0,r.kt)("p",null,"This sub-API makes it easier to author valid xAPI statements\nby adding constructors and encouraging best practices. All objects in this\nAPI are fully JSON-compatible, so anything expecting an xAPI statement can\ntake an improved statement and vice versa."),(0,r.kt)("p",null,"In addition to the above forms, each constructor can instead take as an argument\nanother instance of the object or the equivalent plain object. So you can convert\na plain xAPI statement to an improved one by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"new XAPIStatement(plain_obj)"),"."),(0,r.kt)("h6",{id:"building-a-simple-i-did-this"},'Building a Simple "I Did This"'),(0,r.kt)("p",null,"Passing in strings produces a default form: Agent Verb Activity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = new ADL.XAPIStatement(\n    \'mailto:steve.vergenz.ctr@adlnet.gov\',\n    \'http://adlnet.gov/expapi/verbs/launched\',\n    \'http://vwf.adlnet.gov/xapi/virtual_world_sandbox\'\n);\n>> {\n    "actor": {\n        "objectType": "Agent",\n        "mbox": "mailto:steve.vergenz.ctr@adlnet.gov" },\n    "verb": {\n        "id": "http://adlnet.gov/expapi/verbs/launched" },\n    "object": {\n        "objectType": "Activity",\n        "id": "http://vwf.adlnet.gov/xapi/virtual_world_sandbox" }}\n')),(0,r.kt)("h6",{id:"adding-descriptors"},"Adding Descriptors"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = new ADL.XAPIStatement(\n    new ADL.XAPIStatement.Agent(ADL.XAPIWrapper.hash(\'mailto:steve.vergenz.ctr@adlnet.gov\'), \'Steven Vergenz\'),\n    new ADL.XAPIStatement.Verb(\'http://adlnet.gov/expapi/verbs/launched\', \'launched\'),\n    new ADL.XAPIStatement.Activity(\'http://vwf.adlnet.gov/xapi/virtual_world_sandbox\', \'the Virtual World Sandbox\')\n);\n>> {\n    "actor": {\n        "objectType": "Agent",\n        "name": "Steven Vergenz",\n        "mbox_sha1sum": "f9fa1a084b2b0825cabb802fcc1bb6024141eee2" },\n    "verb": {\n        "id": "http://adlnet.gov/expapi/verbs/launched",\n        "display": {\n            "en-US": "launched" }},\n    "object": {\n        "objectType": "Activity",\n        "id": "http://vwf.adlnet.gov/xapi/virtual_world_sandbox",\n        "definition": {\n            "name": {\n                "en-US": "the Virtual World Sandbox" }}}}\n')),(0,r.kt)("h6",{id:"adding-additional-fields"},"Adding Additional Fields"),(0,r.kt)("p",null,"You can mix generated and manual fields without any conflicts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = new ADL.XAPIStatement(\n    \'mailto:steve.vergenz.ctr@adlnet.gov\',\n    \'http://adlnet.gov/expapi/verbs/launched\',\n    \'http://vwf.adlnet.gov/xapi/virtual_world_sandbox\'\n);\nstmt.generateId();\nstmt.result = { \'response\': \'Everything is a-okay!\' };\n>> {\n    "actor": {\n        "objectType": "Agent",\n        "mbox": "mailto:steve.vergenz.ctr@adlnet.gov" },\n    "verb": {\n        "id": "http://adlnet.gov/expapi/verbs/launched" },\n    "object": {\n        "objectType": "Activity",\n        "id": "http://vwf.adlnet.gov/xapi/virtual_world_sandbox" },\n    "id": "d60ffbaa-52af-44b6-932d-c08865c540ff",\n    "result": {\n        "response": "Everything is a-okay!" }}\n')),(0,r.kt)("h6",{id:"setting-the-context-attribute"},"Setting the ",(0,r.kt)("inlineCode",{parentName:"h6"},"context")," attribute"),(0,r.kt)("p",null,"Considering the behavior of ",(0,r.kt)("inlineCode",{parentName:"p"},"xapiwrapper.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"XAPIWrapper.prototype.prepareStatement = function(stmt)\n    {\n        ...........\n        if (this.lrs.grouping ||\n            this.lrs.registration ||\n            this.lrs.activity_platform) {\n            if (!stmt.context) {\n                stmt.context = {};\n            }\n        }\n\n        if (this.lrs.grouping) {\n            if (!stmt.context.contextActivities) {\n                stmt.context.contextActivities = {};\n            }\n            stmt.context.contextActivities.grouping = [{ id : this.lrs.grouping }];\n        }\n       ...........\n    }\n")),(0,r.kt)("p",null,"Here we notice 2 behaviours:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In order to set ",(0,r.kt)("inlineCode",{parentName:"p"},"statement.context.contextActivities")," you must set ",(0,r.kt)("inlineCode",{parentName:"p"},"grouping"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In order to be able to set the context property of a statement you have to set at least one of ",(0,r.kt)("inlineCode",{parentName:"p"},"grouping"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"registration")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"activity_platform")," during ADL configuration like so:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"const configuration = {\n      'endpoint' : LRS.apiUrl,\n      'auth' : 'Basic ' + btoa(LRS.key + ':' + LRS.secret),\n      'registration': this.ADL.ruuid(),\n      'activity_platform': `${this.organizationId}_organizationId`\n    };\nthis.ADL.XAPIWrapper.changeConfig(configuration);\n")),(0,r.kt)("p",null,"As you can see we set only ",(0,r.kt)("inlineCode",{parentName:"p"},"registration")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"activity_platform"),"."),(0,r.kt)("h6",{id:"using-multiple-languages"},"Using Multiple Languages"),(0,r.kt)("p",null,"Any of the ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"description")," fields in the constructors can instead take a language map,\nas defined in the xAPI specification."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = new ADL.XAPIStatement();\nstmt.actor = new ADL.XAPIStatement.Agent(\'https://plus.google.com/113407910174370737235\');\nstmt.verb = new ADL.XAPIStatement.Verb(\n    \'http://adlnet.gov/expapi/verbs/launched\',\n    {\n        \'en-US\': \'launched\',\n        \'de-DE\': \'startete\'\n    }\n);\nstmt.object = new ADL.XAPIStatement.Activity(\'http://vwf.adlnet.gov/xapi/virtual_world_sandbox\');\n>> {\n    "actor": {\n        "objectType": "Agent",\n        "openid": "https://plus.google.com/113407910174370737235" },\n    "verb": {\n        "id": "http://adlnet.gov/expapi/verbs/launched",\n        "display": {\n            "en-US": "launched",\n            "de-DE": "startete" }},\n    "object": {\n        "objectType": "Activity",\n        "id": "http://vwf.adlnet.gov/xapi/virtual_world_sandbox" }}\n')),(0,r.kt)("h6",{id:"using-an-adl-verb"},"Using an ADL Verb"),(0,r.kt)("p",null,"Manually specified verbs have been used until now for illustrative purposes, but you could just\nas easily use the ADL verbs."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"var stmt = ADL.XAPIStatement(myactor, ADL.verbs.launched, myactivity);\n")),(0,r.kt)("h5",{id:"send-statement"},"Send Statement"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function sendStatement(statement, callback, [attachments])"),(0,r.kt)("br",{parentName:"p"}),"\n","Sends a single Statement to the LRS using a PUT request. This\nmethod will automatically create the Statement ID. Providing a\nfunction to call after the send Statement request will make\nthe request happen asynchronously, otherwise Send Statement\nwill block until it receives the response from the LRS.  "),(0,r.kt)("h6",{id:"send-statement-without-callback"},"Send Statement without Callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : {"id" : "http://adlnet.gov/expapi/verbs/answered",\n                      "display" : {"en-US" : "answered"}},\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question"}};\nvar resp_obj = ADL.XAPIWrapper.sendStatement(stmt);\nADL.XAPIWrapper.log("[" + resp_obj.id + "]: " + resp_obj.xhr.status + " - " + resp_obj.xhr.statusText);\n>> [3e616d1c-5394-42dc-a3aa-29414f8f0dfe]: 200 - OK\n')),(0,r.kt)("h6",{id:"send-statement-with-callback"},"Send Statement with Callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : {"id" : "http://adlnet.gov/expapi/verbs/answered",\n                      "display" : {"en-US" : "answered"}},\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question"}};\nADL.XAPIWrapper.sendStatement(stmt, function(resp, obj){  \n    ADL.XAPIWrapper.log("[" + obj.id + "]: " + resp.status + " - " + resp.statusText);});\n>> [4edfe763-8b84-41f1-a355-78b7601a6fe8]: 200 - OK\n')),(0,r.kt)("h6",{id:"send-statement-with-strict-error-first-callback"},"Send Statement with strict error-first callback"),(0,r.kt)("p",null,"Requires the config option ",(0,r.kt)("inlineCode",{parentName:"p"},"strictCallbacks")," to be ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : {"id" : "http://adlnet.gov/expapi/verbs/answered",\n                      "display" : {"en-US" : "answered"}},\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question"}};\nADL.XAPIWrapper.sendStatement(stmt, function(err, res, body) {\n    if (err) {\n        // Handle error case\n        return;\n    }\n\n    ADL.XAPIWrapper.log("[" + body.id + "]: " + res.status + " - " + res.statusText);});\n>> [4edfe763-8b84-41f1-a355-78b7601a6fe8]: 200 - OK\n')),(0,r.kt)("h6",{id:"send-statement-with-attachments"},"Send Statement with Attachments"),(0,r.kt)("p",null,"The wrapper can construct a ",(0,r.kt)("inlineCode",{parentName:"p"},"multipart/mixed")," POST for a single statement that includes attachments. Attachments should be\nsupplied as an array in the 3rd parameter to ",(0,r.kt)("inlineCode",{parentName:"p"},"sendStatement"),". Attachments are optional. The attachments array should consist of\nobjects that have a ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," and a ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," field. ",(0,r.kt)("inlineCode",{parentName:"p"},"Type")," should be the metadata description of the attachment as described by the spec, and ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"\nshould be a string containing the data to post. The type field does not need to include the SHA2 or the length. These will be computed\nfor you. The type may optionally be the string 'signature'. In this case, the wrapper will construct the proper metadata block."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var attachment = {};\nattachment.type = {\n       "usageType": "http://adlnet.gov/expapi/attachments/signature",\n       "display": {\n        "en-US": "A JWT signature"\n       },\n       "description": {\n        "en-US": "A signature proving the statement was not modified"\n       },\n       "contentType": "application/octet-stream"\n};\nattachment.value = "somehugestring";\nADL.XAPIWrapper.sendStatement(stmt,callback,[attachment]);\n')),(0,r.kt)("h6",{id:"send-statement-with-url-query-string-values"},"Send Statement with URL query string values"),(0,r.kt)("p",null,'The wrapper looks for URL query string values to include in\nits internal configuration. If certain keys\n("endpoint","auth","actor","registration","activity',(0,r.kt)("em",{parentName:"p"},'id", "grouping", "activity_platform")\nare found, the values are included in a Statement.',(0,r.kt)("br",{parentName:"em"}),"_URL"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8000/content/example.html?registration=51a6f860-1997-11e3-8ffd-0800200c9a66"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("em",{parentName:"p"},"Client Calls")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : {"id" : "http://adlnet.gov/expapi/verbs/answered",\n                      "display" : {"en-US" : "answered"}},\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question"}};\nvar resp_obj = ADL.XAPIWrapper.sendStatement(stmt);\nADL.XAPIWrapper.getStatements({"statementId":resp_obj.id});\n>> {"version": "1.0.0",\n    "timestamp": "2013-09-09 21:36:40.185841+00:00",\n    "object": {"id": "http://adlnet.gov/expapi/activities/question", "objectType": "Activity"},\n    "actor": {"mbox": "mailto:tom@example.com", "name": "tom creighton", "objectType": "Agent"},\n    "stored": "2013-09-09 21:36:40.186124+00:00",\n    "verb": {"id": "http://adlnet.gov/expapi/verbs/answered", "display": {"en-US": "answered"}},\n    "authority": {"mbox": "mailto:tom@adlnet.gov", "name": "tom", "objectType": "Agent"},\n>   "context": {"registration": "51a6f860-1997-11e3-8ffd-0800200c9a66"},\n    "id": "ea9c1d01-0606-4ec7-8e5d-20f87b1211ed"}\n')),(0,r.kt)("h6",{id:"send-statement-with-adl-xapi-verbs"},"Send Statement with ADL xAPI Verbs"),(0,r.kt)("p",null,"ADL also has collected the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIVerbs"},"ADL xAPI Verbs"),"\ninto a Javascript object to easily include. To use...",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("em",{parentName:"p"},"Include verbs.js"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'<script type="text/javascript" src="./src/verbs.js"><\/script>'),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("em",{parentName:"p"},"Client Calls"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : ADL.verbs.answered,\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question"}};\nvar resp_obj = ADL.XAPIWrapper.sendStatement(stmt);\nADL.XAPIWrapper.getStatements({"statementId":resp_obj.id});\n>> {"version": "1.0.0",\n    "timestamp": "2013-09-09 22:08:51.440327+00:00",\n    "object": {"id": "http://adlnet.gov/expapi/activities/question", "objectType": "Activity"},\n    "actor": {"mbox": "mailto:tom@example.com", "name": "tom creighton", "objectType": "Agent"},\n    "stored": "2013-09-09 22:08:51.440614+00:00",\n>   "verb": {"id": "http://adlnet.gov/expapi/verbs/answered", "display": {"en-US": "answered"}},\n    "authority": {"mbox": "mailto:tom@adlnet.gov", "name": "tom", "objectType": "Agent"},\n    "id": "9c5a910b-83c2-4114-84f5-d41ed790f8cf"}\n')),(0,r.kt)("h6",{id:"send-statement-with-xapistatement"},"Send Statement with XAPIStatement"),(0,r.kt)("p",null,"By including ",(0,r.kt)("em",{parentName:"p"},"xapistatement.js"),", you gain access to a convenience wrapper to ease the building\nof xAPI statements without a lot of the formatting fluff."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = new ADL.XAPIStatement("mailto:tom@example.com", null, "http://adlnet.gov/expapi/activities/question");\nstmt.verb = new ADL.XAPIStatement.Verb("http://adlnet.gov/expapi/verbs/answered", "answered");\nstmt.generateId();\nADL.XAPIWrapper.sendStatement(stmt);\nADL.XAPIWrapper.getStatements({"statementId": stmt.id});\n>> {"version": "1.0.0",\n    "timestamp": "2013-09-09 22:08:51.440327+00:00",\n    "object": {"id": "http://adlnet.gov/expapi/activities/question", "objectType": "Activity"},\n    "actor": {"mbox": "mailto:tom@example.com", "objectType": "Agent"},\n    "stored": "2013-09-09 22:08:51.440614+00:00",\n>   "verb": {"id": "http://adlnet.gov/expapi/verbs/answered", "display": {"en-US": "answered"}},\n    "authority": {"mbox": "mailto:tom@adlnet.gov", "name": "tom", "objectType": "Agent"},\n    "id": "9c5a910b-83c2-4114-84f5-d41ed790f8cf"}\n')),(0,r.kt)("h5",{id:"send-statements"},"Send Statements"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function sendStatements(statementArray, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n","Sends a list of Statements to the LRS in one batch. It\naccepts the list of Statements and a callback function as\narguments and returns the XHR request object if no callback\nis supplied. The response of the XHR request upon success will\ncontain a list of Statement IDs."),(0,r.kt)("h6",{id:"send-statements-without-callback"},"Send Statements without callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : ADL.verbs.answered,\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question/1"}};\nvar stmt2 = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : ADL.verbs.answered,\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question/2"}};\nvar stmts = [stmt, stmt2];\nvar r = ADL.XAPIWrapper.sendStatements(stmts);\nJSON.parse(r.response)\n>> ["2d819ea4-1a1e-11e3-a888-08002787eb49", "409c27de-1a1e-11e3-a888-08002787eb49"]\n')),(0,r.kt)("h6",{id:"send-statements-with-callback"},"Send Statements with callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : ADL.verbs.answered,\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question/1"}};\nvar stmt2 = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : ADL.verbs.answered,\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question/2"}};\nvar stmts = [stmt, stmt2];\nADL.XAPIWrapper.sendStatements(stmts, function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> ["2d819ea4-1a1e-11e3-a888-08002787eb49", "409c27de-1a1e-11e3-a888-08002787eb49"]\n')),(0,r.kt)("h6",{id:"send-statements-with-strict-error-first-callback"},"Send Statements with strict error-first callback"),(0,r.kt)("p",null,"Requires the config option ",(0,r.kt)("inlineCode",{parentName:"p"},"strictCallbacks")," to be ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stmt = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : ADL.verbs.answered,\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question/1"}};\nvar stmt2 = {"actor" : {"mbox" : "mailto:tom@example.com"},\n            "verb" : ADL.verbs.answered,\n            "object" : {"id" : "http://adlnet.gov/expapi/activities/question/2"}};\nvar stmts = [stmt, stmt2];\nADL.XAPIWrapper.sendStatements(stmts, function(err, res, body) {\n    if (err) {\n        // Handle error case\n        return;\n    }\n\n    ADL.XAPIWrapper.log(body);\n});\n>> ["2d819ea4-1a1e-11e3-a888-08002787eb49", "409c27de-1a1e-11e3-a888-08002787eb49"]\n')),(0,r.kt)("h5",{id:"get-statements"},"Get Statements"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function getStatements(searchParams, more, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n","Get a single or collection of Statements based on\nsearch parameters or a StatementResult more value."),(0,r.kt)("h6",{id:"get-all-statements-without-callback"},"Get all Statements without callback"),(0,r.kt)("p",null,"This could be potentially a very large request. It is preferable to include\na search parameter object to narrow down the StatementResult set. However,\nthis call is included to support report style pages."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"var ret = ADL.XAPIWrapper.getStatements();\nif (ret)\n   ADL.XAPIWrapper.log(ret.statements);\n\n>> <Array of statements>\n")),(0,r.kt)("h6",{id:"get-all-statements-with-callback"},"Get all Statements with callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"ADL.XAPIWrapper.getStatements(null, null,\n        function(r){ADL.XAPIWrapper.log(JSON.parse(r.response).statements);});\n>> <Array of statements>\n")),(0,r.kt)("h6",{id:"use-the-more-property-to-get-more-statements"},"Use the more property to get more Statements"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var res = ADL.XAPIWrapper.getStatements();\nADL.XAPIWrapper.log(res.statements);\n>> <Array of statements>\n\nif (res.more && res.more !== ""){\n   var more = ADL.XAPIWrapper.getStatements(null, res.more);\n   ADL.XAPIWrapper.log(more.statements);\n}\n>> <Array of statements>\n')),(0,r.kt)("h6",{id:"use-the-more-property-to-get-more-statements-with-callback"},"Use the more property to get more Statements with callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'ADL.XAPIWrapper.getStatements(null, null,\n   function getmore(r){\n      var res = JSON.parse(r.response);\n      ADL.XAPIWrapper.log(res.statements);\n      if (res.more && res.more !== ""){\n         ADL.XAPIWrapper.getStatements(null, res.more, getmore);\n      }\n   });\n>> <Array of statements>\n>> <Array of statements>\n...\n')),(0,r.kt)("h6",{id:"get-all-statements-with-with-strict-error-first-callback"},"Get all Statements with with strict error-first callback"),(0,r.kt)("p",null,"Requires the config option ",(0,r.kt)("inlineCode",{parentName:"p"},"strictCallbacks")," to be ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"ADL.XAPIWrapper.getStatements(null, null, function(err, res, body) {\n    if (err) {\n        // Handle error case\n        return;\n    }\n\n    ADL.XAPIWrapper.log(body.statements);\n});\n>> <Array of statements>\n")),(0,r.kt)("h6",{id:"get-statements-based-on-search-parameters"},"Get Statements based on search parameters"),(0,r.kt)("p",null,"The Experience API provides search parameters to narrow down\nthe result of a Statement request. See the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#723-getstatements"},"Experience API Spec"),"\nfor more information."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},"var search = ADL.XAPIWrapper.searchParams();\nsearch['verb'] = ADL.verbs.answered.id;\nvar res = ADL.XAPIWrapper.getStatements(search);\nADL.XAPIWrapper.log(res.statements);\n>> <Array of statements with verb id of \"http://adlnet.gov/expapi/verbs/answered\">\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var search = ADL.XAPIWrapper.searchParams();\nsearch[\'verb\'] = ADL.verbs.terminated.id;\nsearch[\'activity\'] = "http://adlnet.gov/courses/roses/posttest";\nsearch[\'related_activities\'] = "true";\nvar res = ADL.XAPIWrapper.getStatements(search);\nADL.XAPIWrapper.log(res.statements);\n>> <Array of statements with verb id of "http://adlnet.gov/expapi/verbs/terminated" and an activity id of "http://adlnet.gov/courses/roses/posttest" in the statement>\n')),(0,r.kt)("h4",{id:"activities"},"Activities"),(0,r.kt)("h5",{id:"get-activity"},"Get Activity"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function getActivities(activityid, callback)"),"\nGet the Activity object from the LRS by providing an Activity ID."),(0,r.kt)("h6",{id:"get-activity-without-callback"},"Get Activity without callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var res = ADL.XAPIWrapper.getActivities("http://adlnet.gov/expapi/activities/question");\nADL.XAPIWrapper.log(res);\n>> <Activity object>\n')),(0,r.kt)("h6",{id:"get-activity-with-callback"},"Get Activity with callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'ADL.XAPIWrapper.getActivities("http://adlnet.gov/expapi/activities/question",\n                         function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> <Activity object>\n')),(0,r.kt)("h6",{id:"get-activity-with-strict-error-first-callback"},"Get Activity with strict error-first callback"),(0,r.kt)("p",null,"Requires the config option ",(0,r.kt)("inlineCode",{parentName:"p"},"strictCallbacks")," to be ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'ADL.XAPIWrapper.getActivities("http://adlnet.gov/expapi/activities/question", function(err, res, body) {\n    if (err) {\n        // Handle error case\n        return;\n    }\n\n    ADL.XAPIWrapper.log(body);\n});\n>> <Activity object>\n')),(0,r.kt)("h5",{id:"activity-state"},"Activity State"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function sendState(activityid, agent, stateid, registration, statevalue, matchHash, noneMatchHash, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"function getState(activityid, agent, stateid, registration, since, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"function deleteState(activityid, agent, stateid, registration, matchHash, noneMatchHash, callback)"),"\nSave / Retrieve / Delete activity state information for a particular agent, and optional registration."),(0,r.kt)("h6",{id:"send--retrieve-new-activity-state"},"Send / Retrieve New Activity State"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var stateval = {"info":"the state info"};\nADL.XAPIWrapper.sendState("http://adlnet.gov/expapi/activities/question",\n                          {"mbox":"mailto:tom@example.com"},\n                          "questionstate", null, stateval);\nADL.XAPIWrapper.getState("http://adlnet.gov/expapi/activities/question",\n                        {"mbox":"mailto:tom@example.com"}, "questionstate");\n>> {info: "the state info"}\n')),(0,r.kt)("h6",{id:"change-activity-state"},"Change Activity State"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var oldstateval = {"info":"the state info"};\nvar newstateval = {"info":"the new value"};\nADL.XAPIWrapper.sendState("http://adlnet.gov/expapi/activities/question",\n                          {"mbox":"mailto:tom@example.com"},\n                          "questionstate", null, newstateval,\n                          ADL.XAPIWrapper.hash(JSON.stringify(oldstateval)));\nADL.XAPIWrapper.getState("http://adlnet.gov/expapi/activities/question",\n                        {"mbox":"mailto:tom@example.com"}, "questionstate",\n                        null, null, function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> {info: "the new value"}\n')),(0,r.kt)("h6",{id:"get-all-states-for-given-activity-and-agent"},"Get all states for given Activity and Agent"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var anotherstate = {"more": "info about act and agent"};\nADL.XAPIWrapper.sendState("http://adlnet.gov/expapi/activities/question",\n                          {"mbox":"mailto:tom@example.com"},\n                          "another_state", null, anotherstate);\nvar states = ADL.XAPIWrapper.getState("http://adlnet.gov/expapi/activities/question",\n                        {"mbox":"mailto:tom@example.com"});\nADL.XAPIWrapper.log(states);\n>> ["another_state", "questionstate"]\n')),(0,r.kt)("h6",{id:"get-states-for-given-activity-and-agent-since-a-certain-time"},"Get states for given Activity and Agent since a certain time"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var actid = "tag:adlnet.gov,2013:expapi:1.0.0:activity:question/1";\nvar stateval = {"info":"the state info"};\nvar statehash = ADL.XAPIWrapper.hash(JSON.stringify(stateval));\nADL.XAPIWrapper.sendState(actid, {"mbox":"mailto:tom@example.com"}, "questionstate", null, stateval);\nvar stateret = ADL.XAPIWrapper.getState(actid, {"mbox":"mailto:tom@example.com"}, "questionstate");\nADL.XAPIWrapper.log(stateret);\n>> {"info":"the state info"}\n\nvar sincehere = new Date();\nvar anotherstate = {"more": "info about act and agent","other":"stuff"};\nADL.XAPIWrapper.sendState(actid, {"mbox":"mailto:tom@example.com"}, "another_state", null, anotherstate);\nvar states = ADL.XAPIWrapper.getState(actid, {"mbox":"mailto:tom@example.com"});\nADL.XAPIWrapper.log(states);\n>> ["questionstate", "another_state"]\n\nvar states = ADL.XAPIWrapper.getState(actid, {"mbox":"mailto:tom@example.com"}, null, null, sincehere);\nADL.XAPIWrapper.log(states);\n>> ["another_state"]\n')),(0,r.kt)("h6",{id:"delete-activity-state"},"Delete Activity State"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var stateval = {"info":"the state info"};\nADL.XAPIWrapper.sendState("http://adlnet.gov/expapi/activities/question",\n                          {"mbox":"mailto:tom@example.com"},\n                          "questionstate", null, stateval);\nADL.XAPIWrapper.getState("http://adlnet.gov/expapi/activities/question",\n                        {"mbox":"mailto:tom@example.com"}, "questionstate");\n>> {info: "the state info"}\n\nADL.XAPIWrapper.deleteState("http://adlnet.gov/expapi/activities/question",\n                        {"mbox":"mailto:tom@example.com"}, "questionstate");\n>> XMLHttpRequest {statusText: "NO CONTENT", status: 204, response: "", responseType: "", responseXML: null\u2026}\n\nADL.XAPIWrapper.getState("http://adlnet.gov/expapi/activities/question",\n                        {"mbox":"mailto:tom@example.com"}, "questionstate");\n>> 404\n')),(0,r.kt)("h5",{id:"activity-profile"},"Activity Profile"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function sendActivityProfile(activityid, profileid, profilevalue, matchHash, noneMatchHash, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"function getActivityProfile(activityid, profileid, since, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"function deleteActivityProfile(activityid, profileid, matchHash, noneMatchHash, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n","Allows for the storage, retrieval and deletion of data about an Activity."),(0,r.kt)("h6",{id:"send--retrieve-new-activity-profile"},"Send / Retrieve New Activity Profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var profile = {"info":"the profile"};\nADL.XAPIWrapper.sendActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                    "actprofile", profile, null, "*");\nADL.XAPIWrapper.getActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                  "actprofile", null,\n                                  function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> {info: "the profile"}\n')),(0,r.kt)("h6",{id:"update-activity-profile"},"Update Activity Profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var profile = ADL.XAPIWrapper.getActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                                 "actprofile");\nvar oldprofhash = ADL.XAPIWrapper.hash(JSON.stringify(profile));\nprofile[\'new\'] = "changes to profile";\nADL.XAPIWrapper.sendActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                    "actprofile", profile, oldprofhash);\nADL.XAPIWrapper.getActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                  "actprofile", null,\n                                  function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> {info: "the profile", new: "changes to profile"}\n')),(0,r.kt)("h6",{id:"get-all-profiles-about-a-specific-activity"},"Get all profiles about a specific Activity"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var profile = {"info":"the profile"};\nADL.XAPIWrapper.sendActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                    "otheractprofile", profile, null, "*");\nADL.XAPIWrapper.getActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                  null, null,\n                                  function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> ["otheractprofile", "actprofile"]\n')),(0,r.kt)("h6",{id:"get-profiles-about-an-activity-since-a-certain-time"},"Get profiles about an Activity since a certain time"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var actid = "tag:adlnet.gov,2013:expapi:1.0.0:activity:testing/xapiwrapper/activityprofile";\nvar profid = "testprofile";\nvar actprof = {"info":"the activity profile info"};\nvar actprofhash = ADL.XAPIWrapper.hash(JSON.stringify(actprof));\n\nADL.XAPIWrapper.sendActivityProfile(actid, profid, actprof, null, actprofhash);\nvar actprofret = ADL.XAPIWrapper.getActivityProfile(actid, profid);\n\nADL.XAPIWrapper.log(actprofret);\n>> {"info": "the activity profile info"}\n\nvar since = new Date();\n\nvar newprofid = "new-profile";\nvar profile = {"info":"the profile"};\n\nADL.XAPIWrapper.sendActivityProfile(actid, newprofid, profile, null, "*");\nvar profiles = ADL.XAPIWrapper.getActivityProfile(actid, null, since);\n\nADL.XAPIWrapper.log(profiles);\n>> ["new-profile"]\n')),(0,r.kt)("h6",{id:"delete-activity-profile"},"Delete Activity Profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var profile = {"info":"the profile"};\nADL.XAPIWrapper.sendActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                    "actprofile", profile, null, "*");\nADL.XAPIWrapper.getActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                  "actprofile", null,\n                                  function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> {info: "the profile"}\n\nADL.XAPIWrapper.deleteActivityProfile("http://adlnet.gov/expapi/activities/question",\n                        "actprofile");\n>> XMLHttpRequest {statusText: "NO CONTENT", status: 204, response: "", responseType: "", responseXML: null\u2026}\n\nADL.XAPIWrapper.getActivityProfile("http://adlnet.gov/expapi/activities/question",\n                                  "actprofile");\n>> 404\n')),(0,r.kt)("h4",{id:"agents"},"Agents"),(0,r.kt)("h5",{id:"get-agent"},"Get Agent"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function getAgents(agent, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n","Gets a special Person object containing all the values\nof an Agent the LRS knows about. The Person object's\nidentifying properties are arrays and it may have more\nthan one identifier. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPI-Spec/blob/master/xAPI.md#getagents"},"See more about Person in the spec")),(0,r.kt)("h6",{id:"get-agent-without-callback"},"Get Agent without callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var res = ADL.XAPIWrapper.getAgents({"mbox":"mailto:tom@example.com"});\nADL.XAPIWrapper.log(res);\n>> <Person object>\n')),(0,r.kt)("h6",{id:"get-agent-with-callback"},"Get Agent with callback"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'ADL.XAPIWrapper.getAgents({"mbox":"mailto:tom@example.com"},\n                         function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> <Person object>\n')),(0,r.kt)("h6",{id:"get-agent-with-strict-error-first-callbacks"},"Get Agent with strict error-first callbacks"),(0,r.kt)("p",null,"Requires the config option ",(0,r.kt)("inlineCode",{parentName:"p"},"strictCallbacks")," to be ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'ADL.XAPIWrapper.getAgents({"mbox":"mailto:tom@example.com"}, function(err, res, body) {\n    if (err) {\n        // Handle error case\n        return;\n    }\n\n    ADL.XAPIWrapper.log(body);\n});\n>> <Person object>\n')),(0,r.kt)("h5",{id:"agent-profile"},"Agent Profile"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function sendAgentProfile(agent, profileid, profilevalue, matchHash, noneMatchHash, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"function getAgentProfile(agent, profileid, since, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"function deleteAgentProfile(agent, profileid, matchHash, noneMatchHash, callback)"),(0,r.kt)("br",{parentName:"p"}),"\n","Allows for the storage, retrieval and deletion of data about an Agent."),(0,r.kt)("h6",{id:"send--retrieve-new-agent-profile"},"Send / Retrieve New Agent Profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var profile = {"info":"the agent profile"};\nADL.XAPIWrapper.sendAgentProfile({"mbox":"mailto:tom@example.com"},\n                                  "agentprofile", profile, null, "*");\nADL.XAPIWrapper.getAgentProfile({"mbox":"mailto:tom@example.com"},\n                                 "agentprofile", null,\n                                 function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> {info: "the agent profile"}\n')),(0,r.kt)("h6",{id:"update-agent-profile"},"Update Agent Profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var profile = ADL.XAPIWrapper.getAgentProfile({"mbox":"mailto:tom@example.com"},\n                                               "agentprofile");\nvar oldprofhash = ADL.XAPIWrapper.hash(JSON.stringify(profile));\nprofile[\'new\'] = "changes to the agent profile";\nADL.XAPIWrapper.sendAgentProfile({"mbox":"mailto:tom@example.com"},\n                                  "agentprofile", profile, oldprofhash);\nADL.XAPIWrapper.getAgentProfile({"mbox":"mailto:tom@example.com"},\n                                 "agentprofile", null,\n                                 function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> {info: "the agent profile", new: "changes to the agent profile"}\n')),(0,r.kt)("h6",{id:"get-all-profiles-about-a-specific-agent"},"Get all profiles about a specific Agent"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var profile = {"info":"the agent profile"};\nADL.XAPIWrapper.sendAgentProfile({"mbox":"mailto:tom@example.com"},\n                                  "othergentprofile", profile, null, "*");\nADL.XAPIWrapper.getAgentProfile({"mbox":"mailto:tom@example.com"},\n                                 null, null,\n                                 function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> ["otheragentprofile", "agentprofile"]\n')),(0,r.kt)("h6",{id:"get-profiles-about-an-agent-since-a-certain-time"},"Get profiles about an Agent since a certain time"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JavaScript"},'var otheragent = {"mbox":"mailto:tom@example.com"};\nvar profile = {"info":"the other agent profile"};\nvar otherprofid = "the-other-profile-id";\n\nADL.XAPIWrapper.sendAgentProfile(otheragent, otherprofid, profile, null, "*");\n\nvar since = new Date();\nvar newprof = {"info":"the new other agent profile"};\nvar newotherprofid = "the-new-other-profile-id";\n\nADL.XAPIWrapper.sendAgentProfile(otheragent, newotherprofid, newprof, null, "*");\nvar sinceprofiles = ADL.XAPIWrapper.getAgentProfile(otheragent, null, since);\n\nADL.XAPIWrapper.log(sinceprofiles);\n>> ["the-new-other-profile-id"]\n')),(0,r.kt)("h6",{id:"delete-agent-profile"},"Delete Agent Profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var profile = {"info":"the agent profile"};\nADL.XAPIWrapper.sendAgentProfile({"mbox":"mailto:tom@example.com"},\n                                  "agentprofile", profile, null, "*");\nADL.XAPIWrapper.getAgentProfile({"mbox":"mailto:tom@example.com"},\n                                 "agentprofile", null,\n                                 function(r){ADL.XAPIWrapper.log(JSON.parse(r.response));});\n>> {info: "the agent profile"}\n\nADL.XAPIWrapper.deleteAgentProfile({"mbox":"mailto:tom@example.com"},\n                        "agentprofile");\n>> XMLHttpRequest {statusText: "NO CONTENT", status: 204, response: "", responseType: "", responseXML: null\u2026}\n\nADL.XAPIWrapper.getAgentProfile({"mbox":"mailto:tom@example.com"},\n                                 "agentprofile");\n>> 404\n')),(0,r.kt)("h2",{id:"browser-support"},"Browser support"),(0,r.kt)("p",null,"IE10+"),(0,r.kt)("h2",{id:"contributing-to-the-project"},"Contributing to the project"),(0,r.kt)("p",null,"We welcome contributions to this project. Fork this repository,\nmake changes, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIWrapper#building-the-project"},"re-minify"),", and submit pull requests. If you're not comfortable\nwith editing the code, please ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/adlnet/xAPIWrapper/issues"},"submit an issue")," and we'll be happy\nto address it."),(0,r.kt)("h2",{id:"license"},"License"),(0,r.kt)("p",null,"   Copyright ","\xa9","2016 Advanced Distributed Learning"),(0,r.kt)("p",null,'   Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"   http://www.apache.org/licenses/LICENSE-2.0\n")),(0,r.kt)("p",null,'   Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.'))}d.isMDXComponent=!0}}]);