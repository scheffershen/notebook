"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[81577],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=s(r),f=n,d=h["".concat(c,".").concat(f)]||h[f]||p[f]||a;return r?o.createElement(d,i(i({ref:t},u),{},{components:r})):o.createElement(d,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[h]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},11280:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=r(87462),n=(r(67294),r(3905));const a={},i="Git workflow ( Feature-branch-workflow)",l={unversionedId:"Git/Git-workflow",id:"Git/Git-workflow",title:"Git workflow ( Feature-branch-workflow)",description:"https://github.com/wearehive/project-guidelines",source:"@site/docs/Git/Git-workflow.md",sourceDirName:"Git",slug:"/Git/Git-workflow",permalink:"/notebook/docs/Git/Git-workflow",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Git/Git-workflow.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/notebook/docs/category/git"},next:{title:"How-to-Create-Your-Own-Git-Server",permalink:"/notebook/docs/Git/How-to-Create-Your-Own-Git-Server"}},c={},s=[{value:"For a new project, initialize a git repository in the project directory. For subsequent features/changes this step should be ignored.",id:"for-a-new-project-initialize-a-git-repository-in-the-project-directory-for-subsequent-featureschanges-this-step-should-be-ignored",level:2},{value:"Checkout a new feature/bug-fix branch.",id:"checkout-a-new-featurebug-fix-branch",level:2},{value:"Make Changes.",id:"make-changes",level:2},{value:"Sync with remote to get changes you\u2019ve missed.",id:"sync-with-remote-to-get-changes-youve-missed",level:2},{value:"Update your feature branch with latest changes from develop by interactive rebase.",id:"update-your-feature-branch-with-latest-changes-from-develop-by-interactive-rebase",level:2},{value:"If you don\u2019t have conflicts, skip this step. If you have conflicts, resolve them and continue rebase.",id:"if-you-dont-have-conflicts-skip-this-step-if-you-have-conflicts-resolve-them-and-continue-rebase",level:2},{value:"Push your branch. Rebase will change history, so you&#39;ll have to use -f to force changes into the remote branch. If someone else is working on your branch, use the less destructive --force-with-lease.",id:"push-your-branch-rebase-will-change-history-so-youll-have-to-use--f-to-force-changes-into-the-remote-branch-if-someone-else-is-working-on-your-branch-use-the-less-destructive---force-with-lease",level:2},{value:"Make a Pull Request.",id:"make-a-pull-request",level:2},{value:"Pull request will be accepted, merged and close by a reviewer.",id:"pull-request-will-be-accepted-merged-and-close-by-a-reviewer",level:2},{value:"Remove your local feature branch if you&#39;re done.",id:"remove-your-local-feature-branch-if-youre-done",level:2}],u={toc:s};function h(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"git-workflow--feature-branch-workflow"},"Git workflow ( Feature-branch-workflow)"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/wearehive/project-guidelines"},"https://github.com/wearehive/project-guidelines"),"\nDate: 01/2017"),(0,n.kt)("h2",{id:"for-a-new-project-initialize-a-git-repository-in-the-project-directory-for-subsequent-featureschanges-this-step-should-be-ignored"},"For a new project, initialize a git repository in the project directory. For subsequent features/changes this step should be ignored."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"cd <project directory>\ngit init\n")),(0,n.kt)("h2",{id:"checkout-a-new-featurebug-fix-branch"},"Checkout a new feature/bug-fix branch."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git checkout -b <branchname>\n")),(0,n.kt)("h2",{id:"make-changes"},"Make Changes."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git add\ngit commit -a\n")),(0,n.kt)("p",null,"git commit -a will start an editor which lets you separate the subject from the body. "),(0,n.kt)("h2",{id:"sync-with-remote-to-get-changes-youve-missed"},"Sync with remote to get changes you\u2019ve missed."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git checkout develop\ngit pull\n")),(0,n.kt)("p",null,"This will give you a chance to deal with conflicts on your machine while rebasing (later) rather than creating a Pull Request that contains conflicts."),(0,n.kt)("h2",{id:"update-your-feature-branch-with-latest-changes-from-develop-by-interactive-rebase"},"Update your feature branch with latest changes from develop by interactive rebase."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git checkout <branchname>\ngit rebase -i --autosquash develop\n")),(0,n.kt)("p",null,"You can use --autosquash to squash all your commits to a single commit. Nobody wants many commits for a single feature in develop branch    "),(0,n.kt)("h2",{id:"if-you-dont-have-conflicts-skip-this-step-if-you-have-conflicts-resolve-them-and-continue-rebase"},"If you don\u2019t have conflicts, skip this step. If you have conflicts, resolve them and continue rebase."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git add <file1> <file2> ...\ngit rebase --continue\n")),(0,n.kt)("h2",{id:"push-your-branch-rebase-will-change-history-so-youll-have-to-use--f-to-force-changes-into-the-remote-branch-if-someone-else-is-working-on-your-branch-use-the-less-destructive---force-with-lease"},"Push your branch. Rebase will change history, so you'll have to use -f to force changes into the remote branch. If someone else is working on your branch, use the less destructive --force-with-lease."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git push -f\n")),(0,n.kt)("p",null,"When you do a rebase, you are changing the history on your feature branch. As a result, Git will reject normal git push. Instead, you'll need to use the -f or --force flag"),(0,n.kt)("h2",{id:"make-a-pull-request"},"Make a Pull Request."),(0,n.kt)("h2",{id:"pull-request-will-be-accepted-merged-and-close-by-a-reviewer"},"Pull request will be accepted, merged and close by a reviewer."),(0,n.kt)("h2",{id:"remove-your-local-feature-branch-if-youre-done"},"Remove your local feature branch if you're done."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git branch -d <branchname>\n")),(0,n.kt)("p",null,"to remove all branches which are no longer on remote"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done\n")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/wearehive/project-guidelines"},"https://github.com/wearehive/project-guidelines")))}h.isMDXComponent=!0}}]);