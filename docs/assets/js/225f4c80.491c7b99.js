"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[59693],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(t),u=i,m=d["".concat(c,".").concat(u)]||d[u]||f[u]||s;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,o=new Array(s);o[0]=u;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a[d]="string"==typeof e?e:i,o[1]=a;for(var l=2;l<s;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},16851:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const s={},o="default medflixs",a={unversionedId:"Nginx/etc/nginx/sites-enabled/default_medflixs",id:"Nginx/etc/nginx/sites-enabled/default_medflixs",title:"default medflixs",description:"",source:"@site/docs/Nginx/etc/nginx/sites-enabled/default_medflixs.md",sourceDirName:"Nginx/etc/nginx/sites-enabled",slug:"/Nginx/etc/nginx/sites-enabled/default_medflixs",permalink:"/notebook/docs/Nginx/etc/nginx/sites-enabled/default_medflixs",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Nginx/etc/nginx/sites-enabled/default_medflixs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"default symfony",permalink:"/notebook/docs/Nginx/etc/nginx/sites-enabled/default-syfomy"},next:{title:"jupyter config",permalink:"/notebook/docs/Nginx/etc/nginx/sites-enabled/jupyter_conf"}},c={},l=[],p={toc:l};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"default-medflixs"},"default medflixs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# You may add here your\n# server {\n#   ...\n# }\n# statements for each of your virtual hosts to this file\n\n##\n# You should look at the following URL\'s in order to grasp a solid understanding\n# of Nginx configuration files in order to fully unleash the power of Nginx.\n# http://wiki.nginx.org/Pitfalls\n# http://wiki.nginx.org/QuickStart\n# http://wiki.nginx.org/Configuration\n#\n# Generally, you will want to move this file somewhere, and start with a clean\n# file but keep this around for reference. Or just disable in sites-enabled.\n#\n# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.\n##\n\n##\n# WebSocket proxy Configs\n##\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    \'\' close;\n}\n\n# my ratchet websocket server internal\nupstream websocket {\n    server 127.0.0.1:8080;\n}\n\nserver {\n    listen 8020;\n\n    # SSL\n    ssl on;\n    ssl_certificate /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n    # route all to "websocket"    \n    location / {\n        proxy_pass http://websocket;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        #1 day\n        proxy_read_timeout 86400s;\n        proxy_send_timeout 86400s;        \n    }\n}\n\nserver {\n       listen 80 default_server;\n       listen [::]:80 default_server ipv6only=on;\n       server_name mcc32015.loc;\n       return 301 https://$server_name$request_uri;\n}\n\nserver {\n    # listen 80 default_server;\n    # listen [::]:80 default_server ipv6only=on;\n\n    listen 443 ssl http2;\n\n    #root /usr/share/nginx/html;\n    #index index.html index.htm;\n    root /var/www/html/mcc3_2015/public_html;\n    index index.php;\n\n    # Make site accessible from http://localhost/\n    server_name localhost;\n\n    ssl_certificate /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n        \n    # SSLCertificateFile /etc/letsencrypt/live/www.medflixs.com/cert.pem\n    # SSLCertificateKeyFile /etc/letsencrypt/live/www.medflixs.com/privkey.pem\n\n      access_log off;\n\n    # Default cache for everthing\n    set $no_cache 0;\n\n    # Bypass cache for POST requests\n    if ($request_method = POST) { set $no_cache 1; }\n\n    # Bypass cache for URL with query string\n    if ($query_string) { set $no_cache 1; }\n\n    # Don\'t cache the following URLs\n    if ($request_uri ~* "/(administration/|login)") { set $no_cache 1; }\n\n    #Don\'t cache if there is a cookie called PHPSESSID\n    if ($http_cookie = "PHPSESSID")\n    {\n        set $no_cache 1;\n    }\n    \n    # Cache the following URLs\n    if ($request_uri ~* "(/faq|/about|/help|/mentions)$") {set $no_cache 0; }\n      \n    location / {\n        # First attempt to serve request as file, then\n        # as directory, then fall back to displaying a 404.\n        # try_files $uri $uri/ =404;\n        try_files $uri /index.php$is_args$args;\n        # Uncomment to enable naxsi on this location\n        # include /etc/nginx/naxsi.rules\n        error_log /var/www/html/nginx-error.log debug;\n    }\n\n    location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n        expires 7d;\n        access_log off;\n        add_header Pragma public;\n        add_header Cache-Control public;\n        add_header Vary Accept-Encoding;\n    }\n\n    location ~ \\.mp4$ {\n            #root /var/www/html/mcc3_2015/public_html/mp4/;\n            mp4;\n            mp4_buffer_size 4M;\n            mp4_max_buffer_size 10M;\n    }\n\n    location /phpmyadmin {\n        root /usr/share/;\n        auth_basic "Admin Login";\n        auth_basic_user_file /etc/nginx/pma_pass;\n        \n            allow 109.190.84.137;\n            deny all;\n\n        index index.php index.html index.htm;\n        location ~ ^/phpmyadmin/(.+\\.php)$ {\n                try_files $uri =404;\n                root /usr/share/;\n                fastcgi_pass 127.0.0.1:9000;\n                fastcgi_index index.php;\n                #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n                include fastcgi_params;\n                fastcgi_read_timeout 300;\n        }           \n        location ~* ^/phpmyadmin/(.+\\.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt))$ {\n                root /usr/share/;\n        }\n    }\n    location /phpMyAdmin {\n       rewrite ^/* /phpmyadmin last;\n    }\n    # Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests\n    #location /RequestDenied {\n    #   proxy_pass http://127.0.0.1:8080;    \n    #}\n\n    #error_page 404 /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    #error_page 500 502 503 504 /50x.html;\n    #location = /50x.html {\n    #   root /usr/share/nginx/html;\n    #}\n\n    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #\n    location ~ ^/(app|app_dev)\\.php(/|$) {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini\n    \n        fastcgi_cache microcache;\n        fastcgi_cache_valid 200 10m;\n\n        fastcgi_cache_bypass $no_cache;\n        fastcgi_no_cache $no_cache;\n            \n        # With php5-cgi alone:\n        fastcgi_pass 127.0.0.1:9000;\n        # With php5-fpm:\n        # fastcgi_pass unix:/var/run/php5-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n    }\n\n    # deny access to .htaccess files, if Apache\'s document root\n    # concurs with nginx\'s one\n    #\n    location ~ /\\.ht {\n        deny all;\n    }\n}\n\n\n# another virtual host using mix of IP-, name-, and port-based configuration\n#\n#server {\n#   listen 8000;\n#   listen somename:8080;\n#   server_name somename alias another.alias;\n#   root html;\n#   index index.html index.htm;\n#\n#   location / {\n#       try_files $uri $uri/ =404;\n#   }\n#}\n\n\n# HTTPS server\n#\n#server {\n#   listen 443;\n#   server_name localhost;\n#\n#   root html;\n#   index index.html index.htm;\n#\n#   ssl on;\n#   ssl_certificate cert.pem;\n#   ssl_certificate_key cert.key;\n#\n#   ssl_session_timeout 5m;\n#\n#   ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;\n#   ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";\n#   ssl_prefer_server_ciphers on;\n#\n#   location / {\n#       try_files $uri $uri/ =404;\n#   }\n#}\n')))}d.isMDXComponent=!0}}]);