"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8727],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),i=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},m=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=i(a),d=r,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return a?n.createElement(k,p(p({ref:t},m),{},{components:a})):n.createElement(k,p({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,p=new Array(o);p[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,p[1]=l;for(var i=2;i<o;i++)p[i]=a[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},34027:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var n=a(87462),r=(a(67294),a(3905));const o={slug:"Backup-Performance-Comparison"},p="Backup Performance Comparison: mysqldump vs MySQL Shell Utilities vs mydumper vs mysqlpump vs XtraBackup",l={unversionedId:"MySQL/Backup/Backup Performance Comparison",id:"MySQL/Backup/Backup Performance Comparison",title:"Backup Performance Comparison: mysqldump vs MySQL Shell Utilities vs mydumper vs mysqlpump vs XtraBackup",description:"27 Dec 2021",source:"@site/docs/MySQL/Backup/Backup Performance Comparison.md",sourceDirName:"MySQL/Backup",slug:"/MySQL/Backup/Backup-Performance-Comparison",permalink:"/notebook/docs/MySQL/Backup/Backup-Performance-Comparison",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/MySQL/Backup/Backup Performance Comparison.md",tags:[],version:"current",frontMatter:{slug:"Backup-Performance-Comparison"},sidebar:"tutorialSidebar",previous:{title:"MySQL Roadmap",permalink:"/notebook/docs/MySQL/MySQL Roadmap"},next:{title:"kinamo_mysqlbackup",permalink:"/notebook/docs/MySQL/Backup/kinamo_mysqlbackup"}},s={},i=[{value:"Benchmark Results",id:"benchmark-results",level:2},{value:"Hardware and Software Specs",id:"hardware-and-software-specs",level:2},{value:"Performance Test",id:"performance-test",level:2}],m={toc:i};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backup-performance-comparison-mysqldump-vs-mysql-shell-utilities-vs-mydumper-vs-mysqlpump-vs-xtrabackup"},"Backup Performance Comparison: mysqldump vs MySQL Shell Utilities vs mydumper vs mysqlpump vs XtraBackup"),(0,r.kt)("p",null,"27 Dec 2021"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.percona.com/blog/dump-performance-comparison-mysqldump-vs-mysql-shell-utilities-vs-mydumper/"},"https://www.percona.com/blog/dump-performance-comparison-mysqldump-vs-mysql-shell-utilities-vs-mydumper/")),(0,r.kt)("p",null,"we will compare the performance of performing a backup from a MySQL database using ",(0,r.kt)("inlineCode",{parentName:"p"},"mysqldump"),", MySQL Shell feature called Instance Dump, ",(0,r.kt)("inlineCode",{parentName:"p"},"mysqlpump"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"mydumper"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"Percona XtraBackup"),"."),(0,r.kt)("h2",{id:"benchmark-results"},"Benchmark Results"),(0,r.kt)("p",null,"The benchmark was run on an ",(0,r.kt)("inlineCode",{parentName:"p"},"m5dn.8xlarge")," instance, with ",(0,r.kt)("inlineCode",{parentName:"p"},"128GB RAM"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"32 vCPU"),", and 2xNVMe disks of ",(0,r.kt)("inlineCode",{parentName:"p"},"600GB")," (one for backup and the other one for MySQL data). The MySQL version was ",(0,r.kt)("inlineCode",{parentName:"p"},"8.0.26")," and configured with ",(0,r.kt)("inlineCode",{parentName:"p"},"89Gb")," of buffer pool, ",(0,r.kt)("inlineCode",{parentName:"p"},"20Gb")," of redo log, and a sample database of ",(0,r.kt)("inlineCode",{parentName:"p"},"177 GB")," (more details below)."),(0,r.kt)("p",null,"I\u2019ve run each command three times in order to experiment using ",(0,r.kt)("inlineCode",{parentName:"p"},"16, 32, and 64 threads"),".  The exception for this is ",(0,r.kt)("inlineCode",{parentName:"p"},"mysqldump"),", which does not have a parallel option and only runs in a ",(0,r.kt)("inlineCode",{parentName:"p"},"single-threaded")," mode."),(0,r.kt)("p",null,"We can observe interesting outcomes:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"When using ",(0,r.kt)("inlineCode",{parentName:"li"},"zstd")," compression, ",(0,r.kt)("inlineCode",{parentName:"li"},"mydumper")," really shines in terms of performance. This option was added not long ago (",(0,r.kt)("inlineCode",{parentName:"li"},"MyDumper 0.11.3"),")."),(0,r.kt)("li",{parentName:"ol"},"When ",(0,r.kt)("inlineCode",{parentName:"li"},"mydumper")," is using gzip, ",(0,r.kt)("inlineCode",{parentName:"li"},"MySQL Shell")," is the fastest backup option."),(0,r.kt)("li",{parentName:"ol"},"In 3rd we have ",(0,r.kt)("inlineCode",{parentName:"li"},"Percona XtraBackup"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"mysqlpump")," is the 4th fastest followed closer by mydumper when using gzip."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"mysqldump")," is the classic old-school style to perform dumps and is the slowest of the four tools."),(0,r.kt)("li",{parentName:"ol"},"In a server with more CPUs, the potential parallelism increases, giving even more advantage to the tools that can benefit from multiple threads.")),(0,r.kt)("h2",{id:"hardware-and-software-specs"},"Hardware and Software Specs"),(0,r.kt)("p",null,"These are the specs of the benchmark:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"32 CPUs"),(0,r.kt)("li",{parentName:"ul"},"128GB Memory"),(0,r.kt)("li",{parentName:"ul"},"2x NVMe disks 600 GB"),(0,r.kt)("li",{parentName:"ul"},"Centos 7.9"),(0,r.kt)("li",{parentName:"ul"},"MySQL 8.0.26"),(0,r.kt)("li",{parentName:"ul"},"MySQL shell 8.0.26"),(0,r.kt)("li",{parentName:"ul"},"mydumper 0.11.5 \u2013 gzip"),(0,r.kt)("li",{parentName:"ul"},"mydumper 0.11.5 \u2013 zstd"),(0,r.kt)("li",{parentName:"ul"},"Xtrabackup 8.0.26")),(0,r.kt)("p",null,"The my.cnf configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[mysqld]\ninnodb_buffer_pool_size = 89G\ninnodb_log_file_size = 10G\n")),(0,r.kt)("h2",{id:"performance-test"},"Performance Test"),(0,r.kt)("p",null,"to load the data, I choose the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Percona-Lab/sysbench-tpcc"},"tpcc")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ ./tpcc.lua --mysql-user=sysbench --mysql-password=\'sysbench\' --mysql-db=percona --time=300 --threads=64 --report-interval=1 --tables=10 --scale=100 --db-driver=mysql prepare\n\n$ time mysqldump --all-databases --max-allowed-packet=4294967295 --single-transaction -R --master-data=2 --flush-logs | gzip > /backup/dump.dmp.gz\n\n$ mysqlsh\n    MySQL JS > shell.connect(\'root@localhost:3306\');\n    MySQL localhost:3306 ssl test JS > util.dumpInstance("/backup", {ocimds: true, compatibility: ["strip_restricted_grants","ignore_missing_pks"],threads: 16})\n\n$ time mydumper --threads=16 --trx-consistency-only --events --routines --triggers --compress --outputdir /backup/ --logfile /backup/log.out --verbose=2\n\n$ time mysqlpump --default-parallelism=16 --all-databases > backup.out\n\n$ time xtrabackup --backup --parallel=16 --compress --compress-threads=16 --datadir=/mysql_data/ --target-dir=/backup/\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mydumper/mydumper"},"mydumper")))}c.isMDXComponent=!0}}]);