"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4187],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=i(r),b=o,d=m["".concat(l,".").concat(b)]||m[b]||u[b]||a;return r?n.createElement(d,c(c({ref:t},p),{},{components:r})):n.createElement(d,c({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,c[1]=s;for(var i=2;i<a;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},8977:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var n=r(7462),o=(r(7294),r(3905));const a={},c="notes",s={unversionedId:"Certbot/notes",id:"Certbot/notes",title:"notes",description:"PSMF",source:"@site/docs/Certbot/notes.md",sourceDirName:"Certbot",slug:"/Certbot/notes",permalink:"/notebook/docs/Certbot/notes",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Certbot/notes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"install",permalink:"/notebook/docs/Certbot/install"},next:{title:"\u7533\u8bf7\u514d\u8d39\u7684 Let's Encrypt \u901a\u914d\u7b26 SSL/TLS \u8bc1\u4e66",permalink:"/notebook/docs/Certbot/\u7533\u8bf7\u514d\u8d39\u7684 Lets Encrypt \u901a\u914d\u7b26 SSL-TLS \u8bc1\u4e66"}},l={},i=[{value:"PSMF",id:"psmf",level:2},{value:"PSMF_commandes",id:"psmf_commandes",level:2}],p={toc:i};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"notes"},"notes"),(0,o.kt)("h2",{id:"psmf"},"PSMF"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"/etc/letsencrypt/keys ?"),(0,o.kt)("li",{parentName:"ul"},"/etc/letsencrypt/csr"),(0,o.kt)("li",{parentName:"ul"},"/etc/letsencrypt/live"),(0,o.kt)("li",{parentName:"ul"})),(0,o.kt)("h2",{id:"psmf_commandes"},"PSMF_commandes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ apt-get install software-properties-common\n$ add-apt-repository universe\n$ add-apt-repository ppa:certbot/certbot\n$ apt-get update\n$ apt-get install certbot python-certbot-apache apache2\n$ apt-get install certbot python3-certbot-apache\n$ certbot --apache -d psmf.universalmedica.com\n$ systemctl reload apache2\n$ nano /etc/cron.daily/certbot-renew\n$ clear\n$ chmod +x /etc/cron.daily/certbot-renew\n    01 02,14 * * * /etc/cron.daily/certbot-renew\n\n$ certbot --version\n    0.40.0\n\n$ systemctl list-timers\n$ systemctl status certbot.timer\n$ ll /etc/systemd/system/timers.target.wants/certbot.timer\n$ journalctl -u certbot.service\n")))}m.isMDXComponent=!0}}]);