"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[71770],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(n),p=a,h=u["".concat(s,".").concat(p)]||u[p]||d[p]||i;return n?r.createElement(h,o(o({ref:t},m),{},{components:n})):r.createElement(h,o({ref:t},m))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},31910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:8},o="run-time-reference",l={unversionedId:"Scorm/run-time-reference_SCORM_1-2",id:"Scorm/run-time-reference_SCORM_1-2",title:"run-time-reference",description:"https://scorm.com/scorm-explained/technical-scorm/run-time/run-time-reference/#section-3",source:"@site/docs/Scorm/run-time-reference_SCORM_1-2.md",sourceDirName:"Scorm",slug:"/Scorm/run-time-reference_SCORM_1-2",permalink:"/notebook/docs/Scorm/run-time-reference_SCORM_1-2",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Scorm/run-time-reference_SCORM_1-2.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Sequencing example that demonstrates the new features of SCORM 2004 4th Edition.",permalink:"/notebook/docs/Scorm/Golf Explained - 11-SCORM 2004 4th Edition Features"},next:{title:"run-time-reference",permalink:"/notebook/docs/Scorm/run-time-reference"}},s={},c=[{value:"SCORM 1.2",id:"scorm-12",level:2},{value:"API Signature",id:"api-signature",level:3},{value:"Data Model (RO=ReadOnly, RW=ReadWrite, WO=WriteOnly)",id:"data-model-roreadonly-rwreadwrite-wowriteonly",level:3},{value:"Error Codes",id:"error-codes",level:2}],m={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"run-time-reference"},"run-time-reference"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://scorm.com/scorm-explained/technical-scorm/run-time/run-time-reference/#section-3"},"https://scorm.com/scorm-explained/technical-scorm/run-time/run-time-reference/#section-3")),(0,a.kt)("h2",{id:"scorm-12"},"SCORM 1.2"),(0,a.kt)("h3",{id:"api-signature"},"API Signature"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"LMSInitialize( \u201c\u201d ) : bool \u2013 Begins a communication session with the LMS."),(0,a.kt)("li",{parentName:"ul"},"LMSFinish( \u201c\u201d ) : bool \u2013 Ends a communication session with the LMS."),(0,a.kt)("li",{parentName:"ul"},"LMSGetValue( element : CMIElement ) : string \u2013 Retrieves a value from the LMS."),(0,a.kt)("li",{parentName:"ul"},"LMSSetValue( element : CMIElement, value : string) : string \u2013 Saves a value to the LMS."),(0,a.kt)("li",{parentName:"ul"},"LMSCommit( \u201c\u201d ) : bool \u2013 Indicates to the LMS that all data should be persisted (not required)."),(0,a.kt)("li",{parentName:"ul"},"LMSGetLastError() : CMIErrorCode \u2013 Returns the error code that resulted from the last API call."),(0,a.kt)("li",{parentName:"ul"},"LMSGetErrorString( errorCode : CMIErrorCode ) : string \u2013 Returns a short string describing the specified error code."),(0,a.kt)("li",{parentName:"ul"},"LMSGetDiagnostic( errorCode : CMIErrorCode ) : string \u2013 Returns detailed information about the last error that occurred.")),(0,a.kt)("h3",{id:"data-model-roreadonly-rwreadwrite-wowriteonly"},"Data Model (RO=ReadOnly, RW=ReadWrite, WO=WriteOnly)"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"core")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cmi.core._children (student_id, student_name, lesson_location, credit, lesson_status, entry, score, total_time, lesson_mode, exit, session_time, RO) Listing of supported data model elements"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.student_id (CMIString (SPM: 255), RO) Identifies the student on behalf of whom the SCO was launched"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.student_name (CMIString (SPM: 255), RO) Name provided for the student by the LMS"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.lesson_location (CMIString (SPM: 255), RW) The learner\u2019s current location in the SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.credit (\u201ccredit\u201d, \u201cno-credit\u201d, RO) Indicates whether the learner will be credited for performance in the SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.lesson_status (\u201cpassed\u201d, \u201ccompleted\u201d, \u201cfailed\u201d, \u201cincomplete\u201d, \u201cbrowsed\u201d, \u201cnot attempted\u201d, RW) Indicates whether the learner has completed and satisfied the requirements for the SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.entry (\u201cab-initio\u201d, \u201cresume\u201d, \u201c\u201d, RO) Asserts whether the learner has previously accessed the SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.score_children (raw,min,max, RO) Listing of supported data model elements"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.score.raw (CMIDecimal, RW) Number that reflects the performance of the learner relative to the range bounded by the values of min and max"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.score.max (CMIDecimal, RW) Maximum value in the range for the raw score"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.score.min (CMIDecimal, RW) Minimum value in the range for the raw score"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.total_time (CMITimespan, RO) Sum of all of the learner\u2019s session times accumulated in the current learner attempt"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.lesson_mode (\u201cbrowse\u201d, \u201cnormal\u201d, \u201creview\u201d, RO) Identifies one of three possible modes in which the SCO may be presented to the learner"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.exit (\u201ctime-out\u201d, \u201csuspend\u201d, \u201clogout\u201d, \u201c\u201d, WO) Indicates how or why the learner left the SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.core.session_time (CMITimespan, WO) Amount of time that the learner has spent in the current learner session for this SCO")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"date")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cmi.suspend_data (CMIString (SPM: 4096), RW) Provides space to store and retrieve data between learner sessions"),(0,a.kt)("li",{parentName:"ul"},"cmi.launch_data (CMIString (SPM: 4096), RO) Data provided to a SCO after launch, initialized from the ",(0,a.kt)("em",{parentName:"li"},"dataFromLMS")," manifest element")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"comments")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cmi.comments (CMIString (SPM: 4096), RW) Textual input from the learner about the SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.comments_from_lms (CMIString (SPM: 4096), RO) Comments or annotations associated with a SCO")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"objectives")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cmi.objectives._children (id,score,status, RO) Listing of supported data model elements"),(0,a.kt)("li",{parentName:"ul"},"cmi.objectives._count (non-negative integer, RO) Current number of objectives being stored by the LMS"),(0,a.kt)("li",{parentName:"ul"},"cmi.objectives.n.id (CMIIdentifier, RW) Unique label for the objective"),(0,a.kt)("li",{parentName:"ul"},"cmi.objectives.n.score._children (raw,min,max, RO) Listing of supported data model elements"),(0,a.kt)("li",{parentName:"ul"},"cmi.objectives.n.score.raw (CMIDecimal, RW) Number that reflects the performance of the learner, for the objective, relative to the range bounded by the values of min and max"),(0,a.kt)("li",{parentName:"ul"},"cmi.objectives.n.score.max (CMIDecimal, Rw) Maximum value, for the objective, in the range for the raw score"),(0,a.kt)("li",{parentName:"ul"},"cmi.objectives.n.score.min (CMIDecimal, RW) Minimum value, for the objective, in the range for the raw score"),(0,a.kt)("li",{parentName:"ul"},"cmi.objectives.n.status (\u201cpassed\u201d, \u201ccompleted\u201d, \u201cfailed\u201d, \u201cincomplete\u201d, \u201cbrowsed\u201d, \u201cnot attempted\u201d, RW) Indicates whether the learner has completed or satisfied the objective")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"student_data")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cmi.student_data._children (mastery_score, max_time_allowed, time_limit_action, RO) Listing of supported data model elements"),(0,a.kt)("li",{parentName:"ul"},"cmi.student_data.mastery_score (CMIDecimal, RO) Passing score required to master the SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.student_data.max_time_allowed (CMITimespan, RO) Amount of accumulated time the learner is allowed to use a SCO"),(0,a.kt)("li",{parentName:"ul"},"cmi.student_data.time_limit_action (exit,message,\u201d \u201cexit,no message\u201d,\u201d continue,message\u201d, \u201ccontinue, no message\u201d, RO) Indicates what the SCO should do when max_time_allowed is exceeded")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"student_preference")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cmi.student_preference._children (audio,language,speed,text, RO) Listing of supported data model elements"),(0,a.kt)("li",{parentName:"ul"},"cmi.student_preference.audio (CMISInteger, RW) Specifies an intended change in perceived audio level"),(0,a.kt)("li",{parentName:"ul"},"cmi.student_preference.language (CMIString (SPM: 255), RW) The student\u2019s preferred language for SCOs with multilingual capability"),(0,a.kt)("li",{parentName:"ul"},"cmi.student_preference.speed (CMISInteger, RW) The learner\u2019s preferred relative speed of content delivery"),(0,a.kt)("li",{parentName:"ul"},"cmi.student_preference.text (CMISInteger, RW) Specifies whether captioning text corresponding to audio is displayed")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"interactions")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cmi.interactions._children (id,objectives,time,type,correct_responses,weighting,student_response,result,latency, RO) Listing of supported data model elements"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions._count (CMIInteger, RO) Current number of interactions being stored by the LMS"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.id (CMIIdentifier, WO) Unique label for the interaction"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.objectives._count (CMIInteger, RO) Current number of objectives (i.e., objective identifiers) being stored by the LMS for this interaction"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.objectives.n.id (CMIIdentifier, WO) Label for objectives associated with the interaction"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.time (CMITime, WO) Point in time at which the interaction was first made available to the student for student interaction and response"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.type (\u201ctrue-false\u201d, \u201cchoice\u201d, \u201cfill-in\u201d, \u201cmatching\u201d, \u201cperformance\u201d, \u201csequencing\u201d, \u201clikert\u201d, \u201cnumeric\u201d, WO) Which type of interaction is recorded"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.correct_responses._count (CMIInteger, RO) Current number of correct responses being stored by the LMS for this interaction"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.correct_responses.n.pattern (format depends on interaction type, WO) One correct response pattern for the interaction"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.weighting (CMIDecimal, WO) Weight given to the interaction relative to other interactions"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.student_response (format depends on interaction type, WO) Data generated when a student responds to an interaction"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.result (\u201ccorrect\u201d, \u201cwrong\u201d, \u201cunanticipated\u201d, \u201cneutral\u201d, \u201cx.x ","[CMIDecimal]","\u201d, WO) Judgment of the correctness of the learner response"),(0,a.kt)("li",{parentName:"ul"},"cmi.interactions.n.latency (CMITimespan, WO) Time elapsed between the time the interaction was made available to the learner for response and the time of the first response")),(0,a.kt)("h2",{id:"error-codes"},"Error Codes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"No error (0) No error occurred, the previous API call was successful."),(0,a.kt)("li",{parentName:"ul"},"General Exception (101) No specific error code exists to describe the error. Use LMSGetDiagnostic for more information."),(0,a.kt)("li",{parentName:"ul"},"Invalid argument error (201) Indicates that an argument represents an invalid data model element or is otherwise incorrect."),(0,a.kt)("li",{parentName:"ul"},"Element cannot have children (202) Indicates that LMSGetValue was called with a data model element name that ends in \u201c_children\u201d for a data model element that does not support the \u201c_children\u201d suffix."),(0,a.kt)("li",{parentName:"ul"},"Element not an array. Cannot have count. (203) Indicates that LMSGetValue was called with a data model element name that ends in \u201c_count\u201d for a data model element that does not support the \u201c_count\u201d suffix."),(0,a.kt)("li",{parentName:"ul"},"Not initialized (301) Indicates that an API call was made before the call to LMSInitialize."),(0,a.kt)("li",{parentName:"ul"},"Not implemented error (401) The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement."),(0,a.kt)("li",{parentName:"ul"},"Invalid set value, element is a keyword (402) Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \u201c_children\u201d and \u201c_count\u201d)."),(0,a.kt)("li",{parentName:"ul"},"Element is read only. (403) LMSSetValue was called with a data model element that can only be read."),(0,a.kt)("li",{parentName:"ul"},"Element is write only (404) LMSGetValue was called on a data model element that can only be written to."),(0,a.kt)("li",{parentName:"ul"},"Incorrect Data Type (405) LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.")))}u.isMDXComponent=!0}}]);