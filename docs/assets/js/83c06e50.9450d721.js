"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9937],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),g=l,h=u["".concat(p,".").concat(g)]||u[g]||m[g]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=g;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},701:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const r={title:"AllenNLP",date:new Date("2020-03-31T10:00:00.000Z"),comments:!0,categories:["Python"],tags:["Python","AllenNLP"]},o="github open source",i={unversionedId:"Python/AllenNLP/ReadMe",id:"Python/AllenNLP/ReadMe",title:"AllenNLP",description:"- https://github.com/topics/deep-learning",source:"@site/docs/Python/AllenNLP/ReadMe.md",sourceDirName:"Python/AllenNLP",slug:"/Python/AllenNLP/",permalink:"/notebook/docs/Python/AllenNLP/",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Python/AllenNLP/ReadMe.md",tags:[{label:"Python",permalink:"/notebook/docs/tags/python"},{label:"AllenNLP",permalink:"/notebook/docs/tags/allen-nlp"}],version:"current",frontMatter:{title:"AllenNLP",date:"2020-03-31T10:00:00.000Z",comments:!0,categories:["Python"],tags:["Python","AllenNLP"]},sidebar:"tutorialSidebar",previous:{title:"AllenNLP",permalink:"/notebook/docs/category/allennlp"},next:{title:"Deepset ai Haystack",permalink:"/notebook/docs/category/deepset-ai-haystack"}},p={},s=[{value:"AllenNLP: A Deep Semantic Natural Language Processing Platform",id:"allennlp-a-deep-semantic-natural-language-processing-platform",level:2},{value:"Installation",id:"installation",level:2},{value:"About",id:"about",level:2},{value:"What is AllenNLP",id:"what-is-allennlp",level:2}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"github-open-source"},"github open source"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/topics/deep-learning"},"https://github.com/topics/deep-learning")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/topics/nlp"},"https://github.com/topics/nlp")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/topics/natural-language-processing"},"https://github.com/topics/natural-language-processing"))),(0,l.kt)("h2",{id:"allennlp-a-deep-semantic-natural-language-processing-platform"},"AllenNLP: A Deep Semantic Natural Language Processing Platform"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/allenai/allennlp"},"https://github.com/allenai/allennlp")),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#installation"},"Installation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#installing-via-pip"},"Installing via pip"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"$ pip install allennlp"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#installing-using-docker"},"Installing using Docker"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"}))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#installing-from-source"},"Installing from source"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"})))))),(0,l.kt)("h2",{id:"about"},"About"),(0,l.kt)("p",null,"AllenNLP is a complete platform for solving natural language processing tasks in PyTorch. We provide a broad collection of existing model implementations that are well documented and engineered to a high standard, making them a great foundation for further research."),(0,l.kt)("p",null,"AllenNLP offers a high-level configuration language to implement many common approaches in NLP, such as transformer experiments, multi-task training, vision+language tasks, fairness, and interpretability. This allows experimentation on a broad range of tasks purely through configuration, so you can focus on the important questions in your research."),(0,l.kt)("h2",{id:"what-is-allennlp"},"What is AllenNLP"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a library with well-thought-out abstractions encapsulating the common data and model operations that are done in NLP research"),(0,l.kt)("li",{parentName:"ul"},"a commandline tool for training PyTorch models"),(0,l.kt)("li",{parentName:"ul"},"a collection of pre-trained models that you can use to make predictions"),(0,l.kt)("li",{parentName:"ul"},"a collection of readable reference implementations of common / recent NLP models"),(0,l.kt)("li",{parentName:"ul"},"an experiment framework for doing replicable science"),(0,l.kt)("li",{parentName:"ul"},"a way to demo your research"),(0,l.kt)("li",{parentName:"ul"},"open source and community driven")))}u.isMDXComponent=!0}}]);