"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[11422],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},23456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const a={},i="How to Use the NGINX RTMP Module to Setup a Streaming Server (Native installation)",l={unversionedId:"Nginx/RTMP/How to Use the NGINX RTMP Module to Setup a Streaming Server",id:"Nginx/RTMP/How to Use the NGINX RTMP Module to Setup a Streaming Server",title:"How to Use the NGINX RTMP Module to Setup a Streaming Server (Native installation)",description:"example 1//www.servermania.com/kb/articles/nginx-rtmp/ (November 23, 2019)",source:"@site/docs/Nginx/RTMP/How to Use the NGINX RTMP Module to Setup a Streaming Server.md",sourceDirName:"Nginx/RTMP",slug:"/Nginx/RTMP/How to Use the NGINX RTMP Module to Setup a Streaming Server",permalink:"/notebook/docs/Nginx/RTMP/How to Use the NGINX RTMP Module to Setup a Streaming Server",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Nginx/RTMP/How to Use the NGINX RTMP Module to Setup a Streaming Server.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Nginx, Let's Encrypt",permalink:"/notebook/docs/Nginx/Nginx_Let-s_Encrypt"},next:{title:"Monter un serveur RTMP/HLS avec NGinx et diffuser vers Facebook  (test\xe9 avec des erreurs)",permalink:"/notebook/docs/Nginx/RTMP/Monter un serveur RTMP_HLS avec NGinx et diffuser vers Facebook"}},s={},p=[{value:"What is Nginx RTMP?",id:"what-is-nginx-rtmp",level:2},{value:"Installation Instructions",id:"installation-instructions",level:2}],c={toc:p};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-use-the-nginx-rtmp-module-to-setup-a-streaming-server-native-installation"},"How to Use the NGINX RTMP Module to Setup a Streaming Server (Native installation)"),(0,o.kt)("p",null,"example 1: ",(0,o.kt)("a",{parentName:"p",href:"https://www.servermania.com/kb/articles/nginx-rtmp/"},"https://www.servermania.com/kb/articles/nginx-rtmp/")," (November 23, 2019)"),(0,o.kt)("p",null,"example 2: ",(0,o.kt)("a",{parentName:"p",href:"https://www.nginx.com/blog/video-streaming-for-remote-learning-with-nginx/"},"https://www.nginx.com/blog/video-streaming-for-remote-learning-with-nginx/")," (April 16, 2020\n)"),(0,o.kt)("h2",{id:"what-is-nginx-rtmp"},"What is Nginx RTMP?"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Nginx RTMP")," is an Nginx module which allows you to add ",(0,o.kt)("em",{parentName:"p"},"RTMP")," and ",(0,o.kt)("em",{parentName:"p"},"HLS")," streaming to your media server."),(0,o.kt)("p",null,"Previously, the ",(0,o.kt)("em",{parentName:"p"},"RTMP")," and ",(0,o.kt)("em",{parentName:"p"},"HLS")," modules were seperate Nginx modules, but they can now all be added to Nginx as a single module."),(0,o.kt)("h2",{id:"installation-instructions"},"Installation Instructions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ apt-get update\n$ apt-get Upgrade\n$ apt-get install -y git build-essential ffmpeg libpcre3 libpcre3-dev libssl-dev zlib1g-dev\n$ git clone https://github.com/sergey-dryabzhinsky/nginx-rtmp-module.git\n")),(0,o.kt)("p",null,"example 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ wget http://nginx.org/download/nginx-1.17.6.tar.gz\n$ tar -xf nginx-1.17.6.tar.gz\n$ cd nginx-1.17.6\n$ ./configure --prefix=/usr/local/nginx --with-http_ssl_module --add-module=../nginx-rtmp-module\n$ make -j 1\n$ make install  \n$ rm /usr/local/nginx/conf/nginx.conf\n$ nano /usr/local/nginx/conf/nginx.conf\n$ /usr/local/nginx/sbin/nginx\n$ ffmpeg -re -i example-vid.mp4 -vcodec libx264 -vprofile baseline -g 30 -acodec aac -strict -2 -f flv rtmp://localhost/show/stream\n")),(0,o.kt)("p",null,"example 2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ git clone https://github.com/nginx/nginx.git\n$ cd nginx\n$ ./auto/configure --add-module=../nginx-rtmp-module\n$ make\n$ sudo make install\n$ nano nginx.conf\n$ sudo cp ~/nginx.conf /usr/local/nginx/conf\n$ sudo /usr/local/nginx/sbin/nginx -t \n$ sudo /usr/local/nginx/sbin/nginx \n$ ffmpeg -re -i <your mp4>.mp4 -vcodec copy -loop -1 -c:a aac -b:a 160k -ar 44100 -strict -2 -f flv rtmp://192.168.1.138/live/<app name>\n")),(0,o.kt)("p",null,"example 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"worker_processes  auto;\nevents {\n    worker_connections  1024;\n}\n\n# RTMP configuration\nrtmp {\n    server {\n        listen 1935; # Listen on standard RTMP port\n        chunk_size 4000;\n\n        application show {\n            live on;\n            # Turn on HLS\n            hls on;\n            hls_path /mnt/hls/;\n            hls_fragment 3;\n            hls_playlist_length 60;\n            # disable consuming the stream from nginx as rtmp\n            deny play all;\n        }\n    }\n}\n\nhttp {\n    sendfile off;\n    tcp_nopush on;\n    directio 512;\n    default_type application/octet-stream;\n\n    server {\n        listen 8080;\n\n        location / {\n            # Disable cache\n            add_header 'Cache-Control' 'no-cache';\n\n            # CORS setup\n            add_header 'Access-Control-Allow-Origin' '*' always;\n            add_header 'Access-Control-Expose-Headers' 'Content-Length';\n\n            # allow CORS preflight requests\n            if ($request_method = 'OPTIONS') {\n                add_header 'Access-Control-Allow-Origin' '*';\n                add_header 'Access-Control-Max-Age' 1728000;\n                add_header 'Content-Type' 'text/plain charset=UTF-8';\n                add_header 'Content-Length' 0;\n                return 204;\n            }\n\n            types {\n                application/dash+xml mpd;\n                application/vnd.apple.mpegurl m3u8;\n                video/mp2t ts;\n            }\n\n            root /mnt/;\n        }\n    }\n}\n")),(0,o.kt)("p",null,"example 2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"user www-data;\nworker_processes  auto;\npid /run/nginx.pid;\n\nevents {\n    worker_connections  1024;\n    # multi_accept on;\n}\n\n# RTMP configuration\nrtmp {\n    server {\n        listen 1935; # Listen on standard RTMP port\n\n        application live {\n            live on;\n            interleave on;\n            # Turn on HLS\n            hls on;\n            hls_path /tmp/hls/;\n            hls_fragment 15s;\n            dash on;\n            dash_path /tmp/dash/;\n            dash_fragment 15s;\n            # pull rtmp://tv2.example.com:443/root/new name=tv2 static;\n        }\n    }\n}\n\nhttp {\n    default_type application/octet-stream;\n\n    server {\n        listen 80;\n\n        location / {\n            root /tmp;\n        }\n\n        types {         \n            application/vnd.apple.mpegurl m3u8;\n            video/mp2t ts;\n            text/html html;\n            application/dash+xml mpd;\n        }\n    }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"RTMP \u2013 rtmp://NGINX_server/live/bbb\nHLS \u2013 http://NGINX_server/hls/bbb.m3u8\nDASH \u2013 http://NGINX_server/dash/bbb.mpd\n")))}m.isMDXComponent=!0}}]);