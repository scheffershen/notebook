"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[93738],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(t),d=r,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return t?a.createElement(f,l(l({ref:n},c),{},{components:t})):a.createElement(f,l({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},48852:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const o={},l="JavaScript Modules: A Beginner\u2019s Guide",i={unversionedId:"Javascript/JavaScript-Modules-A-Beginner-s-Guide",id:"Javascript/JavaScript-Modules-A-Beginner-s-Guide",title:"JavaScript Modules: A Beginner\u2019s Guide",description:"Sommaires",source:"@site/docs/Javascript/JavaScript-Modules-A-Beginner-s-Guide.md",sourceDirName:"Javascript",slug:"/Javascript/JavaScript-Modules-A-Beginner-s-Guide",permalink:"/notebook/docs/Javascript/JavaScript-Modules-A-Beginner-s-Guide",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Javascript/JavaScript-Modules-A-Beginner-s-Guide.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Difference between this and self in JavaScript",permalink:"/notebook/docs/Javascript/Difference-between-this-and-self-in-JavaScript"},next:{title:"The JavaScript You Need to Know",permalink:"/notebook/docs/Javascript/The-JavaScript-You-Need-to-Know"}},u={},s=[{value:"Sommaires",id:"sommaires",level:2},{value:"Why use modules?",id:"why-use-modules",level:2},{value:"Module pattern",id:"module-pattern",level:2},{value:"Example 1: Anonymous closure (IIFE)",id:"example-1-anonymous-closure-iife",level:3},{value:"Example 2: Global import",id:"example-2-global-import",level:3},{value:"Example 3: Object interface",id:"example-3-object-interface",level:3},{value:"Example 4: Revealing module pattern",id:"example-4-revealing-module-pattern",level:3},{value:"CommonJS module pattern",id:"commonjs-module-pattern",level:2},{value:"AMD(Asynchronous Module Definition) module pattern",id:"amdasynchronous-module-definition-module-pattern",level:2},{value:"UMD(Universal Module Definition) module pattern",id:"umduniversal-module-definition-module-pattern",level:2},{value:"ECMAScript 6 (ES6) module pattern",id:"ecmascript-6-es6-module-pattern",level:2},{value:"Resources",id:"resources",level:2}],c={toc:s};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"javascript-modules-a-beginners-guide"},"JavaScript Modules: A Beginner\u2019s Guide"),(0,r.kt)("h2",{id:"sommaires"},"Sommaires"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#why-use-modules"},"Why use modules")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#module-pattern"},"Module pattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#anonymous-closure-IIFE"},"Anonymous closure (IIFE)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#global-import"},"Global import")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#object-interface"},"Object interface")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#revealing-module-pattern"},"Revealing module pattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#CommonJS-module-pattern"},"CommonJS module pattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#AMD-module-patten"},"AMD(Asynchronous Module Definition) module pattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#UMD-module-pattern"},"-MD(Universal Module Definition) module pattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ES6-module-pattern"},"ECMAScript 6 (ES6) module pattern"))),(0,r.kt)("h2",{id:"why-use-modules"},"Why use modules?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"1) Maintainability"),(0,r.kt)("li",{parentName:"ul"},"2) Namespacing"),(0,r.kt)("li",{parentName:"ul"},"3) Reusability")),(0,r.kt)("h2",{id:"module-pattern"},"Module pattern"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"The Module pattern is used to mimic the concept of classes")," (since JavaScript doesn\u2019t natively support classes) so that we can store both public and private methods and variables inside a single object \u2014 similar to how classes are used in other programming languages like Java or Python."),(0,r.kt)("p",null,"That allows us to create a public facing API for the methods that we want to expose to the world, while still encapsulating private variables and methods in a closure scope."),(0,r.kt)("h3",{id:"example-1-anonymous-closure-iife"},"Example 1: Anonymous closure (IIFE)"),(0,r.kt)("p",null,"This lets us hide variables from the parent (global) namespace."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"(function () {\n  // We keep these variables private inside this closure scope\n  var myGrades = [93, 95, 88, 0, 55, 91];\n  var average = function() {\n    var total = myGrades.reduce(function(accumulator, item) {\n      return accumulator + item}, 0);\n      return 'Your average grade is ' + total / myGrades.length + '.';\n  }\n  var failing = function(){\n    var failingGrades = myGrades.filter(function(item) {\n      return item < 70;});\n    return 'You failed ' + failingGrades.length + ' times.';\n  }\n  console.log(failing());\n}());\n\n// \u2018You failed 2 times.\u2019\n")),(0,r.kt)("p",null,"this approach is that is that you can use local variables inside this function without accidentally overwriting existing global variables, yet still access the global variables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var global = 'Hello, I am a global variable :)';\n(function () {\n  // We keep these variables private inside this closure scope\n  var myGrades = [93, 95, 88, 0, 55, 91];\n  var average = function() {\n    var total = myGrades.reduce(function(accumulator, item) {\n      return accumulator + item}, 0);\n      return 'Your average grade is ' + total / myGrades.length + '.';\n  }\n  var failing = function(){\n    var failingGrades = myGrades.filter(function(item) {\n      return item < 70;});\n    return 'You failed ' + failingGrades.length + ' times.';\n  }\n  console.log(failing());\n  console.log(global);\n}());\n// 'You failed 2 times.'\n// 'Hello, I am a global variable :)'\n")),(0,r.kt)("h3",{id:"example-2-global-import"},"Example 2: Global import"),(0,r.kt)("p",null,"Another popular approach used by libraries like jQuery is ",(0,r.kt)("inlineCode",{parentName:"p"},"global import"),". It\u2019s similar to the anonymous closure we just saw, except now we pass in globals as parameters:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"globalVariable")," is the only variable that\u2019s global. The benefit of this approach over anonymous closures is that you declare the global variables upfront"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"(function (globalVariable) {\n  // Keep this variables private inside this closure scope\n  var privateFunction = function() {\n    console.log('Shhhh, this is private!');\n  }\n  // Expose the below methods via the globalVariable interface while\n  // hiding the implementation of the method within the \n  // function() block\n  globalVariable.each = function(collection, iterator) {\n    if (Array.isArray(collection)) {\n      for (var i = 0; i < collection.length; i++) {\n        iterator(collection[i], i, collection);\n      }\n    } else {\n      for (var key in collection) {\n        iterator(collection[key], key, collection);\n      }\n    }\n  };\n  globalVariable.filter = function(collection, test) {\n    var filtered = [];\n    globalVariable.each(collection, function(item) {\n      if (test(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n  globalVariable.map = function(collection, iterator) {\n    var mapped = [];\n    globalUtils.each(collection, function(value, key, collection) {\n      mapped.push(iterator(value));\n    });\n    return mapped;\n  };\n  globalVariable.reduce = function(collection, iterator, accumulator) {\n    var startingValueMissing = accumulator === undefined;\n    globalVariable.each(collection, function(item) {\n      if(startingValueMissing) {\n        accumulator = item;\n        startingValueMissing = false;\n      } else {\n        accumulator = iterator(accumulator, item);\n      }\n    });\n    return accumulator;\n  };\n }(globalVariable));\n")),(0,r.kt)("h3",{id:"example-3-object-interface"},"Example 3: Object interface"),(0,r.kt)("p",null,"another approach is to create modules using a self-contained object interface"),(0,r.kt)("p",null,"this approach lets us decide what variables/methods we want to keep private (e.g. myGrades) and what variables/methods we want to expose by putting them in the return statement (e.g. average & failing)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var myGradesCalculate = (function () {\n  // Keep this variable private inside this closure scope\n  var myGrades = [93, 95, 88, 0, 55, 91];\n  // Expose these functions via an interface while hiding\n  // the implementation of the module within the function() block\n  return {\n    average: function() {\n      var total = myGrades.reduce(function(accumulator, item) {\n        return accumulator + item;\n        }, 0);\n      return'Your average grade is ' + total / myGrades.length + '.';\n    },\n    failing: function() {\n      var failingGrades = myGrades.filter(function(item) {\n          return item < 70;\n        });\n      return 'You failed ' + failingGrades.length + ' times.';\n    }\n  }\n})();\nmyGradesCalculate.failing(); // 'You failed 2 times.' \nmyGradesCalculate.average(); // 'Your average grade is 70.33333333333333.'\n")),(0,r.kt)("h3",{id:"example-4-revealing-module-pattern"},"Example 4: Revealing module pattern"),(0,r.kt)("p",null,"it ensures all methods and variables are kept private until explicitly exposed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var myGradesCalculate = (function () {\n  // Keep this variable private inside this closure scope\n  var myGrades = [93, 95, 88, 0, 55, 91];\n  var average = function() {\n    var total = myGrades.reduce(function(accumulator, item) {\n      return accumulator + item;\n      }, 0);\n    return'Your average grade is ' + total / myGrades.length + '.';\n  };\n  var failing = function() {\n    var failingGrades = myGrades.filter(function(item) {\n        return item < 70;\n      });\n    return 'You failed ' + failingGrades.length + ' times.';\n  };\n  // Explicitly reveal public pointers to the private functions \n  // that we want to reveal publicly\n  return {\n    average: average,\n    failing: failing\n  }\n})();\nmyGradesCalculate.failing(); // 'You failed 2 times.' \nmyGradesCalculate.average(); // 'Your average grade is 70.33333333333333.'\n")),(0,r.kt)("h2",{id:"commonjs-module-pattern"},"CommonJS module pattern"),(0,r.kt)("p",null,"CommonJS is a volunteer working group that designs and implements JavaScript APIs for declaring modules."),(0,r.kt)("p",null,"With CommonJS, ",(0,r.kt)("inlineCode",{parentName:"p"},"each JavaScript file stores modules")," in its own unique module context (just like wrapping it in a closure). In this scope, we use the module.exports object to expose modules, and require to import them."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function myModule() {\n  this.hello = function() {\n    return 'hello!';\n  }\n\n  this.goodbye = function() {\n    return 'goodbye!';\n  }\n}\n\nmodule.exports = myModule;\n")),(0,r.kt)("p",null,"when someone wants to use myModule, they can require it in their file, like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"var myModule = require('myModule');\n\nvar myModuleInstance = new myModule();\nmyModuleInstance.hello(); // 'hello!'\nmyModuleInstance.goodbye(); // 'goodbye!'\n")),(0,r.kt)("h2",{id:"amdasynchronous-module-definition-module-pattern"},"AMD(Asynchronous Module Definition) module pattern"),(0,r.kt)("p",null,"Loading modules using AMD looks something like this"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"define(['myModule', 'myOtherModule'], function(myModule, myOtherModule) {\n  console.log(myModule.hello());\n});\n\ndefine([], function() {\n  return {\n    hello: function() {\n      console.log('hello');\n    },\n    goodbye: function() {\n      console.log('goodbye');\n    }\n  };\n});\n")),(0,r.kt)("p",null,"the ",(0,r.kt)("inlineCode",{parentName:"p"},"define")," function takes as its first argument an array of each of the module\u2019s dependencies."),(0,r.kt)("h2",{id:"umduniversal-module-definition-module-pattern"},"UMD(Universal Module Definition) module pattern"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n      // AMD\n    define(['myModule', 'myOtherModule'], factory);\n  } else if (typeof exports === 'object') {\n      // CommonJS\n    module.exports = factory(require('myModule'), require('myOtherModule'));\n  } else {\n    // Browser globals (Note: root is window)\n    root.returnExports = factory(root.myModule, root.myOtherModule);\n  }\n}(this, function (myModule, myOtherModule) {\n  // Methods\n  function notHelloOrGoodbye(){}; // A private method\n  function hello(){}; // A public method because it's returned (see below)\n  function goodbye(){}; // A public method because it's returned (see below)\n  // Exposed public methods\n  return {\n      hello: hello,\n      goodbye: goodbye\n  }\n}));\n")),(0,r.kt)("h2",{id:"ecmascript-6-es6-module-pattern"},"ECMAScript 6 (ES6) module pattern"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// lib/counter.js\nvar counter = 1;\nfunction increment() {\n  counter++;\n}\nfunction decrement() {\n  counter--;\n}\nmodule.exports = {\n  counter: counter,\n  increment: increment,\n  decrement: decrement\n};\n\n// src/main.js\nvar counter = require('../../lib/counter');\ncounter.increment();\nconsole.log(counter.counter); // 1\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// lib/counter.js\nexport let counter = 1;\nexport function increment() {\n  counter++;\n}\nexport function decrement() {\n  counter--;\n}\n\n// src/main.js\nimport * as counter from '../../counter';\nconsole.log(counter.counter); // 1\ncounter.increment();\nconsole.log(counter.counter); // 2\n")),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.freecodecamp.org/news/javascript-modules-a-beginner-s-guide-783f7d7a5fcc/"},"https://www.freecodecamp.org/news/javascript-modules-a-beginner-s-guide-783f7d7a5fcc/")),(0,r.kt)("p",null,"JANUARY 22, 2016, by Preethi Kasireddy"))}m.isMDXComponent=!0}}]);