"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[72562],{3905:(e,t,r)=>{r.d(t,{Zo:()=>h,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},h=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),c=p(r),u=o,m=c["".concat(s,".").concat(u)]||c[u]||d[u]||a;return r?n.createElement(m,l(l({ref:t},h),{},{components:r})):n.createElement(m,l({ref:t},h))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},41229:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},l="PHP keyword Search ChatGPT example",i={unversionedId:"OpenAI/examples/PHP keyword Search ChatGPT example",id:"OpenAI/examples/PHP keyword Search ChatGPT example",title:"PHP keyword Search ChatGPT example",description:"step 1",source:"@site/docs/OpenAI/examples/PHP keyword Search ChatGPT example.md",sourceDirName:"OpenAI/examples",slug:"/OpenAI/examples/PHP keyword Search ChatGPT example",permalink:"/notebook/docs/OpenAI/examples/PHP keyword Search ChatGPT example",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/OpenAI/examples/PHP keyword Search ChatGPT example.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"6 \u500b\u4f60\u53ef\u80fd\u4e0d\u77e5\u9053\u539f\u4f86 ChatGPT \u4e5f\u80fd\u505a\u5230\u7684\u4e8b\u60c5",permalink:"/notebook/docs/OpenAI/examples/6 things you may not know that ChatGPT can do"},next:{title:"create app with ChatGPT Tutorials",permalink:"/notebook/docs/OpenAI/examples/create app with ChatGPT Tutorials"}},s={},p=[{value:"step 1",id:"step-1",level:2},{value:"step 2",id:"step-2",level:2},{value:"step 3",id:"step-3",level:2}],h={toc:p};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"php-keyword-search-chatgpt-example"},"PHP keyword Search ChatGPT example"),(0,o.kt)("h2",{id:"step-1"},"step 1"),(0,o.kt)("p",null,'You are a PHP developer and now you are creating a web application that can search keywords like Google, for example, when the user enters a keyword "levonorgestrel ethinyl estradiol", the application might find "LEVONORGESTREL/ETHINYLESTRADIOL" , \u201cLEVONORGESTREL/ETHINYLESTRADIOL\u201d, \u201cethinylestradiol/ levonorgestrel\u201d, \u201cLevonorgestrel Ethinylestradiol\u201d and count the number of keywords in the text, and highlight it, and finally you write unit tests with PHPUnit to test that it works'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"function searchKeyword($text, $keyword) {\n    // Normalize the keyword\n    $normalizedKeyword = strtolower(str_replace(' ', '', $keyword));\n    \n    // Search for the normalized keyword in the text\n    $matches = [];\n    preg_match_all(\"/$normalizedKeyword/i\", $text, $matches);\n    $matchCount = count($matches[0]);\n    \n    // Highlight the keyword in the text\n    $highlightedText = preg_replace(\"/($normalizedKeyword)/i\", '<mark>$1</mark>', $text);\n    \n    return [\n        'matchCount' => $matchCount,\n        'highlightedText' => $highlightedText\n    ];\n}\n\nuse PHPUnit\\Framework\\TestCase;\n\nclass SearchKeywordTest extends TestCase {\n    public function testNormalizeKeyword() {\n        $text = 'LEVONORGESTREL/ETHINYLESTRADIOL ethinylestradiol/ levonorgestrel';\n        $keyword = 'Levonorgestrel Ethinylestradiol';\n        $result = searchKeyword($text, $keyword);\n        $this->assertEquals('levonorgestrelethinylestradiol', $result['normalizedKeyword']);\n    }\n    \n    public function testSearchKeyword() {\n        $text = 'LEVONORGESTREL/ETHINYLESTRADIOL ethinylestradiol/ levonorgestrel';\n        $keyword = 'Levonorgestrel Ethinylestradiol';\n        $result = searchKeyword($text, $keyword);\n        $this->assertEquals(2, $result['matchCount']);\n    }\n    \n    public function testHighlightKeyword() {\n        $text = 'LEVONORGESTREL/ETHINYLESTRADIOL ethinylestradiol/ levonorgestrel';\n        $keyword = 'Levonorgestrel Ethinylestradiol';\n        $result = searchKeyword($text, $keyword);\n        $this->assertStringContainsString('<mark>LEVONORGESTREL/ETHINYLESTRADIOL</mark> ethinylestradiol/ levonorgestrel', $result['highlightedText']);\n        $this->assertStringContainsString('ethinylestradiol/ <mark>levonorgestrel</mark>', $result['highlightedText']);\n    }\n}\n")),(0,o.kt)("h2",{id:"step-2"},"step 2"),(0,o.kt)("p",null,'improve these codes to find "Levonorgestrel and ethinyl estradiol" in a text'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"function searchKeyword($text, $keyword) {\n    // Normalize the keyword\n    $normalizedKeyword = strtolower(str_replace(' ', '', $keyword));\n    \n    // Split the normalized keyword into individual words\n    $keywordWords = explode('and', $normalizedKeyword);\n    \n    // Build a regular expression to match each keyword word\n    $regex = implode('.*?', array_map(function($word) {\n        return preg_quote($word, '/');\n    }, $keywordWords));\n    \n    // Search for the regular expression in the text\n    $matches = [];\n    preg_match_all(\"/$regex/i\", $text, $matches);\n    $matchCount = count($matches[0]);\n    \n    // Highlight the regular expression in the text\n    $highlightedText = preg_replace(\"/($regex)/i\", '<mark>$1</mark>', $text);\n    \n    return [\n        'matchCount' => $matchCount,\n        'highlightedText' => $highlightedText\n    ];\n}\n")),(0,o.kt)("h2",{id:"step-3"},"step 3"),(0,o.kt)("p",null,'if the user enters "Naproxen", this function could fond "Naproxene" or "Naprox\xe8ne", or  "naproxen", or "naprox\xe8ne" or "naproxene" in a text'))}c.isMDXComponent=!0}}]);