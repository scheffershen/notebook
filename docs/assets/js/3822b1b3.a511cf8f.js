"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5468],{3905:(e,n,t)=>{t.d(n,{Zo:()=>v,kt:()=>m});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},v=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,v=l(e,["components","mdxType","originalType","parentName"]),u=p(t),h=i,m=u["".concat(s,".").concat(h)]||u[h]||y[h]||r;return t?a.createElement(m,o(o({ref:n},v),{},{components:t})):a.createElement(m,o({ref:n},v))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=h;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},4665:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=t(7462),i=(t(7294),t(3905));const r={},o="pyenv-win",l={unversionedId:"Python/pyenv-win",id:"Python/pyenv-win",title:"pyenv-win",description:"https://github.com/pyenv-win/pyenv-win#usage",source:"@site/docs/Python/pyenv-win.md",sourceDirName:"Python",slug:"/Python/pyenv-win",permalink:"/notebook/docs/Python/pyenv-win",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Python/pyenv-win.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pip vs conda vs pyenv vs virtualenv vs andaconda",permalink:"/notebook/docs/Python/pip vs conda vs pyenv vs virtualenv vs andaconda"},next:{title:"RabitMQ",permalink:"/notebook/docs/category/rabitmq"}},s={},p=[{value:"pyenv",id:"pyenv",level:2},{value:"pyenv-win commands",id:"pyenv-win-commands",level:2},{value:"Installation",id:"installation",level:2},{value:"Finish the installation",id:"finish-the-installation",level:2},{value:"Usage",id:"usage",level:2},{value:"How to update pyenv",id:"how-to-update-pyenv",level:2}],v={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pyenv-win"},"pyenv-win"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/pyenv-win/pyenv-win#usage"},"https://github.com/pyenv-win/pyenv-win#usage")),(0,i.kt)("h2",{id:"pyenv"},"pyenv"),(0,i.kt)("p",null,"pyenv is a simple python version management tool. It lets you easily switch between multiple versions of Python. It's simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that do one thing well."),(0,i.kt)("h2",{id:"pyenv-win-commands"},"pyenv-win commands"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"commands     List all available pyenv commands"),(0,i.kt)("li",{parentName:"ul"},"local        Set or show the local application-specific Python version"),(0,i.kt)("li",{parentName:"ul"},"global       Set or show the global Python version"),(0,i.kt)("li",{parentName:"ul"},"shell        Set or show the shell-specific Python version"),(0,i.kt)("li",{parentName:"ul"},"install      Install 1 or more versions of Python "),(0,i.kt)("li",{parentName:"ul"},"uninstall    Uninstall 1 or more versions of Python"),(0,i.kt)("li",{parentName:"ul"},"update       Update the cached version DB"),(0,i.kt)("li",{parentName:"ul"},"rehash       Rehash pyenv shims (run this after switching Python versions)"),(0,i.kt)("li",{parentName:"ul"},"vname        Show the current Python version"),(0,i.kt)("li",{parentName:"ul"},"version      Show the current Python version and its origin"),(0,i.kt)("li",{parentName:"ul"},"version-name Show the current Python version"),(0,i.kt)("li",{parentName:"ul"},"versions     List all Python versions available to pyenv"),(0,i.kt)("li",{parentName:"ul"},"exec         Runs an executable by first preparing PATH so that the selected Python"),(0,i.kt)("li",{parentName:"ul"},"which        Display the full path to an executable"),(0,i.kt)("li",{parentName:"ul"},"whence       List all Python versions that contain the given executable")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"With pip (to support existing python users)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Powershell or Git Bash:\n$ pip install pyenv-win --target $HOME","\\",".pyenv")))),(0,i.kt)("h2",{id:"finish-the-installation"},"Finish the installation"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Add PYENV, PYENV_HOME and PYENV_ROOT to your Environment Variables")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[System.Environment]::SetEnvironmentVariable(\'PYENV\',$env:USERPROFILE + "\\.pyenv\\pyenv-win\\","User")\n[System.Environment]::SetEnvironmentVariable(\'PYENV_ROOT\',$env:USERPROFILE + "\\.pyenv\\pyenv-win\\","User")\n[System.Environment]::SetEnvironmentVariable(\'PYENV_HOME\',$env:USERPROFILE + "\\.pyenv\\pyenv-win\\","User")\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Now add the following paths to your USER PATH variable in order to access the pyenv command. Run the following in PowerShell or Windows 8/above Terminal:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[System.Environment]::SetEnvironmentVariable(\'path\', $env:USERPROFILE + "\\.pyenv\\pyenv-win\\bin;" + $env:USERPROFILE + "\\.pyenv\\pyenv-win\\shims;" + [System.Environment]::GetEnvironmentVariable(\'path\', "User"),"User")\n')),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Close and reopen your terminal app and run ",(0,i.kt)("inlineCode",{parentName:"li"},"pyenv --version"))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Update the list of discoverable Python versions using:\n$ pyenv update"),(0,i.kt)("li",{parentName:"ul"},"To view a list of python versions supported by pyenv windows:\n$ pyenv install -l "),(0,i.kt)("li",{parentName:"ul"},"To install a python version\n$ pyenv install 3.9.6"),(0,i.kt)("li",{parentName:"ul"},"To set a python version as the global version:\n$ pyenv global 3.5.2"),(0,i.kt)("li",{parentName:"ul"},"To set a python version as the local version:\n$ pyenv local 3.5.2"),(0,i.kt)("li",{parentName:"ul"},"After (un)installing any libraries using pip or modifying the files in a version's folder, you must run ",(0,i.kt)("inlineCode",{parentName:"li"},"pyenv rehash")," to update pyenv with new shims for the python and libraries' executables.\n$ pyenv rehash"),(0,i.kt)("li",{parentName:"ul"},"To uninstall a python version:\n$ pyenv uninstall 3.5.2"),(0,i.kt)("li",{parentName:"ul"},"To view which python you are using and its path:\n$ pyenv version"),(0,i.kt)("li",{parentName:"ul"},"To view all the python versions installed on this system:\n$ pyenv versions")),(0,i.kt)("h2",{id:"how-to-update-pyenv"},"How to update pyenv"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ pip install --upgrade pyenv-win\n")))}u.isMDXComponent=!0}}]);