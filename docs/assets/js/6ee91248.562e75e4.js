"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[75652],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,d=p["".concat(s,".").concat(m)]||p[m]||y[m]||a;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},10353:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const a={},i="symfony_ldap",c={unversionedId:"Symfony/Authentication/LDAP/symfony_ldap",id:"Symfony/Authentication/LDAP/symfony_ldap",title:"symfony_ldap",description:"- https://symfony.com/doc/current/security/ldap.html",source:"@site/docs/Symfony/Authentication/LDAP/symfony_ldap.md",sourceDirName:"Symfony/Authentication/LDAP",slug:"/Symfony/Authentication/LDAP/symfony_ldap",permalink:"/notebook/docs/Symfony/Authentication/LDAP/symfony_ldap",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Symfony/Authentication/LDAP/symfony_ldap.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OpenLDAP, TLS, SAMBA, CA Server",permalink:"/notebook/docs/Symfony/Authentication/LDAP/OpenLDAP_TLS_SAMBA_CA Server"},next:{title:"ReadMe",permalink:"/notebook/docs/Symfony/Authentication/Oauth/"}},s={},u=[],l={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"symfony_ldap"},"symfony_ldap"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://symfony.com/doc/current/security/ldap.html"},"https://symfony.com/doc/current/security/ldap.html"))),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"to connect to a start-TLS secured LDAP server:"),(0,o.kt)("li",{parentName:"ol"},"The bind() method authenticates a previously configured connection using both the distinguished name (DN) and the password of a user:"),(0,o.kt)("li",{parentName:"ol"},"Once bound (or if you enabled anonymous authentication on your LDAP server), you may query the LDAP server using the query() method:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use Symfony\\Component\\Ldap\\Ldap;\n\n$ldap = Ldap::create('ext_ldap', \n    ['connection_string' => 'ldaps://my-server:636']);\n\n$ldap->bind($dn, $password);\n\n$query = $ldap->query('dc=symfony,dc=com', '(&(objectclass=person)(ou=Maintainers))');\n$results = $query->execute();\n\nforeach ($results as $entry) {\n    // Do something with the results\n}\n\n")),(0,o.kt)("p",null,"The bind() method authenticates a previously configured connection using both the distinguished name (DN) and the password of a user:"))}p.isMDXComponent=!0}}]);