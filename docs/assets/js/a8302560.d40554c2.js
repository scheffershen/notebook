"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[44211],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=i(n),b=r,m=u["".concat(l,".").concat(b)]||u[b]||p[b]||o;return n?a.createElement(m,s(s({ref:t},d),{},{components:n})):a.createElement(m,s({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:r,s[1]=c;for(var i=2;i<o;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},72530:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={},s="Broadcast Channel API",c={unversionedId:"WebAPI/Broadcast Channel API",id:"WebAPI/Broadcast Channel API",title:"Broadcast Channel API",description:"It allows browsing contexts to send and receive basic data from each other.  Browsing contexts are elements like a tab, window, iframe, or anywhere a page can be displayed.",source:"@site/docs/WebAPI/Broadcast Channel API.md",sourceDirName:"WebAPI",slug:"/WebAPI/Broadcast Channel API",permalink:"/notebook/docs/WebAPI/Broadcast Channel API",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/WebAPI/Broadcast Channel API.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Web API",permalink:"/notebook/docs/category/web-api"},next:{title:"Internationalization-API Or I18n API",permalink:"/notebook/docs/WebAPI/Internationalization-API"}},l={},i=[{value:"USE CASES",id:"use-cases",level:2},{value:"HOW TO USE IT?",id:"how-to-use-it",level:2}],d={toc:i};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"broadcast-channel-api"},"Broadcast Channel API"),(0,r.kt)("p",null,"It allows browsing contexts to send and receive basic data from each other.  Browsing contexts are elements like a tab, window, iframe, or anywhere a page can be displayed."),(0,r.kt)("h2",{id:"use-cases"},"USE CASES"),(0,r.kt)("p",null,"The Broadcast Channel API is generally used to keep a page\u2019s state synced across different tabs and windows to enhance user experience or for security reasons. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Log a user in or out across all tabs."),(0,r.kt)("li",{parentName:"ul"},"Detect when an asset is uploaded and show it across all pages."),(0,r.kt)("li",{parentName:"ul"},"Instruct a service worker to do some background work.")),(0,r.kt)("h2",{id:"how-to-use-it"},"HOW TO USE IT?"),(0,r.kt)("p",null,"a BroadcastChannel object can be used to send messages to other contexts. BroadcastChannel object will have two available methods to start communicating:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"BroadcastChannel.postMessage():  to send a message across all connected contexts"),(0,r.kt)("li",{parentName:"ul"},"BroadcastChannel.close(): to close the channel and indicate to the browser that it won\u2019t receive any more messages so it can collect them into the garbage.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// /new-origin/main.js\nconst broadcast = new BroadcastChannel("quote_channel");\nconst quote = document.querySelector("#quote");\n\nbroadcast.onmessage = ({data}) => {\n    quote.innerHTML = data;\n};\n\n// /main.js\nconst broadcast = new BroadcastChannel("quote_channel");\nconst quote = document.querySelector("#quote");\n\nconst getQuote = async () => {\n    try {\n        const response = await fetch("https://api.quotable.io/random");\n        const {content, author, dateAdded} = await response.json();\n        const parsedQuote = ` <q>${content}</q> <br> <p>- ${author}</p><br> <p>Added on ${dateAdded}</p>`;\n        quote.innerHTML = parsedQuote;\n        broadcast.postMessage(parsedQuote);\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n')))}u.isMDXComponent=!0}}]);