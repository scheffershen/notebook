"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[762],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,k=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return r?n.createElement(k,l(l({ref:t},p),{},{components:r})):n.createElement(k,l({ref:t},p))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},229:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={},l="PHPunit",o={unversionedId:"PHP/Tests/PHPunit/PHPunit",id:"PHP/Tests/PHPunit/PHPunit",title:"PHPunit",description:"Testing framework for PHP. PHPUnit is a programmer-oriented testing framework for PHP It is an instance of the xUnit architecture for unit testing frameworks..",source:"@site/docs/PHP/Tests/PHPunit/PHPunit.md",sourceDirName:"PHP/Tests/PHPunit",slug:"/PHP/Tests/PHPunit/",permalink:"/notebook/docs/PHP/Tests/PHPunit/",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/PHP/Tests/PHPunit/PHPunit.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CodeCeption",permalink:"/notebook/docs/PHP/Tests/Codeception/"},next:{title:"Annotations",permalink:"/notebook/docs/PHP/Tests/PHPunit/annotations"}},s={},u=[{value:"Documentation",id:"documentation",level:2},{value:"Sommaire",id:"sommaire",level:2}],p={toc:u};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"phpunit"},"PHPunit"),(0,a.kt)("p",null,"Testing framework for PHP. PHPUnit is a programmer-oriented testing framework for PHP It is an instance of the xUnit architecture for unit testing frameworks.."),(0,a.kt)("h2",{id:"documentation"},"Documentation"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://phpunit.readthedocs.io/en/9.5/"},"https://phpunit.readthedocs.io/en/9.5/")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Installation"),(0,a.kt)("li",{parentName:"ul"},"Fixtures",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"setUp(): Before each test method is run, a template method called setUp() is invoked"),(0,a.kt)("li",{parentName:"ul"},"tearDown(): Each the test method has finished running, whether it succeeded or failed, another template method called tearDown() is invoked"),(0,a.kt)("li",{parentName:"ul"},"Sharing Fixtures (","<","use trait",">",")",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"setUpBeforeClass()"),(0,a.kt)("li",{parentName:"ul"},"tearDownAfterClass()"))),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::setUpBeforeClass"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::setUp"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::assertPreConditions"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::testOne"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::assertPostConditions"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::tearDown"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::setUp"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::assertPreConditions"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::testTwo"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::tearDown"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::onNotSuccessfulTest"),(0,a.kt)("li",{parentName:"ul"},"TemplateMethodsTest::tearDownAfterClass"))))),(0,a.kt)("li",{parentName:"ul"},"Tests",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Test Doubles"))),(0,a.kt)("li",{parentName:"ul"},"Coverage",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Specifying Covered Code Parts",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"@covers + $this->fail();"))))),(0,a.kt)("li",{parentName:"ul"},"Assertions",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"assertTrue"),(0,a.kt)("li",{parentName:"ul"},"assertSame"),(0,a.kt)("li",{parentName:"ul"},"assertEquals"),(0,a.kt)("li",{parentName:"ul"},"assertThat()"))),(0,a.kt)("li",{parentName:"ul"},"Annotations",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"@depends"))),(0,a.kt)("li",{parentName:"ul"},"Configuration")),(0,a.kt)("h2",{id:"sommaire"},"Sommaire"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./cli"},"Commands lines")),(0,a.kt)("li",{parentName:"ul"},"Fixtures"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./assertions"},"Assertions")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./annotations"},"Annotations"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"@before: pour sp\xe9cifier des m\xe9thodes devant \xeatre appel\xe9es avant chaque m\xe9thode de test"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./Data-Provider"},"@dataProvider")),(0,a.kt)("li",{parentName:"ul"},"@codeCoverageIgnore: pour exclure des lignes de code de l\u2019analyse de couverture"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./Test-Dependencies"},"@depends")),(0,a.kt)("li",{parentName:"ul"},"@group:  les groupes en utilisant les options --group et --exclude-group du lanceur de test en ligne de commandes"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./mock-et-stub"},"Mock et stub"))))}m.isMDXComponent=!0}}]);