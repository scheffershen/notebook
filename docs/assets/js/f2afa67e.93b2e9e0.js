"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9800],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=l(r),m=o,y=s["".concat(u,".").concat(m)]||s[m]||d[m]||a;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c[s]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91390:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a={},i="HOW To debug a Symfony Doctrine request",c={unversionedId:"Symfony/Doctrine/Doctrine print sql and parameters",id:"Symfony/Doctrine/Doctrine print sql and parameters",title:"HOW To debug a Symfony Doctrine request",description:"Show DQL and Show Parameters",source:"@site/docs/Symfony/Doctrine/Doctrine print sql and parameters.md",sourceDirName:"Symfony/Doctrine",slug:"/Symfony/Doctrine/Doctrine print sql and parameters",permalink:"/notebook/docs/Symfony/Doctrine/Doctrine print sql and parameters",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Symfony/Doctrine/Doctrine print sql and parameters.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Doctrine DQL multiple join",permalink:"/notebook/docs/Symfony/Doctrine/Doctrine DQL multiple join"},next:{title:"Doctrine ObjectManager vs Doctrine EntityManagerInterface",permalink:"/notebook/docs/Symfony/Doctrine/Doctrine-ObjectManager-vs-EntityManagerInteface"}},u={},l=[{value:"Show DQL and Show Parameters",id:"show-dql-and-show-parameters",level:2},{value:"use the <code>dump()</code> function from the Symfony <code>VarDumper</code> componen",id:"use-the-dump-function-from-the-symfony-vardumper-componen",level:2},{value:"use the Doctrine <code>debug</code> function",id:"use-the-doctrine-debug-function",level:2},{value:"use the Doctrine query logger",id:"use-the-doctrine-query-logger",level:2}],p={toc:l};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-debug-a-symfony-doctrine-request"},"HOW To debug a Symfony Doctrine request"),(0,o.kt)("h2",{id:"show-dql-and-show-parameters"},"Show DQL and Show Parameters"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"        $queryBuilder = $this->createQueryBuilder('t')\n            ->select('t')\n            ->where('t.createDate BETWEEN :downloadDate AND :downloadDateMax')\n            ->setParameter('downloadDate', $downloadDate)\n            ->setParameter('downloadDateMax', $downloadDateMax)\n            ->orderBy('t.id');\n            \n        echo $queryBuilder->getQuery()->getDQL();\n        // Show Parameters: \n        print_r($queryBuilder->getQuery()->getParameters());\n")),(0,o.kt)("h2",{id:"use-the-dump-function-from-the-symfony-vardumper-componen"},"use the ",(0,o.kt)("inlineCode",{parentName:"h2"},"dump()")," function from the Symfony ",(0,o.kt)("inlineCode",{parentName:"h2"},"VarDumper")," componen"),(0,o.kt)("p",null,"For example, if you want to debug a Doctrine query, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"dump()")," function like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"$query = $entityManager->createQuery('SELECT u FROM App\\Entity\\User u');\ndump($query->getSQL());\n")),(0,o.kt)("h2",{id:"use-the-doctrine-debug-function"},"use the Doctrine ",(0,o.kt)("inlineCode",{parentName:"h2"},"debug")," function"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"$query = $entityManager->createQuery('SELECT u FROM App\\Entity\\User u');\n$query->getSQL();\n")),(0,o.kt)("h2",{id:"use-the-doctrine-query-logger"},"use the Doctrine query logger"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"// Create a logger instance\n$logger = new \\Doctrine\\DBAL\\Logging\\DebugStack();\n\n// Enable the query logger\n$entityManager->getConfiguration()->setSQLLogger($logger);\n")))}s.isMDXComponent=!0}}]);