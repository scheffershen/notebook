"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53955],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(67294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=n.createContext({}),l=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(o.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),d=s,h=p["".concat(o,".").concat(d)]||p[d]||g[d]||a;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function h(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[p]="string"==typeof e?e:s,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},92058:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(87462),s=(r(67294),r(3905));const a={},i="Search APIs Suggesters",c={unversionedId:"ElasticSearch/Guide/Search APIs - Suggesters",id:"ElasticSearch/Guide/Search APIs - Suggesters",title:"Search APIs Suggesters",description:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html",source:"@site/docs/ElasticSearch/Guide/Search APIs - Suggesters.md",sourceDirName:"ElasticSearch/Guide",slug:"/ElasticSearch/Guide/Search APIs - Suggesters",permalink:"/notebook/docs/ElasticSearch/Guide/Search APIs - Suggesters",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/ElasticSearch/Guide/Search APIs - Suggesters.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Return the most recent record from ElasticSearch index",permalink:"/notebook/docs/ElasticSearch/Guide/Return the most recent record from ElasticSearch"},next:{title:"elasticsearch client php-api 2.0",permalink:"/notebook/docs/ElasticSearch/Guide/elasticsearch client php-api 2"}},o={},l=[{value:"term suggester",id:"term-suggester",level:3}],u={toc:l};function p(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"search-apis-suggesters"},"Search APIs Suggesters"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html"},"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html")),(0,s.kt)("p",null,"The suggest feature suggests similar looking terms based on a provided text by using a suggester. Parts of the suggest feature are still under development. "),(0,s.kt)("p",null,"The suggest request part is either defined alongside the query part in a _search request or via the REST ",(0,s.kt)("inlineCode",{parentName:"p"},"_suggest")," endpoint."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"    $ curl -s -XPOST 'localhost:9200/_search' -d '{\n      \"query\" : {\n        ...\n      },\n      \"suggest\" : {\n        ...\n      }\n    }'\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'    GET /medflixs_en/video/_search\n    {\n        "query": {\n            "match": {\n               "_all": {\n                  "query": "inovation",\n                  "operator": "and"\n               }\n            }\n        },\n        "suggest": {\n            "text" : "inovation",\n            "term" : {\n              "size" : 1,\n              "field" : "_all"\n            }\n        }   \n    }\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'GET /medflixs_en/video/_search\n{\n    "query": {\n        "match": {\n           "_all": {\n              "query": "inovation",\n              "operator": "and"\n           }\n        }\n    },\n    "suggest": {\n      "my-suggest-1" : {\n        "text" : "inovation",\n        "term" : {\n          "size" : 3,\n          "field" : "title"\n        }\n      },\n      "my-suggest-2" : {\n        "text" : "inovation",\n        "term" : {\n          "field" : "speaker"\n        }\n      }\n    }   \n}    \n')),(0,s.kt)("p",null,"on the title field with a maximum of 3 suggestions per term inside the suggest text. "),(0,s.kt)("h3",{id:"term-suggester"},"term suggester"))}p.isMDXComponent=!0}}]);