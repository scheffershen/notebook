"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[51342],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(t),d=o,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<r;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},66019:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var a=t(87462),o=(t(67294),t(3905));const r={},i="how to use OpenAI api in a python flask api server with your faqs",p={unversionedId:"OpenAI/examples/how to use OpenAI api in a python flask api server with your onw data",id:"OpenAI/examples/how to use OpenAI api in a python flask api server with your onw data",title:"how to use OpenAI api in a python flask api server with your faqs",description:"as a python flask developer how to build your question and answer api using openai api based on your own data",source:"@site/docs/OpenAI/examples/how to use OpenAI api in a python flask api server with your onw data.md",sourceDirName:"OpenAI/examples",slug:"/OpenAI/examples/how to use OpenAI api in a python flask api server with your onw data",permalink:"/notebook/docs/OpenAI/examples/how to use OpenAI api in a python flask api server with your onw data",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/OpenAI/examples/how to use OpenAI api in a python flask api server with your onw data.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"how to integrate OpenAI in your symfony project",permalink:"/notebook/docs/OpenAI/examples/how to integrate OpenAI in your symfony project"},next:{title:"how to use OpenAI api in a python flask api server with your data",permalink:"/notebook/docs/OpenAI/examples/how to use OpenAI api in a python flask api server"}},s={},l=[{value:"Resources",id:"resources",level:2},{value:"docker-compose",id:"docker-compose",level:2}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-use-openai-api-in-a-python-flask-api-server-with-your-faqs"},"how to use OpenAI api in a python flask api server with your faqs"),(0,o.kt)("p",null,"as a python flask developer how to build your question and answer api using openai api based on your own data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import openai\nfrom flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n# Set up OpenAI API key\nopenai.api_key = \"YOUR_API_KEY_HERE\"\n\n# Define API endpoint\n@app.route('/answer', methods=['POST'])\ndef get_answer():\n    # Get question from POST request\n    question = request.json['question']\n    \n    # Call OpenAI API to get answer\n    response = openai.Completion.create(\n        engine=\"davinci\", \n        prompt=question, \n        max_tokens=1024,\n        n=1,\n        stop=None,\n        temperature=0.7,\n    )\n\n    # Return answer\n    return jsonify({'answer': response.choices[0].text})\n\n")),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://medium.com/analytics-vidhya/how-to-create-your-question-and-answering-flask-api-using-haystack-e97205a240d1"},"https://medium.com/analytics-vidhya/how-to-create-your-question-and-answering-flask-api-using-haystack-e97205a240d1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://gist.github.com/adrienbrault/673edf2db79db61ad316d0245c36b5ac"},"https://gist.github.com/adrienbrault/673edf2db79db61ad316d0245c36b5ac")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://tectalic.com/blog/build-an-app-using-openai-api"},"https://tectalic.com/blog/build-an-app-using-openai-api")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://benjamincrozat.com/php-ai"},"https://benjamincrozat.com/php-ai"))),(0,o.kt)("h2",{id:"docker-compose"},"docker-compose"),(0,o.kt)("p",null,"Certainly! Here's an example ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file that you can use to run a Python Flask API service in a Docker container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"version: '3'\nservices:\n  web:\n    build: .\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - .:/app\n    environment:\n      FLASK_ENV: development\n      FLASK_APP: app.py\n    command: flask run --host=0.0.0.0\n")),(0,o.kt)("p",null,"This ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file defines a single service called ",(0,o.kt)("inlineCode",{parentName:"p"},"web"),", which runs a Python Flask application. Here's what each of the configuration options does:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"build: .")," tells Docker to build the image for the service using the Dockerfile in the current directory (",(0,o.kt)("inlineCode",{parentName:"li"},"."),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'ports: - "5000:5000"')," maps port 5000 on the host to port 5000 in the container, so that you can access the Flask API from your web browser or another client."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"volumes: - .:/app")," mounts the current directory (",(0,o.kt)("inlineCode",{parentName:"li"},"."),") on the host to the ",(0,o.kt)("inlineCode",{parentName:"li"},"/app")," directory in the container. This is useful for development, since it allows you to make changes to your code without having to rebuild the Docker image every time."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"environment: FLASK_ENV: development FLASK_APP: app.py")," sets environment variables for the Flask application. The ",(0,o.kt)("inlineCode",{parentName:"li"},"FLASK_ENV"),' variable sets the application environment to "development", which enables debugging and hot reloading. The ',(0,o.kt)("inlineCode",{parentName:"li"},"FLASK_APP")," variable specifies the entry point for the Flask application."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"command: flask run --host=0.0.0.0")," runs the Flask application inside the container, listening on all network interfaces (so that it can be accessed from the host).")),(0,o.kt)("p",null,"To use this ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file, simply save it in a directory along with your Flask application code and run ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose up"),". This will start the container and begin running your Flask API service."))}u.isMDXComponent=!0}}]);