"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[91815],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(n),d=a,y=c["".concat(l,".").concat(d)]||c[d]||u[d]||s;return n?r.createElement(y,o(o({ref:t},p),{},{components:n})):r.createElement(y,o({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var m=2;m<s;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},950:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var r=n(87462),a=(n(67294),n(3905));const s={slug:"bitnami-mysql-replication-slave_docker"},o="bitnami-mysql_docker",i={unversionedId:"MySQL/Cluster/bitnami-mysql-replication-slave_docker",id:"MySQL/Cluster/bitnami-mysql-replication-slave_docker",title:"bitnami-mysql_docker",description:"https://hub.docker.com/r/bitnami/mysql/",source:"@site/docs/MySQL/Cluster/bitnami-mysql-replication-slave_docker.md",sourceDirName:"MySQL/Cluster",slug:"/MySQL/Cluster/bitnami-mysql-replication-slave_docker",permalink:"/notebook/docs/MySQL/Cluster/bitnami-mysql-replication-slave_docker",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/MySQL/Cluster/bitnami-mysql-replication-slave_docker.md",tags:[],version:"current",frontMatter:{slug:"bitnami-mysql-replication-slave_docker"},sidebar:"tutorialSidebar",previous:{title:"How to Install and Configure MySQL Cluster on CentOS 7",permalink:"/notebook/docs/MySQL/Cluster/How-to-Install-and-Configure-MySQL-Cluster-on-CentOS-7"},next:{title:"tiered-datastore-solution-for-high-data-growth-mysql-using-distributed-sql-databases-dsql",permalink:"/notebook/docs/MySQL/Cluster/tiered-datastore-solution-for-high-data-growth-mysql-using-distributed-sql-databases-dsql"}},l={},m=[{value:"Get this image",id:"get-this-image",level:2},{value:"Persisting your database",id:"persisting-your-database",level:2},{value:"Using Docker Compose",id:"using-docker-compose",level:2},{value:"Setting up a replication cluster",id:"setting-up-a-replication-cluster",level:2}],p={toc:m};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"bitnami-mysql_docker"},"bitnami-mysql_docker"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/bitnami/mysql/"},"https://hub.docker.com/r/bitnami/mysql/")),(0,a.kt)("h2",{id:"get-this-image"},"Get this image"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker pull bitnami/mysql:5.7\n")),(0,a.kt)("h2",{id:"persisting-your-database"},"Persisting your database"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker run \\\n-e ALLOW_EMPTY_PASSWORD=yes \\\n-v /path/to/mysql-persistence:/bitnami/mysql/data \\\nbitnami/mysql:5.7\n")),(0,a.kt)("p",null,"or "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"services:\n  mysql:\n  ...\n    volumes:\n      - /path/to/mysql-persistence:/bitnami/mysql/data\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"NOTE: As this is a non-root container, the mounted files and directories must have the proper permissions for the UID 1001.          ")),(0,a.kt)("h2",{id:"using-docker-compose"},"Using Docker Compose"),(0,a.kt)("p",null,"When not specified, Docker Compose automatically sets up a new network and attaches all deployed services to that network.\nHowever, we will explicitly define a new ",(0,a.kt)("em",{parentName:"p"},"bridge")," network named ",(0,a.kt)("em",{parentName:"p"},"app-tier"),". "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '2'\n\nnetworks:\n  app-tier:\n    driver: bridge\n\nservices:\n  mysql:\n    image: 'bitnami/mysql:5.7'\n    environment:\n      - MYSQL_ROOT_PASSWORD=password123\n      - MYSQL_USER=my_user\n      - MYSQL_PASSWORD=my_password\n      - MYSQL_DATABASE=my_database      \n    networks:\n      - app-tier\n  myapp:\n    image: 'YOUR_APPLICATION_IMAGE'\n    networks:\n      - app-tier\n")),(0,a.kt)("h2",{id:"setting-up-a-replication-cluster"},"Setting up a replication cluster"),(0,a.kt)("p",null,"A zero downtime MySQL master-slave replication cluster can easily be setup with the Bitnami MySQL Docker image using the following environment variables:"),(0,a.kt)("p",null,"Step 1: Create the replication master"),(0,a.kt)("p",null,"The first step is to start the MySQL master."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker run --name mysql-master \\\n  -e MYSQL_ROOT_PASSWORD=master_root_password \\\n  -e MYSQL_REPLICATION_MODE=master \\\n  -e MYSQL_REPLICATION_USER=my_repl_user \\\n  -e MYSQL_REPLICATION_PASSWORD=my_repl_password \\\n  -e MYSQL_USER=my_user \\\n  -e MYSQL_PASSWORD=my_password \\\n  -e MYSQL_DATABASE=my_database \\\n  bitnami/mysql:5.7\n")),(0,a.kt)("p",null,"Step 2: Create the replication slave      "),(0,a.kt)("p",null,"Next we start a MySQL slave container."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker run --name mysql-slave --link mysql-master:master \\\n  -e MYSQL_REPLICATION_MODE=slave \\\n  -e MYSQL_REPLICATION_USER=my_repl_user \\\n  -e MYSQL_REPLICATION_PASSWORD=my_repl_password \\\n  -e MYSQL_MASTER_HOST=master \\\n  -e MYSQL_MASTER_ROOT_PASSWORD=master_root_password \\\n  bitnami/mysql:5.7\n")),(0,a.kt)("p",null,"With Docker Compose the master/slave replication can be setup using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '2'\n\nservices:\n  mysql-master:\n    image: 'bitnami/mysql:5.7'\n    ports:\n      - '3306'\n    volumes:\n      - /path/to/mysql-persistence:/bitnami/mysql/data\n    environment:\n      - MYSQL_REPLICATION_MODE=master\n      - MYSQL_REPLICATION_USER=repl_user\n      - MYSQL_REPLICATION_PASSWORD=repl_password\n      - MYSQL_ROOT_PASSWORD=master_root_password\n      - MYSQL_USER=my_user\n      - MYSQL_PASSWORD=my_password\n      - MYSQL_DATABASE=my_database\n  mysql-slave:\n    image: 'bitnami/mysql:5.7'\n    ports:\n      - '3306'\n    depends_on:\n      - mysql-master\n    environment:\n      - MYSQL_REPLICATION_MODE=slave\n      - MYSQL_REPLICATION_USER=repl_user\n      - MYSQL_REPLICATION_PASSWORD=repl_password\n      - MYSQL_MASTER_HOST=mysql-master\n      - MYSQL_MASTER_PORT_NUMBER=3306\n      - MYSQL_MASTER_ROOT_PASSWORD=master_root_password      \n")),(0,a.kt)("p",null,"Scale the number of slaves using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ docker-compose up --detach --scale mysql-master=1 --scale mysql-slave=3\n")))}c.isMDXComponent=!0}}]);