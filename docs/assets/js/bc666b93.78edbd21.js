"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[51374],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67902:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={},i="How JavaScript works: WebRTC and the mechanics of peer to peer networking",c={unversionedId:"WebAPI/web-rtc/WebRTC and the mechanics of peer to peer networking",id:"WebAPI/web-rtc/WebRTC and the mechanics of peer to peer networking",title:"How JavaScript works: WebRTC and the mechanics of peer to peer networking",description:"https://blog.sessionstack.com/how-javascript-works-webrtc-and-the-mechanics-of-peer-to-peer-connectivity-87cc56c1d0ab",source:"@site/docs/WebAPI/web-rtc/WebRTC and the mechanics of peer to peer networking.md",sourceDirName:"WebAPI/web-rtc",slug:"/WebAPI/web-rtc/WebRTC and the mechanics of peer to peer networking",permalink:"/notebook/docs/WebAPI/web-rtc/WebRTC and the mechanics of peer to peer networking",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/WebAPI/web-rtc/WebRTC and the mechanics of peer to peer networking.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"WebRTC Blueprints",permalink:"/notebook/docs/WebAPI/web-rtc/WebRTC Blueprints"},next:{title:"ReadMe",permalink:"/notebook/docs/WebAPI/web-rtc/WebRTC-Experiment/"}},s={},l=[{value:"Overview",id:"overview",level:2},{value:"Peer-To-Peer Communication",id:"peer-to-peer-communication",level:2},{value:"WebRTC APIs",id:"webrtc-apis",level:2},{value:"Media Capture and Streams",id:"media-capture-and-streams",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-javascript-works-webrtc-and-the-mechanics-of-peer-to-peer-networking"},"How JavaScript works: WebRTC and the mechanics of peer to peer networking"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://blog.sessionstack.com/how-javascript-works-webrtc-and-the-mechanics-of-peer-to-peer-connectivity-87cc56c1d0ab"},"https://blog.sessionstack.com/how-javascript-works-webrtc-and-the-mechanics-of-peer-to-peer-connectivity-87cc56c1d0ab")),(0,a.kt)("p",null,"If you missed the previous chapters, you can find them here:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An overview of the engine, the runtime, and the call stack"),(0,a.kt)("li",{parentName:"ul"},"Inside Google\u2019s V8 engine + 5 tips on how to write optimized code"),(0,a.kt)("li",{parentName:"ul"},"Memory management + how to handle 4 common memory leaks"),(0,a.kt)("li",{parentName:"ul"},"The event loop and the rise of Async programming + 5 ways to better coding with async/await"),(0,a.kt)("li",{parentName:"ul"},"Deep dive into WebSockets and HTTP/2 with SSE + how to pick the right path"),(0,a.kt)("li",{parentName:"ul"},"A comparison with WebAssembly + why in certain cases it\u2019s better to use it over JavaScript"),(0,a.kt)("li",{parentName:"ul"},"The building blocks of Web Workers + 5 cases when you should use them"),(0,a.kt)("li",{parentName:"ul"},"Service Workers, their life-cycle, and use cases"),(0,a.kt)("li",{parentName:"ul"},"The mechanics of Web Push Notifications"),(0,a.kt)("li",{parentName:"ul"},"Tracking changes in the DOM using MutationObserver"),(0,a.kt)("li",{parentName:"ul"},"The rendering engine and tips to optimize its performance"),(0,a.kt)("li",{parentName:"ul"},"Inside the Networking Layer + How to Optimize Its Performance and Security"),(0,a.kt)("li",{parentName:"ul"},"Under the hood of CSS and JS animations + how to optimize their performance"),(0,a.kt)("li",{parentName:"ul"},"Parsing, Abstract Syntax Trees (ASTs) + 5 tips on how to minimize parse time"),(0,a.kt)("li",{parentName:"ul"},"The internals of classes and inheritance + transpiling in Babel and TypeScript"),(0,a.kt)("li",{parentName:"ul"},"Storage engines + how to choose the proper storage API"),(0,a.kt)("li",{parentName:"ul"},"The internals of Shadow DOM + how to build self-contained components")),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null," We\u2019ll also discuss the following topics, in order to give you the full picture on the internals of WebRTC:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Peer-To-Peer communication"),(0,a.kt)("li",{parentName:"ul"},"Firewalls and NAT Traversal"),(0,a.kt)("li",{parentName:"ul"},"Signaling, Sessions, and Protocols"),(0,a.kt)("li",{parentName:"ul"},"WebRTC APIs")),(0,a.kt)("h2",{id:"peer-to-peer-communication"},"Peer-To-Peer Communication"),(0,a.kt)("p",null,"In order to communicate with another peer via a web browser, each person\u2019s web browser must go through the following steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Agree to begin communication"),(0,a.kt)("li",{parentName:"ul"},"Know how to locate one another"),(0,a.kt)("li",{parentName:"ul"},"Bypass security and firewall protections"),(0,a.kt)("li",{parentName:"ul"},"Transmit all multimedia communications in real-time")),(0,a.kt)("p",null,"##Firewalls and NAT Traversal"),(0,a.kt)("p",null,"##Signaling, Sessions, and Protocols"),(0,a.kt)("p",null,"##Connection Establishment"),(0,a.kt)("h2",{id:"webrtc-apis"},"WebRTC APIs"),(0,a.kt)("p",null,"There are three main categories of APIs that exist in WebRTC:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Media Capture and Streams"),"\u200a\u2014\u200aAllows you to Get access to input devices such as the microphone and the web camera. The API allows you to get a stream of media from either of them."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"RTCPeerConnection"),"\u200a\u2014\u200ausing these APIs you can send the captured stream of audio and video in real-time across the internet to another WebRTC endpoint. Using these APIs you can create a connection between the local machine and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it\u2019s no longer needed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"RTCDataChannel"),"\u200a\u2014\u200athese APIs allow you to transmit arbitrary data. Each data channel is associated with an RTCPeerConnection.")),(0,a.kt)("h2",{id:"media-capture-and-streams"},"Media Capture and Streams"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"navigator.mediaDevices.getUserMedia(constraints)\n.then(function(stream) {\n /* use the stream */\n})\n.catch(function(err) {\n /* handle the error */\n});\n\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"getUserMedia")," can also be used as an input node for the Web Audio API:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function gotStream(stream) {\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    var audioContext = new AudioContext();\n    // Create an AudioNode from the stream\n    var mediaStreamSource = audioContext.createMediaStreamSource(stream);\n    // Connect it to destination to hear yourself\n    // or any other node for processing!\n    mediaStreamSource.connect(audioContext.destination);\n}\n\nnavigator.getUserMedia({audio:true}, gotStream);\n")),(0,a.kt)("p",null,"##Privacy Constraints"),(0,a.kt)("p",null,"##RTCPeerConnection"),(0,a.kt)("p",null,"##RTCDataChannel"),(0,a.kt)("p",null,"The syntax is similar to the already known WebSocket, with a send() method and a message event:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'var peerConnection = new webkitRTCPeerConnection(servers,\n    {optional: [{RtpDataChannels: true}]}\n);\n\npeerConnection.ondatachannel = function(event) {\n    receiveChannel = event.channel;\n    receiveChannel.onmessage = function(event){\n        document.querySelector("#receiver").innerHTML = event.data;\n    };\n};\n\nsendChannel = peerConnection.createDataChannel("sendDataChannel", {reliable: false});\n\ndocument.querySelector("button#send").onclick = function (){\n    var data = document.querySelector("textarea#send").value;\n    sendChannel.send(data);\n};\n')),(0,a.kt)("p",null,"##WebRTC in the real world"),(0,a.kt)("p",null,"##Finding connection candidates"),(0,a.kt)("p",null,"##Security"),(0,a.kt)("p",null,"##Resources:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.html5rocks.com/en/tutorials/webrtc/basics/"},"https://www.html5rocks.com/en/tutorials/webrtc/basics/"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.innoarchitech.com/what-is-webrtc-and-how-does-it-work/"},"https://www.innoarchitech.com/what-is-webrtc-and-how-does-it-work/")))}u.isMDXComponent=!0}}]);