"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[19092],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,g=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(g,i(i({ref:t},u),{},{components:n})):a.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},42807:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const o={},i="Internationalization-API Or I18n API",l={unversionedId:"WebAPI/Internationalization-API",id:"WebAPI/Internationalization-API",title:"Internationalization-API Or I18n API",description:"When developing a web page or app, it\u2019s extremely common to need to translate its content across other languages to reach a wider audience. However, just translating your page\u2019s text to whichever language you need isn\u2019t enough to make your content available to speakers of that language since things like dates, numbers, units, and so on are different across countries and may cause confusion to your users.",source:"@site/docs/WebAPI/Internationalization-API.md",sourceDirName:"WebAPI",slug:"/WebAPI/Internationalization-API",permalink:"/notebook/docs/WebAPI/Internationalization-API",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/WebAPI/Internationalization-API.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Broadcast Channel API",permalink:"/notebook/docs/WebAPI/Broadcast Channel API"},next:{title:"Intersection Observer API",permalink:"/notebook/docs/WebAPI/Intersection Observer API"}},s={},c=[{value:"HOW TO USE IT?",id:"how-to-use-it",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"internationalization-api-or-i18n-api"},"Internationalization-API Or I18n API"),(0,r.kt)("p",null,"When developing a web page or app, it\u2019s extremely common to need to translate its content across other languages to reach a wider audience. However, just translating your page\u2019s text to whichever language you need isn\u2019t enough to make your content available to speakers of that language since things like dates, numbers, units, and so on are different across countries and may cause confusion to your users."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"November 8, 2022")," or MM/DD/YY by people from the US."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"August 11, 2022")," or DD/MM/YY by people from Europe and Latam."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"August 22, 2011")," or YY/MM/DD by people from Japan, China, and Canada.")),(0,r.kt)("h2",{id:"how-to-use-it"},"HOW TO USE IT?"),(0,r.kt)("p",null,"The I18n API uses locale identifiers to work. A locale identifier is a string that expresses the user\u2019s language, country, region, dialect, and other preferences."),(0,r.kt)("p",null,"To be more precise, the I18n API provides an ",(0,r.kt)("inlineCode",{parentName:"p"},"Intl object")," that brings a bunch of specialized constructors to work with language-sensitive data."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Intl.DateTimeFormat()"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Used to format dates and times."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Intl.DisplayNames()"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Used to format language, region, and script display names."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Intl.Locale()"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Used to construct and manipulate locale identifier tags."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Intl.NumberFormat()"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Used to format numbers."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Intl.RelativeTimeFormat()"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Used to format relative time descriptions.")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const logDate = (locale) => {\n    const newDate = new Date("2022-10-24"); // YY/MM/DD\n    const dateTime = new Intl.DateTimeFormat(locale, {timeZone: "UTC"});\n    const formatedDate = dateTime.format(newDate);\n    console.log(formatedDate);\n};\n\nlogDate("en-US"); // 10/24/2022\nlogDate("de-DE"); // 24.10.2022\nlogDate("zh-TW"); // 2022/10/24\n')),(0,r.kt)("p",null,"We can implement this behavior on the quotes\u2019 date using the ",(0,r.kt)("inlineCode",{parentName:"p"},"navigator.language")," global property, which holds the user\u2019s preferred locale. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const locale = navigator.language;\n    const dateTimeFormat = new Intl.DateTimeFormat(locale, {timeZone: "UTC"});\n\n    return dateTimeFormat.format(date);\n\n};\n\n\nconst getQuote = async () => {\n    if (document.visibilityState === "visible") {\n        try {\n            const response = await fetch("https://api.quotable.io/random");\n            const {content, author, dateAdded} = await response.json();\n            const parsedQuote = `\n                <q>${content}</q> <br> \n                <p>- ${author}</p><br> \n                <p>Added on ${formatDate(dateAdded)}</p>`;\n            quote.innerHTML = parsedQuote;\n            broadcast.postMessage(parsedQuote);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n};\n')))}p.isMDXComponent=!0}}]);