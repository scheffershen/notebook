"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[30032],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(r),b=a,d=p["".concat(c,".").concat(b)]||p[b]||u[b]||o;return r?n.createElement(d,i(i({ref:t},m),{},{components:r})):n.createElement(d,i({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},65656:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={},i="Real-Time Communication with WebRTC",l={unversionedId:"WebAPI/web-rtc/Real-Time Communication with WebRTC",id:"WebAPI/web-rtc/Real-Time Communication with WebRTC",title:"Real-Time Communication with WebRTC",description:"The socket.io JavaScript Library",source:"@site/docs/WebAPI/web-rtc/Real-Time Communication with WebRTC.md",sourceDirName:"WebAPI/web-rtc",slug:"/WebAPI/web-rtc/Real-Time Communication with WebRTC",permalink:"/notebook/docs/WebAPI/web-rtc/Real-Time Communication with WebRTC",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/WebAPI/web-rtc/Real-Time Communication with WebRTC.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Web Push library for PHP",permalink:"/notebook/docs/WebAPI/web-push/web-push-php"},next:{title:"WebRTC Blueprints",permalink:"/notebook/docs/WebAPI/web-rtc/WebRTC Blueprints"}},c={},s=[{value:"local access",id:"local-access",level:2},{value:"WebRTC in 10 Steps",id:"webrtc-in-10-steps",level:2}],m={toc:s};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"real-time-communication-with-webrtc"},"Real-Time Communication with WebRTC"),(0,a.kt)("p",null,"The socket.io JavaScript Library"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm install socket.io\nnpm install node-static\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://simplewebrtc.com/"},"http://simplewebrtc.com/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.html5rocks.com/en/tutorials/webrtc/infrastructure/#after-signaling-using-ice-to-cope-with-nats-and-firewalls"},"https://www.html5rocks.com/en/tutorials/webrtc/infrastructure/#after-signaling-using-ice-to-cope-with-nats-and-firewalls")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.html5rocks.com/en/tutorials/webrtc/infrastructure/#after-signaling-using-ice-to-cope-with-nats-and-firewalls"},"https://www.html5rocks.com/en/tutorials/webrtc/infrastructure/#after-signaling-using-ice-to-cope-with-nats-and-firewalls")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/andyet/signalmaster"},"https://github.com/andyet/signalmaster"))),(0,a.kt)("h2",{id:"local-access"},"local access"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://sandbox.dev/medflix.universalmedica.com/WebRTCVideoChat/WebRTC_Book/WebRTC-Samples_OReilly_Review/WebContent/"},"http://sandbox.dev/medflix.universalmedica.com/WebRTCVideoChat/WebRTC_Book/WebRTC-Samples_OReilly_Review/WebContent/"))),(0,a.kt)("p",null,"WebRTC Trapezoid model\nWebRTC Triangle\nNetwork Address Translator (NAT)\nSignaling\nWebRTC API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MediaSteam API  \n    LocalMediaStream\n        getUserMedia()\n        stop()\n        \nPeerConnection API\n    The Session Traversal Utilities for NAT (STUN)\n    The Traversal Using Relays around NAT (TURN)\n    \nRTCDataChannel API  \n    the Stream Control Transmission Protocol (SCTP)\n    CreateDataChannel()\n")),(0,a.kt)("h2",{id:"webrtc-in-10-steps"},"WebRTC in 10 Steps"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a MediaStream object from your local devices (e.g., microphone, webcam)."),(0,a.kt)("li",{parentName:"ol"},"Obtain a URL blob from the local MediaStream."),(0,a.kt)("li",{parentName:"ol"},"Use the obtained URL blob for a local preview."),(0,a.kt)("li",{parentName:"ol"},"Create an RTCPeerConnection object."),(0,a.kt)("li",{parentName:"ol"},"Add the local stream to the newly created connection."),(0,a.kt)("li",{parentName:"ol"},"Send your own session description to the remote peer."),(0,a.kt)("li",{parentName:"ol"},"Receive the remote session description from your peer."),(0,a.kt)("li",{parentName:"ol"},"Process the received session description and add the remote stream to your\nRTCPeerConnection."),(0,a.kt)("li",{parentName:"ol"},"Obtain a URL blob from the remote stream."),(0,a.kt)("li",{parentName:"ol"},"Use the obtained URL blob to play the remote peer\u2019s audio and/or video.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"MediaStream API",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A MediaStream interface",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"MediaStream object",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"+ getUserMedia(constraints, successCallback, errorCallback)\n+ createObjectUrl(stream)\n")),"// Look after different browser vendors' ways of calling the getUserMedia()\n// API method:\n// Opera --\x3e getUserMedia\n// Chrome --\x3e webkitGetUserMedia\n// Firefox --\x3e mozGetUserMedia")))))))}p.isMDXComponent=!0}}]);