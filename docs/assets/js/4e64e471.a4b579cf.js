"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1075],{3905:(e,n,r)=>{r.d(n,{Zo:()=>m,kt:()=>k});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),l=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},m=function(e){var n=l(e.components);return t.createElement(i.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=l(r),u=a,k=d["".concat(i,".").concat(u)]||d[u]||p[u]||o;return r?t.createElement(k,c(c({ref:n},m),{},{components:r})):t.createElement(k,c({ref:n},m))}));function k(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=u;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[d]="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=r[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},38893:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var t=r(87462),a=(r(67294),r(3905));const o={},c="docker-compose_medflixs-yml",s={unversionedId:"ElasticSearch/docker/docker-compose_medflixs-yml",id:"ElasticSearch/docker/docker-compose_medflixs-yml",title:"docker-compose_medflixs-yml",description:"docker-compose_medflixs.yml",source:"@site/docs/ElasticSearch/docker/docker-compose_medflixs-yml.md",sourceDirName:"ElasticSearch/docker",slug:"/ElasticSearch/docker/docker-compose_medflixs-yml",permalink:"/notebook/docs/ElasticSearch/docker/docker-compose_medflixs-yml",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/ElasticSearch/docker/docker-compose_medflixs-yml.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"auto-suggestion jQuery and Elasticsearch",permalink:"/notebook/docs/ElasticSearch/auto-suggestion jQuery and Elasticsearch"},next:{title:"docker-compose yml",permalink:"/notebook/docs/ElasticSearch/docker/docker-compose_yml"}},i={},l=[{value:"docker-compose_medflixs.yml",id:"docker-compose_medflixsyml",level:2}],m={toc:l};function d(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"docker-compose_medflixs-yml"},"docker-compose_medflixs-yml"),(0,a.kt)("h2",{id:"docker-compose_medflixsyml"},"docker-compose_medflixs.yml"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'# docker-compose.yml\nversion: \'3.1\'\n\nservices:\n\n  # maildev:\n  #   image: maildev/maildev\n  #   container_name: maildev\n  #   ports:\n  #       - "1080:80"\n  #   networks:\n  #       - backend  \n  mailhog:\n    image: mailhog/mailhog\n    container_name: mailhog\n    ports:\n        #- "1025:1025"\n        - "1080:8025"\n    networks:\n        - backend  \n  php:\n    ##build: ./docker/php\n    image: scheffer_shen/php71:latest\n    container_name: php\n    working_dir: /var/www/html\n    volumes:\n      - "./:/var/www/html"\n    networks:\n      - backend  \n\n  caddy:\n    image: caddy:2\n    container_name: caddy\n    environment:\n      SERVER_NAME: ${SERVER_NAME:-medflixs.local, caddy:80}\n    ports:\n      - 80:80\n      - 443:443\n    working_dir: /var/www/html\n    volumes:\n      - "./:/var/www/html"\n      - "./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro"\n      - "./docker/.data/caddy/data:/data"\n      - "./docker/.data/caddy/config:/config"\n    networks:\n      - backend       \n      - frontend\n\n  db:\n    image: mysql:5.7\n    container_name: db\n    # command: --default-authentication-plugin=mysql_native_password\n    # command: mysqld --default-authentication-plugin=mysql_native_password\n    # command: [mysqld, --default-authentication-plugin=mysql_native_password, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb_monitor_enable=all, --max-connections=1001]\n    ports:\n      - 3306:3306\n    environment:\n      MYSQL_ROOT_PASSWORD: 9TT4fgq5\n    volumes:\n      - "./docker/.data/db:/var/lib/mysql"\n      - "./sql:/home"\n    networks:\n      - backend\n\n  redis:\n    image: redis:5-alpine\n    container_name: redis\n    restart: always\n    #ports: [6379]\n    networks:\n      - backend\n\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin:5.1.3\n    container_name: phpmyadmin\n    restart: always    \n    ports:\n      - "8080:80"      \n    environment:\n        PMA_HOST: db\n    networks:\n      - backend   \n      - frontend\n\n  # elasticsearch:\n  #   image: arcseldon/elasticsearch-kibana-marvel-sense\n  #   container_name: elasticsearch\n  #   volumes:\n  #     - ./.data/esdata1:/home/elasticsearch/elasticsearch/data\n  #   ports:\n  #    - 9200:9200\n  #    - 5601:5601\n  #   networks:\n  #       - backend       \n  #       - frontend \n  \n  # docker pull nshou/elasticsearch-kibana:kibana3    \n  elasticsearch:\n    image: nshou/elasticsearch-kibana:kibana3\n    container_name: elasticsearch\n    environment:\n      - cluster.name=docker-cluster\n      - bootstrap.memory_lock=true\n      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"\n      #- "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - esdata1:/home/elasticsearch/elasticsearch/data\n    ports:\n      - 9200:9200\n      - 5601:5601\n    networks:\n      - backend \n\n#  elasticsearch2:\n    # image: docker.elastic.co/elasticsearch/elasticsearch:6.4.1\n    # container_name: elasticsearch2\n    # environment:\n    #   - cluster.name=docker-cluster\n    #   - bootstrap.memory_lock=true\n    #   - "ES_JAVA_OPTS=-Xms512m -Xmx512m"\n    #   - "discovery.zen.ping.unicast.hosts=elasticsearch"\n    # ulimits:\n    #   memlock:\n    #     soft: -1\n    #     hard: -1\n    # volumes:\n    #   - esdata2:/usr/share/elasticsearch/data\n    # networks:\n    #   - backend\n\nvolumes:\n  esdata1:\n    driver: local\n  # esdata2:\n  #   driver: local\n    \nnetworks:\n    frontend:\n        driver: bridge\n    backend:\n        driver: bridge         \n')))}d.isMDXComponent=!0}}]);