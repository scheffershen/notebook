"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[52857],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),s=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,d=u["".concat(o,".").concat(m)]||u[m]||g[m]||a;return n?i.createElement(d,p(p({ref:t},c),{},{components:n})):i.createElement(d,p({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,p=new Array(a);p[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:r,p[1]=l;for(var s=2;s<a;s++)p[s]=n[s];return i.createElement.apply(null,p)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40488:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const a={},p="Nginx-fundamentals",l={unversionedId:"Nginx/Nginx-fundamentals 2015",id:"Nginx/Nginx-fundamentals 2015",title:"Nginx-fundamentals",description:"installation",source:"@site/docs/Nginx/Nginx-fundamentals 2015.md",sourceDirName:"Nginx",slug:"/Nginx/Nginx-fundamentals 2015",permalink:"/notebook/docs/Nginx/Nginx-fundamentals 2015",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Nginx/Nginx-fundamentals 2015.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Nginx Fundamentals High Performance Server",permalink:"/notebook/docs/Nginx/Nginx Fundamentals High Performance Server"},next:{title:"Nginx, Let's Encrypt",permalink:"/notebook/docs/Nginx/Nginx_Let-s_Encrypt"}},o={},s=[{value:"installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Backend communication",id:"backend-communication",level:2},{value:"php-fpm",id:"php-fpm",level:2},{value:"Configuring Nginx Workers and Other Usefull Directives**",id:"configuring-nginx-workers-and-other-usefull-directives",level:2},{value:"Expires Headers",id:"expires-headers",level:2},{value:"Gzip",id:"gzip",level:2},{value:"FastCGi Cache",id:"fastcgi-cache",level:2},{value:"Limiting",id:"limiting",level:2},{value:"Video streaming",id:"video-streaming",level:2},{value:"Security",id:"security",level:2}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nginx-fundamentals"},"Nginx-fundamentals"),(0,r.kt)("h2",{id:"installation"},"installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cat /etc/lsb-release\nls -l /etc/nginx\nservice nginx status\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Building Nginx from Source and Adding Modules   "),(0,r.kt)("p",{parentName:"li"},"sudo apt-get update\nsudo apt-get install build-essential"),(0,r.kt)("p",{parentName:"li"},"wget ",(0,r.kt)("a",{parentName:"p",href:"http://nginx.org/download/nginx-1.9.9.tar.gz"},"http://nginx.org/download/nginx-1.9.9.tar.gz"),"\ntar -zxvf nginx-1.9.9.tar.gz\ncd nginx-1.9.9"),(0,r.kt)("p",{parentName:"li"},"sudo apt-get install -y libpcre3 libpcre3-dev libpcrecpp0 libssl-dev zlib1g-dev"),(0,r.kt)("p",{parentName:"li"},"sudo apt-get install -y libxslt-dev libxml2-dev"),(0,r.kt)("p",{parentName:"li"},"sudo apt-get install -y libgd-dev"),(0,r.kt)("p",{parentName:"li"},"apt-get install -y libgeoip-dev"),(0,r.kt)("p",{parentName:"li"},"./configure --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' --prefix=/usr/share/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-debug --with-pcre-jit --with-ipv6 --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_dav_module --with-http_geoip_module --with-http_gzip_static_module --with-http_image_filter_module --with-http_sub_module --with-http_xslt_module --with-mail --with-mail_ssl_module --with-http_mp4_module --with-http_v2_module"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-nginx",metastring:"-V","-V":!0},"    nginx version: nginx/1.4.6 (Ubuntu)\n    built by gcc 4.8.2 (Ubuntu 4.8.2-19ubuntu1)\n    TLS SNI support enabled\n    configure arguments: --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' --prefix=/usr/share/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --http-client-body-temp-path=/var/lib/nginx/body --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-proxy-temp-path=/var/lib/nginx/proxy --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-debug --with-pcre-jit --with-ipv6 --with-http_ssl_module --with-http_stub_status_module --with-http_realip_module --with-http_addition_module --with-http_dav_module --with-http_geoip_module --with-http_gzip_static_module --with-http_image_filter_module --with-http_sub_module --with-http_xslt_module --with-mail --with-mail_ssl_module --with-http_mp4_module --with-http_v2_module\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"make\nsudo make install\n\nmv /usr/sbin/nginx /usr/sbin/nginx_1.4.6\ncp /usr/share/nginx/sbin/nginx /usr/sbin/nginx\n\nservice nginx restart\n\ncurl -I http://mcc32015.loc\n\ncurl -I -k https://www.medflixs.com\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -I http://mcc32015.loc/assets/css/style.default.css\n")),(0,r.kt)("p",null,"Matching Order:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1. Exact Match =\n2. Preferential Prefix ^~\n3. Regex Match ~&*~\n4. Prefix Match\n")),(0,r.kt)("h2",{id:"backend-communication"},"Backend communication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apt-get install php7.1-fpm php7.1-cgi php7.1 php7.1-mysql\n\nnano /etc/php/7.1/fpm/pool.d/www.conf\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"        33 listen = /run/php/php7.1-fpm.sock\n        PAR \n        33 listen = 127.0.0.1:9000\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"service php7.1-fpm restart\n")),(0,r.kt)("h2",{id:"php-fpm"},"php-fpm"),(0,r.kt)("p",null,"There are 2 mode in php-fpm, one is by Unix Socket, another is by TCP Socket."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    Unix Socket: /run/php/php7.1-fpm.sock\n    TCP Socket: 127.0.0.1:9000\n")),(0,r.kt)("h2",{id:"configuring-nginx-workers-and-other-usefull-directives"},"Configuring Nginx Workers and Other Usefull Directives**"),(0,r.kt)("p",null,"show nomber of cpu that you have "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"nproc\n")),(0,r.kt)("p",null,"Get more informations of your machine: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"lscpu\n")),(0,r.kt)("p",null,"To get the limit of the simulate connections of your machine:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ulimit -n\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.digitalocean.com/community/tutorials/how-to-setup-fastcgi-caching-with-nginx-on-your-vps"},"https://www.digitalocean.com/community/tutorials/how-to-setup-fastcgi-caching-with-nginx-on-your-vps")),(0,r.kt)("h2",{id:"expires-headers"},"Expires Headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http {\n    server {\n        location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n            expires 1M;\n            access_log off;\n            add_header Pragma public;\n            add_header Cache-Control public;\n            add_header Vary Accept-Encoding;\n        }\n    }\n}    \n")),(0,r.kt)("h2",{id:"gzip"},"Gzip"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'http { \n    server {\n    gzip on;\n    gzip_min_length 100;\n    gzip_disable "msie6";\n\n    gzip_vary on;\n    gzip_proxied any;\n    gzip_comp_level 3;\n    gzip_buffers 4 16k;\n    gzip_http_version 1.1;\n    gzip_types text/plain;\n    gzip_types text/css; \n    gzip_types application/json; \n    gzip_types application/pdf; \n    gzip_types application/ecmascript; \n    gzip_types application/x-javascript; \n    gzip_types text/csv; \n    gzip_types text/xml; \n    gzip_types application/xml; \n    gzip_types application/xml+rss; \n    gzip_types text/javascript;\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -I -H 'Accept-Encoding: gzip, deflate'  http://mcc32015.loc/assets/css/style.default.css\n")),(0,r.kt)("h2",{id:"fastcgi-cache"},"FastCGi Cache"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://gnugat.github.io/2016/04/20/super-speed-sf-nginx.html"},"https://gnugat.github.io/2016/04/20/super-speed-sf-nginx.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apt-get install apache2-utils\n")),(0,r.kt)("p",null,"test for 100 connection and 10 concurrency connection,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ab -n 100 -C 10 https://www.medflixs.com:443/\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-result"},"    Time taken for tests:   9.950 seconds (to completed all 100 request)\n    Complete requests:      100\n    Failed requests:        0\n    Total transferred:      8288700 bytes\n    HTML transferred:       8250700 bytes\n    Requests per second:    10.05 [#/sec] (mean)  (?)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-/etc/nginx/sites-available/default"},'http { \n\n    # Enable fastcgi caching \n    fastcgi_cache_path /tmp/nginx-cache levels=1:2 keys_zone=microcache:10m max_size=500m;\n    fastcgi_cache_key "$scheme$request_method$host$request_uri";\n    add_header microcache_status $upstream_cache_status;\n\n    server {\n        # Default cache for everthing\n        set $no_cache 0;\n\n        # Bypass cache for POST requests\n        if ($request_method = POST) { set $no_cache 1; }\n\n        # Bypass cache for URL with query string\n        if ($query_string != "") { set $no_cache 1; }\n\n        # Don\'t cache the following URLs\n        if ($request_uri ~* "administration") { set $no_cache 1; }\n\n        location ~ \\.php$ {\n            fastcgi_cache microcache;\n            fastcgi_cache_valid 200 10m;\n\n            fastcgi_cache_bypass $no_cache;\n            fastcgi_no_cache $no_cache;\n')),(0,r.kt)("h2",{id:"limiting"},"Limiting"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http {\n\n    # Limit concurrency\n    limit_conn_zone $binary_remote_addr zone=per_ip:5m;\n    limit_req_zone $binary_remote_addr zone=one_per_sec:5m rate=1r/s;\n\n    server {\n\n            location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n            expires 1M;\n            access_log off;\n            add_header Pragma public;\n            add_header Cache-Control public;\n            add_header Vary Accept-Encoding;\n\n            limit_conn per_ip 1;\n            limit_req zone=one_per_sec burst=5;\n        }\n\n    }\n}\n")),(0,r.kt)("h2",{id:"video-streaming"},"Video streaming"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http {\n\n    server {\n        location ~ \\.mp4$ {\n            # root /var/www/html/mcc3_2015/public_html/mp4/;\n            mp4;\n            mp4_buffer_size 4M;\n            mp4_max_buffer_size 10M;\n        }\n\n    }\n}\n")),(0,r.kt)("h2",{id:"security"},"Security"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mkdir /etc/nginx/ssl\n\nsudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt\n\nserver {\n       listen 80 default_server;\n       listen [::]:80 default_server ipv6only=on;\n       server_name mcc32015.loc;\n       return 301 https://$server_name$request_uri;\n}\n\nserver {\n\n        listen 443 ssl;\n\n        root /usr/share/nginx/html;\n        index index.html index.htm;\n\n        server_name your_domain.com;\n        ssl_certificate /etc/nginx/ssl/nginx.crt;\n        ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n")))}u.isMDXComponent=!0}}]);