"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[72484],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,b=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return t?a.createElement(b,l(l({ref:n},u),{},{components:t})):a.createElement(b,l({ref:n},u))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},75564:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={title:"Impl\xe9menter RabbitMQ dans une API Symfony 2",slug:"implementer-rabbitmq-dans-une-api-symfony-2"},l="Impl\xe9menter RabbitMQ dans une API Symfony 2",i={unversionedId:"RabitMQ/implementer-rabbitmq-dans-une-api-symfony-2",id:"RabitMQ/implementer-rabbitmq-dans-une-api-symfony-2",title:"Impl\xe9menter RabbitMQ dans une API Symfony 2",description:"- http://blog.vincent-chalamon.fr/implementer-rabbitmq-dans-une-api-symfony-2/",source:"@site/docs/RabitMQ/implementer-rabbitmq-dans-une-api-symfony-2.md",sourceDirName:"RabitMQ",slug:"/RabitMQ/implementer-rabbitmq-dans-une-api-symfony-2",permalink:"/notebook/docs/RabitMQ/implementer-rabbitmq-dans-une-api-symfony-2",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/RabitMQ/implementer-rabbitmq-dans-une-api-symfony-2.md",tags:[],version:"current",frontMatter:{title:"Impl\xe9menter RabbitMQ dans une API Symfony 2",slug:"implementer-rabbitmq-dans-une-api-symfony-2"},sidebar:"tutorialSidebar",previous:{title:"RabitMQ",permalink:"/notebook/docs/category/rabitmq"},next:{title:"Install rabbitmq in debian",permalink:"/notebook/docs/RabitMQ/install-rabbitmq-in-debian"}},s={},p=[{value:"Recap",id:"recap",level:3},{value:"Installation",id:"installation",level:3},{value:"Lancement/arr\xeat du service",id:"lancementarr\xeat-du-service",level:3},{value:"Interface de gestion",id:"interface-de-gestion",level:3},{value:"Usage Scenarios",id:"usage-scenarios",level:3},{value:"Exchange vs Queue",id:"exchange-vs-queue",level:3},{value:"Cas concr\xeat : une API Symfony 2",id:"cas-concr\xeat--une-api-symfony-2",level:3}],u={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"impl\xe9menter-rabbitmq-dans-une-api-symfony-2"},"Impl\xe9menter RabbitMQ dans une API Symfony 2"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://blog.vincent-chalamon.fr/implementer-rabbitmq-dans-une-api-symfony-2/"},"http://blog.vincent-chalamon.fr/implementer-rabbitmq-dans-une-api-symfony-2/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/vincentchalamon/poc-rabbitmq"},"https://github.com/vincentchalamon/poc-rabbitmq")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://afsy.fr/avent/2013/21-rabbitmq-et-Symfony2-traitements-asynchrones"},"http://afsy.fr/avent/2013/21-rabbitmq-et-Symfony2-traitements-asynchrones")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://blog.vandenbrand.org/2015/01/09/symfony2-and-rabbitmq-lessons-learned/"},"https://blog.vandenbrand.org/2015/01/09/symfony2-and-rabbitmq-lessons-learned/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://www.slideshare.net/old_sound/theres-a-rabbit-on-my-symfony"},"http://www.slideshare.net/old_sound/theres-a-rabbit-on-my-symfony")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/php-amqplib/RabbitMqBundle"},"https://github.com/php-amqplib/RabbitMqBundle"))),(0,r.kt)("h3",{id:"recap"},"Recap"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add an entry for the consumer/producer in the configuration."),(0,r.kt)("li",{parentName:"ul"},"Implement your callback."),(0,r.kt)("li",{parentName:"ul"},"Start the consumer from the CLI."),(0,r.kt)("li",{parentName:"ul"},"Add the code to publish messages inside the controller.")),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ docker run -d -P rabbitmq:3-management  \n")),(0,r.kt)("h3",{id:"lancementarr\xeat-du-service"},"Lancement/arr\xeat du service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ rabbitmq-server \n\n$ rabbitmqctl stop\n")),(0,r.kt)("h3",{id:"interface-de-gestion"},"Interface de gestion"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http://localhost:32769.\n\nlogin: guest\npwd: guest\n")),(0,r.kt)("h3",{id:"usage-scenarios"},"Usage Scenarios"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Batch Processing"),(0,r.kt)("li",{parentName:"ul"},"Image Uploading"),(0,r.kt)("li",{parentName:"ul"},"Distributed Logging")),(0,r.kt)("h3",{id:"exchange-vs-queue"},"Exchange vs Queue"),(0,r.kt)("h3",{id:"cas-concr\xeat--une-api-symfony-2"},"Cas concr\xeat : une API Symfony 2"),(0,r.kt)("p",null,"Commen\xe7ons par installer les d\xe9pendances dans chaque projet :"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://packagist.org/packages/php-amqplib/rabbitmq-bundle"},"https://packagist.org/packages/php-amqplib/rabbitmq-bundle")),(0,r.kt)("p",null,"Integrates php-amqplib with Symfony2|3 and RabbitMq. Formerly oldsound/rabbitmq-bundle."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ composer require php-amqplib/rabbitmq-bundle \n")),(0,r.kt)("p",null,"Puis, d\xe9clarez ce bundle dans le fichier ",(0,r.kt)("inlineCode",{parentName:"p"},"app/AppKernel.php")," :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"    public function registerBundles()  \n    {\n        $bundles = array(\n            ...\n            new OldSound\\RabbitMqBundle\\OldSoundRabbitMqBundle(),\n        );\n    }\n")),(0,r.kt)("p",null,"Dans votre fichier ",(0,r.kt)("inlineCode",{parentName:"p"},"app/config/config.yml"),", d\xe9clarez la configuration suivante :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"    old_sound_rabbit_mq:  \n        connections:\n            default:\n                host:     localhost\n                port:     5672\n                user:     guest\n                password: guest\n                vhost:    /\n                lazy:     false\n")),(0,r.kt)("p",null,"Puis, \xe9ditez le fichier ",(0,r.kt)("inlineCode",{parentName:"p"},"app/config/config.yml")," pour y ajouter la configuration suivante, d\xe9clarant notre Producer :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"    old_sound_rabbit_mq:  \n        producers:\n            foo:\n                connection: default\n                exchange_options:\n                    name: 'foo_exchange'\n                    type: topic\n")),(0,r.kt)("p",null,"Une fois cette configuration mise \xe0 jour, vous disposerez d'un service d\xe9clar\xe9 selon la structure old_sound_rabbit_mq.","<","name",">","_producer. Dans notre exemple, cela donnera old_sound_rabbit_mq.foo_producer."),(0,r.kt)("p",null,"R\xe9cup\xe9rez ce service o\xf9 vous le souhaitez, puis publiez le message comme suit :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"    $producer->publish(serialize($object));\n")),(0,r.kt)("p",null,"Parlons-en de sa dulcin\xe9e justement, celle-ci doit r\xe9cup\xe9rer ce message et le lire. Dans l'interface d'administration de RabbitMQ, cr\xe9ez une queue et lier-la \xe0 l'exchange pr\xe9c\xe9demment cr\xe9\xe9 :"),(0,r.kt)("p",null,"Puis, \xe9ditez le fichier ",(0,r.kt)("inlineCode",{parentName:"p"},"app/config/config.yml")," pour y d\xe9clarer votre Consumer comme suit :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"    old_sound_rabbit_mq:  \n        consumers:\n            bar:\n                connection: default\n                exchange_options:\n                    name: 'foo_exchange'\n                    type: topic\n                queue_options:\n                    name: 'foo_queue'\n                callback: les_tilleuls_demo.consumer.foo\n")),(0,r.kt)("p",null,"L'option callback fait r\xe9f\xe9rence \xe0 un service Symfony qu'il nous faut maintenant d\xe9clarer. Cr\xe9ez une classe FooConsumer impl\xe9mentant l'interface ",(0,r.kt)("inlineCode",{parentName:"p"},"OldSound\\RabbitMqBundle\\RabbitMq\\ConsumerInterface")," :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php  \nnamespace LesTilleuls\\DemoBundle\\Component\\AMPQ;\n\nuse LesTilleuls\\DemoBundle\\Entity\\Foo;  \nuse OldSound\\RabbitMqBundle\\RabbitMq\\ConsumerInterface;  \nuse PhpAmqpLib\\Message\\AMQPMessage;\n\nclass FooConsumer implements ConsumerInterface  \n{\n    /**\n     * {@inheritdoc}\n     */\n    public function execute(AMQPMessage $msg)\n    {\n        /** @var Foo $foo */\n        $foo = unserialize($msg->body);\n        echo 'foo '.$foo->getName().\" successfully downloaded!\\n\";\n    }\n}  \n")),(0,r.kt)("p",null,"N'oubliez pas de d\xe9clarer votre service dans Symfony !"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ php app/console rabbitmq:consumer foo\n")))}m.isMDXComponent=!0}}]);