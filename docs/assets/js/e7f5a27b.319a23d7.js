"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7715],{3905:(e,o,t)=>{t.d(o,{Zo:()=>c,kt:()=>g});var n=t(7294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function p(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?p(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function a(e,o){if(null==e)return{};var t,n,r=function(e,o){if(null==e)return{};var t,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),u=function(e){var o=n.useContext(l),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},c=function(e){var o=u(e.components);return n.createElement(l.Provider,{value:o},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},m=n.forwardRef((function(e,o){var t=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),s=u(t),m=r,g=s["".concat(l,".").concat(m)]||s[m]||d[m]||p;return t?n.createElement(g,i(i({ref:o},c),{},{components:t})):n.createElement(g,i({ref:o},c))}));function g(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var p=t.length,i=new Array(p);i[0]=m;var a={};for(var l in o)hasOwnProperty.call(o,l)&&(a[l]=o[l]);a.originalType=e,a[s]="string"==typeof e?e:r,i[1]=a;for(var u=2;u<p;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1214:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>s,frontMatter:()=>p,metadata:()=>a,toc:()=>u});var n=t(7462),r=(t(7294),t(3905));const p={sidebar_position:2,slug:"GeoIPLookup-Geolocation-from-the-CLI",title:"GeoIPLookup Geolocation from the CLI"},i="php geoip api",a={unversionedId:"Linux/php/php geoip api",id:"Linux/php/php geoip api",title:"GeoIPLookup Geolocation from the CLI",description:"http://kbeezie.com/geoiplookup-command-line/",source:"@site/docs/Linux/php/php geoip api.md",sourceDirName:"Linux/php",slug:"/Linux/php/GeoIPLookup-Geolocation-from-the-CLI",permalink:"/notebook/docs/Linux/php/GeoIPLookup-Geolocation-from-the-CLI",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Linux/php/php geoip api.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,slug:"GeoIPLookup-Geolocation-from-the-CLI",title:"GeoIPLookup Geolocation from the CLI"},sidebar:"tutorialSidebar",previous:{title:"Run php script as daemon process",permalink:"/notebook/docs/Linux/php/Run-php-script-as-daemon-process"},next:{title:"Machine learning",permalink:"/notebook/docs/category/machine-learning"}},l={},u=[{value:"Debian/Ubuntu",id:"debianubuntu",level:2},{value:"Performing a Lookup",id:"performing-a-lookup",level:2},{value:"GeoIP Legacy City Database Installation Instructions",id:"geoip-legacy-city-database-installation-instructions",level:2},{value:"geoip-api-php",id:"geoip-api-php",level:2}],c={toc:u};function s(e){let{components:o,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"php-geoip-api"},"php geoip api"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://kbeezie.com/geoiplookup-command-line/"},"http://kbeezie.com/geoiplookup-command-line/")),(0,r.kt)("p",null,"In order to do a geolookup from the command line, we have to get the GeoIP binary and database installed."),(0,r.kt)("h2",{id:"debianubuntu"},"Debian/Ubuntu"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"apt-get install geoip-bin geoip-database\n")),(0,r.kt)("h2",{id:"performing-a-lookup"},"Performing a Lookup"),(0,r.kt)("p",null,"To perform a lookup you would simply type geoiplookup followed by an IP address, for example let\u2019s look up one of google\u2019s IPs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"geoiplookup 74.125.225.33 -f \n")),(0,r.kt)("h2",{id:"geoip-legacy-city-database-installation-instructions"},"GeoIP Legacy City Database Installation Instructions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\n\n$ gunzip GeoLiteCity.dat.gz\n\n$ mv GeoLiteCity.dat /usr/local/share/GeoIP/\n")),(0,r.kt)("h2",{id:"geoip-api-php"},"geoip-api-php"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/maxmind/geoip-api-php"},"https://github.com/maxmind/geoip-api-php")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -sS https://getcomposer.org/installer | php\n\nphp composer.phar require geoip/geoip:~1.16\n\nrequire 'vendor/autoload.php';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'<?php\n\nrequire \'vendor/autoload.php\';\n\n$gi = geoip_open("/usr/local/share/GeoIP/GeoIP.dat",GEOIP_STANDARD);\n\necho geoip_country_code_by_addr($gi, "24.24.24.24") . "\\t" .\n     geoip_country_name_by_addr($gi, "24.24.24.24") . "\\n";\necho geoip_country_code_by_addr($gi, "80.24.24.24") . "\\t" .\n     geoip_country_name_by_addr($gi, "80.24.24.24") . "\\n";\n\ngeoip_close($gi);\n\n')))}s.isMDXComponent=!0}}]);