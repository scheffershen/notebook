"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7369],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>b});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),u=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(l.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),c=u(n),d=r,b=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(b,i(i({ref:e},p),{},{components:n})):a.createElement(b,i({ref:e},p))}));function b(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[c]="string"==typeof t?t:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4549:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={},i="Attributes in PHP 8",s={unversionedId:"PHP/PHP_8/Attributes in PHP 8",id:"PHP/PHP_8/Attributes in PHP 8",title:"Attributes in PHP 8",description:"https://php.watch/articles/php-attributes",source:"@site/docs/PHP/PHP_8/Attributes in PHP 8.md",sourceDirName:"PHP/PHP_8",slug:"/PHP/PHP_8/Attributes in PHP 8",permalink:"/notebook/docs/PHP/PHP_8/Attributes in PHP 8",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/PHP/PHP_8/Attributes in PHP 8.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Packt Mastering PHP 7.1",permalink:"/notebook/docs/PHP/PHP_7/Packt-Mastering-PHP-7.1"},next:{title:"Bierer D. PHP 8 Programming Tips, Tricks and Best Practices 2021",permalink:"/notebook/docs/PHP/PHP_8/Bierer D. PHP 8 Programming Tips, Tricks and Best"}},l={},u=[{value:"What are Attributes",id:"what-are-attributes",level:2},{value:"Attributes in other languages",id:"attributes-in-other-languages",level:2},{value:"Attributes vs Annotations",id:"attributes-vs-annotations",level:2},{value:"Attributes Syntax and Features",id:"attributes-syntax-and-features",level:2},{value:"Design Goals",id:"design-goals",level:2},{value:"More than one attribute allowed",id:"more-than-one-attribute-allowed",level:2},{value:"Attribute Examples",id:"attribute-examples",level:2},{value:"Complete Example",id:"complete-example",level:2},{value:"Declaring Attributes",id:"declaring-attributes",level:2},{value:"Attribute class is declared final",id:"attribute-class-is-declared-final",level:2},{value:"Complete Reflection Example",id:"complete-reflection-example",level:2},{value:"Migrating from Doctrine Annotations to Attributes",id:"migrating-from-doctrine-annotations-to-attributes",level:2}],p={toc:u};function c(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"attributes-in-php-8"},"Attributes in PHP 8"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://php.watch/articles/php-attributes"},"https://php.watch/articles/php-attributes")),(0,r.kt)("p",null,"05/2020"),(0,r.kt)("h2",{id:"what-are-attributes"},"What are Attributes"),(0,r.kt)("p",null,"Attributes are small meta-data elements added for PHP classes, functions, closures, class properties, class methods, constants, and even on anonymous classes."),(0,r.kt)("p",null,'PHP DocBlock comments are probably the most familiar example. These comments are somewhat structured with @param "annotations". '),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * @param string $message\n */\nfunction foo(string $message) {}\n")),(0,r.kt)("p",null,"Frameworks such as Drupal, Symfony, and Doctrine use annotations to provide auxiliary information for certain classes in an organized way."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'class AboutPage extends AbstractController {\n    /**\n     * @Route("/about")\n     */\n    public function page() {}\n}\n')),(0,r.kt)("p",null,"Attributes in PHP 8 goes steps ahead of this, which brings a structured and engine-validated approach to annotations."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"class AboutPage extends AbstractController {\n    #[Route('/about')]\n    public function page() {}\n}\n")),(0,r.kt)("h2",{id:"attributes-in-other-languages"},"Attributes in other languages"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Java is probably the most popular one, which has Annotations with a syntax similar to ",(0,r.kt)("inlineCode",{parentName:"li"},'@Route(name = "/about")'),"."),(0,r.kt)("li",{parentName:"ul"},"Rust has Attributes with a syntax similar to ",(0,r.kt)("inlineCode",{parentName:"li"},'#[route(name = "/about")]'),", that is exactly the same as PHP's implementation."),(0,r.kt)("li",{parentName:"ul"},"Python annotations are called Decorators, and follow a similar syntax: ",(0,r.kt)("inlineCode",{parentName:"li"},'@route("/about")'),".")),(0,r.kt)("h2",{id:"attributes-vs-annotations"},"Attributes vs Annotations"),(0,r.kt)("p",null,'Attributes and Annotations provide the same functionality. The word "Annotations" is already being used widely in PHP libraries and frameworks, so the name Attributes help to minimize the confusion with Annotations.'),(0,r.kt)("h2",{id:"attributes-syntax-and-features"},"Attributes Syntax and Features"),(0,r.kt)("p",null,"The Attribute syntax is simply braces made with ",(0,r.kt)("inlineCode",{parentName:"p"},"#[")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"]")),(0,r.kt)("h2",{id:"design-goals"},"Design Goals"),(0,r.kt)("p",null,"PHP 8 Attributes provide convenient access to the information."),(0,r.kt)("h2",{id:"more-than-one-attribute-allowed"},"More than one attribute allowed"),(0,r.kt)("p",null,"Each item that receives Attributes can have zero or many attributes,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[Attr]\n#[FooAttr]\nfunction foo(){}\n\n#[Attr, FooAttr]\nfunction bar(){}\n")),(0,r.kt)("h2",{id:"attribute-examples"},"Attribute Examples"),(0,r.kt)("p",null,"Functions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[Attr('foo')]\nfunction example(){}\n")),(0,r.kt)("p",null,"Classes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[Attr('foo')]\nclass Example {}\n")),(0,r.kt)("p",null,"Function/Method Arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"function example(#[Attr('foo')] string $foo) {}\n")),(0,r.kt)("p",null,"Class Properties"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"class Foo {\n    #[Attr('foo')]\n    private string $foo;\n}\n")),(0,r.kt)("p",null,"Class Constants"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"class Foo {\n    #[Attr('foo')]\n    private const FOO = 'foo';\n}\n")),(0,r.kt)("p",null,"Closures"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$fn = #[Attr('foo')] fn() => 1 > 2;\n\n$fn = #[Attr('foo')] function() {\n    return 1 > 2;\n}\n")),(0,r.kt)("p",null,"Anonymous Classes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$instance = new #[Attr('foo')] class {};\n")),(0,r.kt)("p",null,"With DocBlocks"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[AttributeBefore('foo')]\n#[AttributeBefore2('foo')]\n#[AttrCommas('foo'), AttrCommas('foo')]\n/**\n * Foo\n */\n#[AttributeAfter('foo')]\nfunction example() {}\n")),(0,r.kt)("h2",{id:"complete-example"},"Complete Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[FooAttribute]\nfunction foo_func(#[FooParamAttrib('Foo1')] $foo) {}\n\n#[FooAttribute('hello')]\n#[BarClassAttrib(42)]\nclass Foo {\n    #[ConstAttr]\n    #[FooAttribute(null)]\n    private const FOO_CONST = 28;\n    private const BAR_CONST = 28;\n\n    #[PropAttr(Foo::BAR_CONST, 'string')]\n    private string $foo;\n\n    #[SomeoneElse\\FooMethodAttrib]\n    public function getFoo(#[FooClassAttrib(28)] $a): string{}\n}\n\n// Declare Attributes\n\n/*\n * Attributes are declared with `#[Attribute]`.\n */\n\n#[Attribute]\nclass FooAttribute {\n    public function __construct(?string $param1 = null) {}\n}\n\n#[Attribute]\nclass ClassAttrib {\n    public function __construct(int $index) {}\n}\n")),(0,r.kt)("h2",{id:"declaring-attributes"},"Declaring Attributes"),(0,r.kt)("p",null,"The attribute itself may be declared as a class. "),(0,r.kt)("p",null,"A PHP attribute is a standard PHP class, declared with ",(0,r.kt)("inlineCode",{parentName:"p"},"#[Attribute]")," attribute."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[Attribute]\nclass FooAttribute{\n\n}\n")),(0,r.kt)("p",null,"When declaring the attribute, it is possible to declare the targets the attribute must be used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[Attribute(Attribute::TARGET_CLASS)]\nclass Foo {}\n")),(0,r.kt)("p",null,"It accepts a bit-mask to allow the attribute in one or more targets."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[Attribute(Attribute::TARGET_CLASS | Attribute::TARGET_METHOD)]\nclass Foo {}\n")),(0,r.kt)("h2",{id:"attribute-class-is-declared-final"},"Attribute class is declared final"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Attribute")," class is declared ",(0,r.kt)("inlineCode",{parentName:"p"},"final"),", which prevents it from being extended."),(0,r.kt)("h2",{id:"complete-reflection-example"},"Complete Reflection Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"#[exampleAttribute('Hello world', 42)]\nclass Foo {}\n\n#[Attribute]\nclass ExampleAttribute {\n    private string $message;\n    private int $answer;\n    public function __construct(string $message, int $answer) {\n        $this->message = $message;\n        $this->answer = $answer;\n    }\n}\n")),(0,r.kt)("h2",{id:"migrating-from-doctrine-annotations-to-attributes"},"Migrating from Doctrine Annotations to Attributes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'- /** @ORM\\Entity */\n+ #[ORM\\Entity]\n  class Book {\n-   /** \n-    * @ORM\\Id\n-    * @ORM\\Column(type="string")\n-    * @ORM\\GeneratedValue\n-    */\n+   #[ORM\\Id]\n+   #[ORM\\Column("string")]\n+   #[ORM\\GeneratedValue]\n    private string $isbn;\n  }\n\n')))}c.isMDXComponent=!0}}]);