"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[48819],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},i=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||s;return t?r.createElement(f,o(o({ref:n},i),{},{components:t})):r.createElement(f,o({ref:n},i))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<s;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},64396:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const s={},o="Monter un serveur RTMP/HLS avec NGinx et diffuser vers Facebook  (test\xe9 avec des erreurs)",l={unversionedId:"Nginx/RTMP/Monter un serveur RTMP_HLS avec NGinx et diffuser vers Facebook",id:"Nginx/RTMP/Monter un serveur RTMP_HLS avec NGinx et diffuser vers Facebook",title:"Monter un serveur RTMP/HLS avec NGinx et diffuser vers Facebook  (test\xe9 avec des erreurs)",description:"https://aerogus.net/posts/monter-serveur-nginx-rtmp-hls-diffuser-vers-facebook/",source:"@site/docs/Nginx/RTMP/Monter un serveur RTMP_HLS avec NGinx et diffuser vers Facebook.md",sourceDirName:"Nginx/RTMP",slug:"/Nginx/RTMP/Monter un serveur RTMP_HLS avec NGinx et diffuser vers Facebook",permalink:"/notebook/docs/Nginx/RTMP/Monter un serveur RTMP_HLS avec NGinx et diffuser vers Facebook",draft:!1,editUrl:"https://github.com/scheffershen/notebook/tree/main/docs/Nginx/RTMP/Monter un serveur RTMP_HLS avec NGinx et diffuser vers Facebook.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to Use the NGINX RTMP Module to Setup a Streaming Server (Native installation)",permalink:"/notebook/docs/Nginx/RTMP/How to Use the NGINX RTMP Module to Setup a Streaming Server"},next:{title:"Securing URLs with the Secure Link Module in NGINX and NGINX Plus",permalink:"/notebook/docs/Nginx/RTMP/Securing URLs with the Secure Link Module in NGINX and NGINX Plus"}},c={},p=[{value:"Installation des d\xe9pendances",id:"installation-des-d\xe9pendances",level:2},{value:"Param\xe9trage de NGinx pour le RTMP",id:"param\xe9trage-de-nginx-pour-le-rtmp",level:2},{value:"Param\xe9trage du HLS et HTTPS",id:"param\xe9trage-du-hls-et-https",level:2}],i={toc:p};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"monter-un-serveur-rtmphls-avec-nginx-et-diffuser-vers-facebook--test\xe9-avec-des-erreurs"},"Monter un serveur RTMP/HLS avec NGinx et diffuser vers Facebook  (test\xe9 avec des erreurs)"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://aerogus.net/posts/monter-serveur-nginx-rtmp-hls-diffuser-vers-facebook/"},"https://aerogus.net/posts/monter-serveur-nginx-rtmp-hls-diffuser-vers-facebook/"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aerogus/nginx-rtmp"},"https://github.com/aerogus/nginx-rtmp")),(0,a.kt)("p",null,"2020-05-02"),(0,a.kt)("h2",{id:"installation-des-d\xe9pendances"},"Installation des d\xe9pendances"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"apt-get install nginx libnginx-mod-rtmp ffmpeg mediainfo certbot python-certbot-nginx stunnel4 (test\xe9 avec des erreurs)\n")),(0,a.kt)("h2",{id:"param\xe9trage-de-nginx-pour-le-rtmp"},"Param\xe9trage de NGinx pour le RTMP"),(0,a.kt)("p",null,"Cr\xe9ons d\xe9j\xe0 ces 2 ",(0,a.kt)("em",{parentName:"p"},"r\xe9pertoires de stockage")," avec les droits en \xe9criture pour Nginx :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mkdir -p /data/hls /data/records\nchown -R www-data:www-data /data\n")),(0,a.kt)("p",null,"/etc/nginx/modules-available"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'rtmp_auto_push on;\n\nrtmp {\n    server {\n        listen 1935; # port standard RTMP\n        chunk_size 4096;\n\n        # tous les flux sources arrivent l\xe0, dans l\'app "push"\n        application push {\n            live on;\n\n            # on enregistre tous les flux entrants\n            record all; # audio + video\n            # veiller \xe0 ce que ce r\xe9pertoire existe\n            # et soit inscriptible par nginx (user www-data)\n            record_path /data/records;\n            record_suffix -%Y%m%d-%H%M%S.flv;\n            record_max_size 64M;\n\n            # ajoute un suffixe timestamp au nom du fichier .flv\n            # mais c\'est doublon avec record_suffix qui a un timestamp\n            #record_unique on;\n\n            # on autorise que ces ips \xe0 publier\n            #allow publish 127.0.0.1;\n            #deny publish all;\n\n            # on n\'autorise ou pas la lecture directe via rtmp\n            # deny play all;\n\n            # on envoi le flux re\xe7u vers l\'app "facebook"\n            # cf. plus bas\n            push rtmp://localhost/facebook;\n\n            # transcodage(s) vers l\'app "show"\n            # ffmpeg est utile. Prend bcp de CPU, \xe0 surveiller\n            # exemple mini: upload en 720, passthru 720, transcode en 480 + 360\n            exec ffmpeg -i rtmp://localhost/$app/$name -async 1 -vsync -1\n                 -c:v libx264 -c:a aac -b:v  768k -b:a  96k -vf "scale=640:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_360\n                 -c:v libx264 -c:a aac -b:v 1024k -b:a 128k -vf "scale=854:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_480\n                 -c copy -f flv rtmp://localhost/show/$name_src;\n\n            # exemple complet: upload en 1080, transcode en 1080 + 720 + 480 + 360 + 240 + 144\n            #exec ffmpeg -i rtmp://localhost/$app/$name -async 1 -vsync -1\n            #     -c:v libx264 -c:a aac -b:v  128k -b:a  32k -vf "scale=256:trunc(ow/a/2)*2"  -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_144\n            #     -c:v libx264 -c:a aac -b:v  256k -b:a  64k -vf "scale=426:trunc(ow/a/2)*2"  -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_240\n            #     -c:v libx264 -c:a aac -b:v  768k -b:a  96k -vf "scale=640:trunc(ow/a/2)*2"  -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_360\n            #     -c:v libx264 -c:a aac -b:v 1024k -b:a 128k -vf "scale=854:trunc(ow/a/2)*2"  -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_480\n            #     -c:v libx264 -c:a aac -b:v 2048k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_720\n            #     -c:v libx264 -c:a aac -b:v 3096k -b:a 128k -vf "scale=1920:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -g 10 -crf 23 -f flv rtmp://localhost/show/$name_1080\n            #     -c copy -f flv rtmp://localhost/show/$name_src;\n        }\n\n        application show {\n            live on; # Allows live input from above\n            hls on; # Enable HTTP Live Streaming\n\n            # Les .m3u8 et les .ts seront \xe9crits ici\n            # le r\xe9pertoire doit exister et \xeatre inscriptible par nginx (user www-data)\n            hls_path /data/hls/;\n            hls_fragment 3;\n            hls_playlist_length 60;\n\n            # On propose les versions transcod\xe9es suivant la bande passante du client\n            # cas mini\n            hls_variant _360 BANDWIDTH=864000;\n            hls_variant _480 BANDWIDTH=1152000;\n            hls_variant _src BANDWIDTH=1500000;\n\n            # cas complet\n            #hls_variant _144  BANDWIDTH=160000;\n            #hls_variant _240  BANDWIDTH=320000;\n            #hls_variant _360  BANDWIDTH=864000;\n            #hls_variant _480  BANDWIDTH=1152000;\n            #hls_variant _720  BANDWIDTH=2176000;\n            #hls_variant _1080 BANDWIDTH=3200000;\n            #hls_variant _src  BANDWIDTH=4000000;\n        }\n\n        application facebook {\n            live on;\n            record off;\n\n            # seulement aliment\xe9 par l\'app "push" plus haut, donc local\n            allow publish 127.0.0.1;\n            deny publish all;\n\n            # Depuis 2019, Facebook impose que le flux soit transmis en rtmps (chiffr\xe9)\n            # or le module nginx-rtmp ne fait pas de chiffrement, \n            # l\'url r\xe9elle d\'envoi pour Facebook est\n            #push rtmps://live-api-s.facebook.com:443/rtmp/<streamKey>;\n            # on va passer par `stunnel` (cf. doc plus bas)\n            push rtmp://127.0.0.1:19350/rtmp/<streamKey>;\n        }\n    }\n}\n')),(0,a.kt)("p",null,"On active cette conf :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ln -s /etc/nginx/modules-available/rtmp.conf /etc/nginx/modules-enabled/rtmp.conf\n")),(0,a.kt)("p",null,"On v\xe9rifie que la syntaxe est correcte :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nginx -t\n")),(0,a.kt)("p",null,"On recharge le serveur"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"systemctl reload nginx\n")),(0,a.kt)("p",null,"On peut \xe0 ce stade alimenter notre serveur rtmp (",(0,a.kt)("em",{parentName:"p"},"appName")," push, ",(0,a.kt)("em",{parentName:"p"},"streamKey")," test) avec une commande ffmpeg, par exemple en lui envoyant une mire :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"fmpeg -re -f lavfi -i smptebars -crf 18 -s 1280x720 -r 25 -f flv rtmp://stream.example.com/push/test\n")),(0,a.kt)("p",null,"En param\xe8tre de sortie:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Service: personnalis\xe9\nServeur: rtmp://stream.example.com/push/\nCl\xe9 de stream: test\n")),(0,a.kt)("h2",{id:"param\xe9trage-du-hls-et-https"},"Param\xe9trage du HLS et HTTPS"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"HLS")," est un protocole de streaming video instaur\xe9 par Apple mais g\xe9n\xe9ralis\xe9. C\u2019est avec ce format qu\u2019on aura la meilleure compatibilit\xe9 client donc on va se concentrer dessus."),(0,a.kt)("p",null,"Cr\xe9ons le fichier de ",(0,a.kt)("em",{parentName:"p"},"vhost")," dans ",(0,a.kt)("em",{parentName:"p"},"NGinx")," (nommez le fichier avec le vrai domaine)"),(0,a.kt)("p",null,"fichier ",(0,a.kt)("em",{parentName:"p"},"stream.example.com.conf")," dans le r\xe9pertoire ",(0,a.kt)("em",{parentName:"p"},"/etc/nginx/sites-available")," :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"server {\n    listen 80;\n    server_name stream.example.com;\n    location / {\n       return 301 https://$host$request_uri;\n    }\n}\nserver {\n    listen 443 ssl http2;\n    server_name stream.example.com;\n\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_prefer_server_ciphers on;\n    ssl_ciphers \"EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED\";\n\n    # ces lignes seront ajout\xe9es par Let's Encrypt\n    #ssl_certificate /etc/letsencrypt/live/stream.example.com/fullchain.pem;\n    #ssl_certificate_key /etc/letsencrypt/live/stream.example.com/privkey.pem;\n\n    location /hls {\n        # Disable cache\n        add_header Cache-Control no-cache;\n\n        # CORS setup\n        add_header 'Access-Control-Allow-Origin' '*' always;\n        add_header 'Access-Control-Expose-Headers' 'Content-Length';\n\n        # allow CORS preflight requests\n        if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin' '*';\n            add_header 'Access-Control-Max-Age' 1728000;\n            add_header 'Content-Type' 'text/plain charset=UTF-8';\n            add_header 'Content-Length' 0;\n            return 204;\n        }\n\n        types {\n            application/vnd.apple.mpegurl m3u8;\n            video/mp2t ts;\n        }\n\n        # le r\xe9pertoire de base des donn\xe9es\n        # vous l'avez d\xe9j\xe0 cr\xe9\xe9 plus haut\n        root /data/;\n    }\n\n    location /stat {\n        rtmp_stat all;\n        rtmp_stat_stylesheet stat.xsl;\n        add_header Refresh \"3; $request_uri\";\n    }\n\n    location /stat.xsl {\n        root /data;\n    }\n}\n")),(0,a.kt)("p",null,"Ajoutons une page web de stats utiles qui sera accessible via"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://stream.example.com/stat.xsl"},"https://stream.example.com/stat.xsl")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl https://raw.githubusercontent.com/arut/nginx-rtmp-module/master/stat.xsl -o /data/stat.xsl\n")),(0,a.kt)("p",null,"On active cette conf :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ln -s /etc/nginx/sites-available/stream.example.com.conf /etc/nginx/sites-enabled/stream.example.com.conf\n")),(0,a.kt)("p",null,"On v\xe9rifie que la syntaxe est correcte :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nginx -t\n")),(0,a.kt)("p",null,"On recharge le serveur"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"systemctl reload nginx\n")),(0,a.kt)("p",null,"On doit g\xe9n\xe9rer un certificat ",(0,a.kt)("em",{parentName:"p"},"TLS/SSL")," pour profiter du chiffrement HTTPS. On a pr\xe9c\xe9demment install\xe9 certbot. Utilison le"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"certbot --nginx\n")))}u.isMDXComponent=!0}}]);