"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[40676],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),o=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=o(e.components);return a.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=o(t),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return t?a.createElement(h,p(p({ref:n},c),{},{components:t})):a.createElement(h,p({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,p=new Array(i);p[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,p[1]=l;for(var o=2;o<i;o++)p[o]=t[o];return a.createElement.apply(null,p)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},94568:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var a=t(87462),r=(t(67294),t(3905));const i={slug:"Guide-de-migration-vers-Nginx-1_23-et-ElasticSearch-2-sur-Ubuntu-22.04",title:"Guide de migration vers Nginx 1.23 et ElasticSearch 2 sur Ubuntu 22.04",authors:["yshen"],tags:["Ubuntu","PHP","MySQL","Nginx","Elasticsearch"]},p=void 0,l={permalink:"/notebook/blog/Guide-de-migration-vers-Nginx-1_23-et-ElasticSearch-2-sur-Ubuntu-22.04",editUrl:"https://github.com/scheffershen/notebook/tree/main/blog/2023-02-23 Guide de Migration xxx.com/index.md",source:"@site/blog/2023-02-23 Guide de Migration xxx.com/index.md",title:"Guide de migration vers Nginx 1.23 et ElasticSearch 2 sur Ubuntu 22.04",description:"Le serveur initial est sous Ubuntu 16.04, PHP 7.1, MySQL 5.7, Nginx 1.9.9 avec l'option MP4, J'ai le migrer vers Ubuntu 22.04",date:"2023-02-23T00:00:00.000Z",formattedDate:"February 23, 2023",tags:[{label:"Ubuntu",permalink:"/notebook/blog/tags/ubuntu"},{label:"PHP",permalink:"/notebook/blog/tags/php"},{label:"MySQL",permalink:"/notebook/blog/tags/my-sql"},{label:"Nginx",permalink:"/notebook/blog/tags/nginx"},{label:"Elasticsearch",permalink:"/notebook/blog/tags/elasticsearch"}],readingTime:3.585,hasTruncateMarker:!1,authors:[{name:"Yi Shen",title:"Web Developer",url:"https://github.com/scheffershen",imageURL:"https://github.com/scheffershen.png",key:"yshen"}],frontMatter:{slug:"Guide-de-migration-vers-Nginx-1_23-et-ElasticSearch-2-sur-Ubuntu-22.04",title:"Guide de migration vers Nginx 1.23 et ElasticSearch 2 sur Ubuntu 22.04",authors:["yshen"],tags:["Ubuntu","PHP","MySQL","Nginx","Elasticsearch"]},nextItem:{title:"Guide de migration vers Ubuntu 22.04, PHP 7.4, MySQL 8",permalink:"/notebook/blog/Guide-de-migration-vers-Ubuntu-22.04-PHP-7.4-MySQL-8"}},s={authorsImageUrls:[void 0]},o=[{value:"Ubuntu 22.04",id:"ubuntu-2204",level:4},{value:"PHP 7.4",id:"php-74",level:4},{value:"Nginx 1.23",id:"nginx-123",level:4},{value:"NFS",id:"nfs",level:4},{value:"Certbot",id:"certbot",level:4},{value:"MySQL 8",id:"mysql-8",level:4},{value:"PHPMyAdmin",id:"phpmyadmin",level:4},{value:"Elasticsearch",id:"elasticsearch",level:4},{value:"Kibana",id:"kibana",level:4}],c={toc:o};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Le serveur initial est sous Ubuntu 16.04, PHP 7.1, MySQL 5.7, Nginx 1.9.9 avec l'option MP4, J'ai le migrer vers Ubuntu 22.04"),(0,r.kt)("h4",{id:"ubuntu-2204"},"Ubuntu 22.04"),(0,r.kt)("p",null,"Mettre \xe0 niveau Ubuntu"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ do-release-upgrade\n")),(0,r.kt)("h4",{id:"php-74"},"PHP 7.4"),(0,r.kt)("p",null,"Installer PHP 7.4"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sudo apt install software-properties-common\n$ sudo add-apt-repository ppa:ondrej/php -y\n$ sudo apt install php7.4 php7.4-common php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-json php7.4-imap php7.4-mbstring php7.4-gettext php7.4-bcmath php7.4-bz2 php7.4-readline php7.4-opcache php7.4-soap php7.4-zip php7.4-intl php7.4-ldap php7.4-fpm -y\n")),(0,r.kt)("p",null,"Basculer vers PHP 7.4"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sudo update-alternatives --config php\n$ sudo update-alternatives --set php /usr/bin/php7.4\n")),(0,r.kt)("p",null,"Enable PHP 7.4 FPM, et d\xe9marre le service "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sudo systemctl start php7.4-fpm\n$ sudo systemctl enable php7.4-fpm\n")),(0,r.kt)("h4",{id:"nginx-123"},"Nginx 1.23"),(0,r.kt)("p",null,"Nettoyer l'ancienne version Nginx:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ apt purge nginx nginx-common nginx-core\n")),(0,r.kt)("p",null,"Installer les bliblothques neccessaires: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sudo apt-get install curl build-essential make gcc zlib1g zlib1g-dev geoipupdate libmaxminddb0 libmaxminddb-dev mmdb-bin libmodsecurity3 libgd-dev libexif-dev libssl-dev libxml2 libxml2-dev uuid-dev git libxslt-dev libgeoip-dev libgoogle-perftools-dev libperl-dev libcurl4-openssl-dev\n$ sudo wget http://nginx.org/download/nginx-1.23.0.tar.gz\n\n$ sudo git clone https://github.com/leev/ngx_http_geoip2_module.git\n\n$ ./configure  --prefix=/etc/nginx  --sbin-path=/usr/sbin/nginx \\\n    --conf-path=/etc/nginx/nginx.conf                           \\ \n    --error-log-path=/var/log/nginx/error.log                   \\ \n    --http-log-path=/var/log/nginx/access.log                   \\                \n    --pid-path=/var/run/nginx.pid                               \\\n    --lock-path=/var/run/nginx.lock                             \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp   \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp          \\ \n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp      \\  \n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp          \\     \n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp            \\        \n    --user=nginx                                                \\               \n    --group=nginx                                               \\                \n    --with-http_ssl_module                                      \\              \n    --with-http_realip_module                                   \\              \n    --with-http_addition_module                                 \\              \n    --with-http_sub_module                                      \\              \n    --with-http_dav_module                                      \\              \n    --with-http_mp4_module                                      \\              \n    --with-http_gzip_static_module                              \\ \n    --with-http_image_filter_module                             \\              \n    --with-http_stub_status_module                              \\                  \n    --with-mail                                                 \\                       \n    --with-mail_ssl_module                                   \\                                                                     \n    --with-http_v2_module                                       \\                              \n    --add-dynamic-module=/home/adminum/ngx_http_geoip2_module\n$ make\n$ make install\n\n$ sudo journalctl -xeu nginx.service\n\n$ ll /usr/lib/nginx/modules/\n$ cp /usr/lib/nginx/modules/ngx_stream_geoip2_module.so /etc/nginx/modules/ \n$ chmod +x /etc/nginx/modules/ngx_stream_geoip2_module.so\n$ nano /etc/nginx/modules-enabled/70-mod-stream-geoip2.conf \n\n$ nginx -t\n\n$ sudo systemctl disable apache2 \n$ sudo systemctl enable nginx\n")),(0,r.kt)("p",null,"La configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"server {\n    root /var/www/www.xxx.com/web;\n    index app.php index.html;\n\n    server_name xxx.com www.xxx.com;\n\n    location / {\n        try_files $uri @rewriteapp;\n    }\n\n    location @rewriteapp {\n            rewrite ^(.*)$ /app.php/$1 last;\n    }\n\n    location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n        expires 365d;\n        access_log off;\n        add_header Pragma public;\n        add_header Cache-Control public;\n        add_header Vary Accept-Encoding;\n    }\n\n    location ~ \\.mp4$ {\n            mp4;\n            mp4_buffer_size 4M;\n            mp4_max_buffer_size 10M;\n    }\n\n    location ~ ^/(app|app_dev|app_prod|config)\\.php(/|$) { # \\.php$ {\n        include snippets/fastcgi-php.conf;\n        fastcgi_pass unix:/run/php/php7.4-fpm.sock;\n    }\n}\n")),(0,r.kt)("h4",{id:"nfs"},"NFS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sudo apt install nfs-kernel-server\n\n$ sudo apt install nfs-common\n\n$ sudo systemctl restart nfs-kernel-server\n\n$ sudo nano /etc/exports\n\n$ mount 54.38.82.77:/home/adminum /nfs/home/adminum\n")),(0,r.kt)("h4",{id:"certbot"},"Certbot"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ snap install core; sudo snap refresh core\n\n$ apt remove certbot\n$ snap install --classic certbot\n$ ln -s /snap/bin/certbot /usr/bin/certbot\n\n$ certbot --nginx -d xxx.com -d www.xxx.com\n")),(0,r.kt)("h4",{id:"mysql-8"},"MySQL 8"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ nano /etc/mysql/conf.d/mysql.cnf \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[mysqld]\ndefault-authentication-plugin=mysql_native_password\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ mysql -u root -p xxx < xxx.sql \n")),(0,r.kt)("h4",{id:"phpmyadmin"},"PHPMyAdmin"),(0,r.kt)("p",null,"Installer PHPMyAdmin"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ wget https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-all-languages.zip\n$ apt install unzip -y\n$ unzip phpMyAdmin-5.2.0-all-languages.zip\n$ mv phpMyAdmin-* /usr/share/phpmyadmin\n$ cp /usr/share/phpmyadmin/config.sample.inc.php /usr/share/phpmyadmin/config.inc.php\n$ nano /usr/share/phpmyadmin/config.inc.php\n")),(0,r.kt)("p",null,"modifier le configuration de Nginx: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ nano sites-enabled/default \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    location /phpmyadmin {\n        root /usr/share/;\n            \n        allow xw.x.x.x;\n        deny all;\n\n        index index.php index.html index.htm;\n\n        location ~ ^/phpmyadmin/(.+\\.php)$ {\n                fastcgi_pass unix:/run/php/php7.4-fpm.sock;\n                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n                include fastcgi_params;\n                include snippets/fastcgi-php.conf;\n        }\n\n        location ~* ^/phpmyadmin/(.+\\.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt))$ {\n                root /usr/share/;\n        }\n\n        location ~ ^/phpmyadmin/(doc|sql|setup)/ {\n            deny all;\n        }\n    }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ systemctl restart nginx\n")),(0,r.kt)("h4",{id:"elasticsearch"},"Elasticsearch"),(0,r.kt)("p",null,"Elasticsearch installation: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.3.1/elasticsearch-2.3.1.deb\n\n$ dpkg -i elasticsearch-2.3.1.deb\n\n$ systemctl enable elasticsearch\n\n$ nano /etc/elasticsearch/elasticsearch.yml\n# mettre: http.host: \"127.0.0.1\"\n\n$ systemctl restart elasticsearch\n$ curl -X GET 'http://localhost:9200'\n")),(0,r.kt)("p",null,"ElasticSearch 2.3 fonctionne que avec Java 8, donc il faut enlever la version plus recent de Java "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ apt remove openjdk-18-jdk openjdk-18-jre\n$ apt purge openjdk-18-jdk openjdk-18-jre\n$ apt autoremove\n\n$ sudo add-apt-repository --remove ppa:webupd8team/java\n$ apt-get install ppa-purge\n$ ppa-purge ppa:webupd8team/java\n\n$ apt install openjdk-8-jdk openjdk-8-jre\n$ java -version\n")),(0,r.kt)("p",null,"comme voir la liste de plugins: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ /usr/share/elasticsearch/bin/plugin list\n\n$ /usr/share/elasticsearch/bin/plugin install license\n\n$ /usr/share/elasticsearch/bin/plugin install marvel-agent\n")),(0,r.kt)("p",null,"ElasticSearch commandes: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ systemctl start elasticsearch\n$ systemctl restart elasticsearch\n$ systemctl status elasticsearch\n")),(0,r.kt)("h4",{id:"kibana"},"Kibana"),(0,r.kt)("p",null,"kibana 4.5 installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ wget https://download.elastic.co/kibana/kibana/kibana_4.5.3_amd64.deb\n$ dpkg -i kibana_4.5.3_amd64.deb\n")),(0,r.kt)("p",null,"kibana d\xe9bug: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ systemctl status kibana\n$ tail -f /var/log/kibana/kibana.stderr \n$ chmod -R kibana:kibana /opt/kibana/optimize/.\n")),(0,r.kt)("p",null,"comme voir la liste de plugins: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ /opt/kibana/bin/kibana plugin --list\n")),(0,r.kt)("p",null,"comme installer un plugin: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ /opt/kibana/bin/kibana plugin --install elasticsearch/marvel/2.3.1\n$ /opt/kibana/bin/kibana plugin --install elastic/sense/latest\n")),(0,r.kt)("p",null,"comme enlever un plugin: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ /opt/kibana/bin/kibana plugin --remove marvel\n")),(0,r.kt)("p",null,"kibana service commandes: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sudo systemctl enable kibana\n$ sudo systemctl start kibana\n$ sudo systemctl restart kibana\n$ sudo systemctl status kibana\n\n\n$ htpasswd -c /etc/nginx/htpasswd.users kibanaadmin\n$ nano /etc/nginx/sites-available/default \n$ nginx -t \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"server {\n        listen 8089;\n\n        server_name kibana.medflixs.com;\n\n        auth_basic \"Restricted Access\";\n        auth_basic_user_file /etc/nginx/htpasswd.users;\n\n        location / {\n            proxy_pass http://localhost:5601;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection 'upgrade';\n            proxy_set_header Host $host;\n            proxy_cache_bypass $http_upgrade;        \n        }\n}\n")))}u.isMDXComponent=!0}}]);