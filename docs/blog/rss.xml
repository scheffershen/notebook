<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>My Notes Blog</title>
        <link>https://scheffershen.github.io/notebook/blog</link>
        <description>My Notes Blog</description>
        <lastBuildDate>Mon, 13 Dec 2021 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Comment optimiser l'application symfony]]></title>
            <link>https://scheffershen.github.io/notebook/blog/comment-optimiser-l-application-symfony</link>
            <guid>comment-optimiser-l-application-symfony</guid>
            <pubDate>Mon, 13 Dec 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[1. Activer OpCache extension]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-activer-opcache-extension">1. Activer OpCache extension<a class="hash-link" href="#1-activer-opcache-extension" title="Direct link to heading">​</a></h3><p>OpCache. Il compile et optimise les scripts PHP et les met en cache mémoire afin qu'ils ne soient pas compilés chaque fois que la page est chargée.</p><p>installation: </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt install php7.4-opcache</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>configuration: </p><p>/etc/php7.4/conf.d/opcache.ini </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">opcache.memory_consumption=512 ;for caching all compiled files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opcache.interned_strings_buffer=32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opcache.max_accelerated_files=32531 ;by default can cache 2000 files</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opcache.revalidate_freq=60</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opcache.fast_shutdown=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opcache.enable_cli=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opcache.enable=1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">opcache.save_comments=1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-asynchroniser-les-requêts-simultanément">2. Asynchroniser les requêts simultanément<a class="hash-link" href="#2-asynchroniser-les-requêts-simultanément" title="Direct link to heading">​</a></h3><p>exemple 1: symfony 3.4 et php 7.2</p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">use Icicle\{Coroutine\Coroutine, Loop, Awaitable};</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$_tickets =  new Coroutine($ticket-&gt;findAll());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$tickets = $_tickets-&gt;wait();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$_interactions =  new Coroutine($interaction-&gt;findAll());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$interactions = $_interactions-&gt;wait();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$_faqs =  new Coroutine($faq-&gt;findAll());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$faqs = $_faqs-&gt;wait();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Loop\Run();</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-utiliser-la-fonction-générateur-pour-consommer-moins-des-mémoires">3. Utiliser la fonction générateur pour consommer moins des mémoires<a class="hash-link" href="#3-utiliser-la-fonction-générateur-pour-consommer-moins-des-mémoires" title="Direct link to heading">​</a></h3><p>Un générateur vous permet d'écrire du code qui utilise foreach pour parcourir un jeu de données, sans avoir à construire un tableau en mémoire pouvant conduire à dépasser la limite de la mémoire ou nécessiter un temps important pour sa génération.</p><p>une fonction générateur, qui est identique à une fonction normale, mis à part le fait qu'au lieu de retourner une seule fois, un générateur peut utiliser yield autant de fois que nécessaire, afin de fournir les valeurs à parcourir.</p><p>Un exemple simple de ce mécanisme est la ré-implémentation de la fonction range() sous la forme d'un générateur. La fonction standard range() doit générer un tableau contenant chaque valeur, et le retourner, ce qui peut conduire à des tableaux de taille importante : par exemple, l'appel du code range(0, 1000000) peut consommer nettement plus de 100 Mo de mémoire.</p><p>Comme alternative, nous pouvons implémenter un générateur xrange(), qui n'aura en besoin mémoire que la seule création d'un objet Iterator, et devra garder trace en interne du statut courant du générateur, ce qui revient à une consommation mémoire inférieure à 1 Ko.</p><p>exemple: findAll() </p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    public function findAll()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $queryBuilder = $this-&gt;createQueryBuilder('t')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            -&gt;select('t.id, t.question, t.answer, t.answer, t.date')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            -&gt;orderBy('t.id');</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $limit = 1000;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        $offset = 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        while (true) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $queryBuilder-&gt;setFirstResult($offset);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $queryBuilder-&gt;setMaxResults($limit);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $tickets = $queryBuilder-&gt;getQuery()-&gt;getResult();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            if (count($tickets) === 0) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                break;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            foreach ($tickets as $ticket) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                yield $ticket;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                $this-&gt;_em-&gt;detach($ticket);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $offset += $limit;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    } </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-eviter-dutiliser-select---dans-le-doctrine-requête">3. Eviter d'utiliser "select * " dans le doctrine requête.<a class="hash-link" href="#3-eviter-dutiliser-select---dans-le-doctrine-requête" title="Direct link to heading">​</a></h3><p>exemple: </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">SELECT F.id, F.reference FROM FAQ F WHERE F.isValid = 1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-activer-le-cache-de-doctrine">4. Activer le cache de Doctrine.<a class="hash-link" href="#4-activer-le-cache-de-doctrine" title="Direct link to heading">​</a></h3><p>Il faut savoir qu’il y a 3 types de cache pour Doctrine :</p><ul><li>Query Cache : transformation DQL -&gt; SQL;</li><li>Result Cache : résultat de la requête;</li><li>Metadata Cache : annotation des entities.</li></ul><p>installation: </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt install redis-server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ composer require snc/redis-bundle</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>configuration: </p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Doctrine Configuration</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">doctrine</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">dbal</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">#...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">orm</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">auto_generate_proxy_classes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'%kernel.debug%'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">naming_strategy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> doctrine.orm.naming_strategy.underscore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># IMPORTANT!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">auto_mapping</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">metadata_cache_driver</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> redis</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">query_cache_driver</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> redis</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Mettre en cache le résultat</p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public function findBeers()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $query = $this-&gt;getEntityManager()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        -&gt;createQuery(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            'select beers from MaxpouBeerBundle:Beers b'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $query-&gt;useResultCache(true);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $query-&gt;setResultCacheLifetime(3600); //3600sec = 1 hour</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return $query-&gt;getResult();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Pour nettoyer le cache, voici quelques commandes </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Nettoyer cache des queries</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ php bin/console doctrine:cache:clear-query</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Nettoyer cache des metadatas</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ php bin/console doctrine:cache:clear-metadata</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Nettoyer cache des résultats</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ php bin/console doctrine:cache:clear-result</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Vider la base redis</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ php bin/console redis:flushdb</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-mise-en-cache-les-http-reqêtes">5. Mise en cache les HTTP reqêtes<a class="hash-link" href="#5-mise-en-cache-les-http-reqêtes" title="Direct link to heading">​</a></h3><p>exemple: </p><div class="language-php codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-php codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    $response = $this-&gt;render('SearchManagement/Dci/index.html.twig', [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        'dcis' =&gt; $this-&gt;dciRepository-&gt;findAll(),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $response-&gt;setSharedMaxAge(60);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return $response;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-augementer-le-nombre-des-cores-la-fréquence-de-cpu-et-la-ram">6. Augementer le nombre des cores, la fréquence de cpu, et la RAM<a class="hash-link" href="#6-augementer-le-nombre-des-cores-la-fréquence-de-cpu-et-la-ram" title="Direct link to heading">​</a></h3><p>PHP n'est pas conçu pour le multithreading. Par conséquent, chaque page/requête est servie par un processus PHP et chaque processus se verrouille sur un cœur de processeur.</p><p>Si votre serveur Web a des demandes de pages simultanées, vous aurez également plusieurs processus PHP - chacun utilisant un cœur de processeur - s'exécutant simultanément.</p><p>S'il faut 3 secondes à un cœur de processeur à 2 GHz pour traiter une demande, un cœur de processeur à 3 GHz renvoie la même demande en 2 secondes environ.</p><p>La règle est RAM=2x(Nombre de Cores) Go ou RAM=4x(Nombre de Cores) Go</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-augementer-la-taille-du-swap">7. Augementer la taille du swap<a class="hash-link" href="#7-augementer-la-taille-du-swap" title="Direct link to heading">​</a></h3><p>Augmenter l'espace d'échange (SWAP), la règle d'or est swap=2xRAM.</p><p>Linux supporte la mémoire virtuelle, c'est à dire l'utilisation d'un disque comme extension de la RAM de telle sorte que la taille effective de la mémoire utilisable s'accroît d'autant. Le noyau écrira le contenu d'un bloc mémoire inutilisé sur le disque dur, ainsi la mémoire vive peut être utilisée pour autre chose. Quand ce contenu est à nouveau nécessaire, il est relu en mémoire. Tout ceci se déroule de façon transparente pour l'utilisateur ; les programmes s'exécutant sous Linux voient seulement toute la mémoire disponible et ne remarquent pas que des parties de celle-ci se trouvent sur le disque de temps à autre. Bien sûr, lire et écrire sur le disque dur est plus lent (de l'ordre de mille fois plus lent) qu'en utilisant la mémoire réelle et donc les programmes ne s'exécutent pas aussi vite. La partie du disque dur utilisée comme mémoire virtuelle est appelée espace de swap</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="8-utiliser-le-crontab-pour-les-tâches-lourdes">8. Utiliser le crontab pour les tâches lourdes<a class="hash-link" href="#8-utiliser-le-crontab-pour-les-tâches-lourdes" title="Direct link to heading">​</a></h3><p>Crontab est un outil qui permet de lancer des applications de façon régulière, pratique pour un serveur pour y lancer des scripts de sauvegardes, etc</p>]]></content:encoded>
            <category>symfony</category>
            <category>php</category>
            <category>optimisation</category>
        </item>
    </channel>
</rss>